ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBUART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBUART_Init,"ax",%progbits
  20              		.align	2
  21              		.global	USBUART_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	USBUART_Init, %function
  25              	USBUART_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\USBUART.c"
   1:Generated_Source\PSoC5/USBUART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBUART.c **** * \file USBUART.c
   3:Generated_Source\PSoC5/USBUART.c **** * \version 3.10
   4:Generated_Source\PSoC5/USBUART.c **** *
   5:Generated_Source\PSoC5/USBUART.c **** * \brief
   6:Generated_Source\PSoC5/USBUART.c **** *  This file contains the global USBFS API functions.
   7:Generated_Source\PSoC5/USBUART.c **** *
   8:Generated_Source\PSoC5/USBUART.c **** * Note:
   9:Generated_Source\PSoC5/USBUART.c **** *  Many of the functions use an endpoint number. SRAM arrays are sized with 9
  10:Generated_Source\PSoC5/USBUART.c **** *  elements, so they are indexed directly by epNumber.  The SIE and ARB
  11:Generated_Source\PSoC5/USBUART.c **** *  registers are indexed by variations of epNumber - 1.
  12:Generated_Source\PSoC5/USBUART.c **** *
  13:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
  14:Generated_Source\PSoC5/USBUART.c **** * \copyright
  15:Generated_Source\PSoC5/USBUART.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  16:Generated_Source\PSoC5/USBUART.c **** * You may use this file only in accordance with the license, terms, conditions,
  17:Generated_Source\PSoC5/USBUART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  18:Generated_Source\PSoC5/USBUART.c **** * the software package with which this file was provided.
  19:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
  20:Generated_Source\PSoC5/USBUART.c **** 
  21:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_pvt.h"
  22:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_cydmac.h"
  23:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_hid.h"
  24:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_Dp.h"
  25:Generated_Source\PSoC5/USBUART.c **** 
  26:Generated_Source\PSoC5/USBUART.c **** 
  27:Generated_Source\PSoC5/USBUART.c **** /***************************************
  28:Generated_Source\PSoC5/USBUART.c **** * Global data allocation
  29:Generated_Source\PSoC5/USBUART.c **** ***************************************/
  30:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 2


  31:Generated_Source\PSoC5/USBUART.c **** /** Indicates whether the USBFS has been initialized. The variable is
  32:Generated_Source\PSoC5/USBUART.c **** * initialized to 0 after device reset and set to 1 the first time USBFS_Start()
  33:Generated_Source\PSoC5/USBUART.c **** * is called. This allows the Component to restart without reinitialization after
  34:Generated_Source\PSoC5/USBUART.c **** * the first call to the USBFS_Start() routine.
  35:Generated_Source\PSoC5/USBUART.c **** * If re-initialization of the Component is required, the variable should be set
  36:Generated_Source\PSoC5/USBUART.c **** * to 0 before the USBFS_Start() routine is called. Alternatively, the USBFS can
  37:Generated_Source\PSoC5/USBUART.c **** * be reinitialized by calling both USBFS_Init() and USBFS_InitComponent()
  38:Generated_Source\PSoC5/USBUART.c **** * functions.
  39:Generated_Source\PSoC5/USBUART.c **** */
  40:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_initVar = 0u;
  41:Generated_Source\PSoC5/USBUART.c **** 
  42:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
  43:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC4)
  44:Generated_Source\PSoC5/USBUART.c ****         static void USBUART_InitEpDma(void);
  45:Generated_Source\PSoC5/USBUART.c **** 
  46:Generated_Source\PSoC5/USBUART.c ****         /* DMA chanels assigend for endpoints. */
  47:Generated_Source\PSoC5/USBUART.c ****         const uint8 USBUART_DmaChan[USBUART_MAX_EP] =
  48:Generated_Source\PSoC5/USBUART.c ****         {
  49:Generated_Source\PSoC5/USBUART.c ****             0u,
  50:Generated_Source\PSoC5/USBUART.c ****             0u,
  51:Generated_Source\PSoC5/USBUART.c ****             0u,
  52:Generated_Source\PSoC5/USBUART.c ****             0u,
  53:Generated_Source\PSoC5/USBUART.c ****             0u,
  54:Generated_Source\PSoC5/USBUART.c ****             0u,
  55:Generated_Source\PSoC5/USBUART.c ****             0u,
  56:Generated_Source\PSoC5/USBUART.c ****             0u,
  57:Generated_Source\PSoC5/USBUART.c ****             0u,
  58:Generated_Source\PSoC5/USBUART.c ****         };        
  59:Generated_Source\PSoC5/USBUART.c ****     #else
  60:Generated_Source\PSoC5/USBUART.c ****         /* DMA chanels assigend for endpoints. */
  61:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaChan[USBUART_MAX_EP];
  62:Generated_Source\PSoC5/USBUART.c ****         
  63:Generated_Source\PSoC5/USBUART.c ****         /* DMA TDs require for PSoC 3/5LP operation. */
  64:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaTd[USBUART_MAX_EP];
  65:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC4) */
  66:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
  67:Generated_Source\PSoC5/USBUART.c **** 
  68:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
  69:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
  70:Generated_Source\PSoC5/USBUART.c ****     /* Number of DMA bursts. */
  71:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpBurstCnt   [USBUART_MAX_EP];
  72:Generated_Source\PSoC5/USBUART.c ****     
  73:Generated_Source\PSoC5/USBUART.c ****     /* Number of bytes to transfer in last DMA burst. */
  74:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpLastBurstEl[USBUART_MAX_EP];
  75:Generated_Source\PSoC5/USBUART.c **** 
  76:Generated_Source\PSoC5/USBUART.c ****     /* Storage for arrays above. */
  77:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpBurstCntBackup  [USBUART_MAX_EP];
  78:Generated_Source\PSoC5/USBUART.c ****     uint32 USBUART_DmaEpBufferAddrBackup[USBUART_MAX_EP];
  79:Generated_Source\PSoC5/USBUART.c ****      
  80:Generated_Source\PSoC5/USBUART.c ****     /* DMA trigger mux output for usb.dma_req[0-7]. */
  81:Generated_Source\PSoC5/USBUART.c ****     const uint8 USBUART_DmaReqOut[USBUART_MAX_EP] =
  82:Generated_Source\PSoC5/USBUART.c ****     {
  83:Generated_Source\PSoC5/USBUART.c ****         0u,
  84:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep1_dma__TR_OUTPUT,
  85:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep2_dma__TR_OUTPUT,
  86:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep3_dma__TR_OUTPUT,
  87:Generated_Source\PSoC5/USBUART.c ****         0u,
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 3


  88:Generated_Source\PSoC5/USBUART.c ****         0u,
  89:Generated_Source\PSoC5/USBUART.c ****         0u,
  90:Generated_Source\PSoC5/USBUART.c ****         0u,
  91:Generated_Source\PSoC5/USBUART.c ****         0u,
  92:Generated_Source\PSoC5/USBUART.c ****     };
  93:Generated_Source\PSoC5/USBUART.c **** 
  94:Generated_Source\PSoC5/USBUART.c ****     /* DMA trigger mux output for usb.dma_burstend[0-7]. */
  95:Generated_Source\PSoC5/USBUART.c ****     const uint8 USBUART_DmaBurstEndOut[USBUART_MAX_EP] =
  96:Generated_Source\PSoC5/USBUART.c ****     {
  97:Generated_Source\PSoC5/USBUART.c ****         0u,
  98:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_0_TR_OUTPUT,
  99:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_1_TR_OUTPUT,
 100:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_2_TR_OUTPUT,
 101:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_3_TR_OUTPUT,
 102:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_4_TR_OUTPUT,
 103:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_5_TR_OUTPUT,
 104:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_6_TR_OUTPUT,
 105:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_7_TR_OUTPUT
 106:Generated_Source\PSoC5/USBUART.c ****     };
 107:Generated_Source\PSoC5/USBUART.c ****     
 108:Generated_Source\PSoC5/USBUART.c **** #else
 109:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_DMA_AUTO_OPT == 0u)
 110:Generated_Source\PSoC5/USBUART.c ****         static uint8 clearInDataRdyStatus = USBUART_ARB_EPX_CFG_DEFAULT;
 111:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaNextTd[USBUART_MAX_EP];
 112:Generated_Source\PSoC5/USBUART.c ****         const uint8 USBUART_epX_TD_TERMOUT_EN[USBUART_MAX_EP] =
 113:Generated_Source\PSoC5/USBUART.c ****         {
 114:Generated_Source\PSoC5/USBUART.c ****             0u,
 115:Generated_Source\PSoC5/USBUART.c ****             0u,
 116:Generated_Source\PSoC5/USBUART.c ****             0u,
 117:Generated_Source\PSoC5/USBUART.c ****             0u,
 118:Generated_Source\PSoC5/USBUART.c ****             0u,
 119:Generated_Source\PSoC5/USBUART.c ****             0u,
 120:Generated_Source\PSoC5/USBUART.c ****             0u,
 121:Generated_Source\PSoC5/USBUART.c ****             0u,
 122:Generated_Source\PSoC5/USBUART.c ****             0u,
 123:Generated_Source\PSoC5/USBUART.c ****         };
 124:Generated_Source\PSoC5/USBUART.c **** 
 125:Generated_Source\PSoC5/USBUART.c ****         volatile uint16 USBUART_inLength[USBUART_MAX_EP];
 126:Generated_Source\PSoC5/USBUART.c ****         const uint8 *USBUART_inDataPointer[USBUART_MAX_EP];
 127:Generated_Source\PSoC5/USBUART.c ****         volatile uint8 USBUART_inBufFull[USBUART_MAX_EP];
 128:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
 129:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 130:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 131:Generated_Source\PSoC5/USBUART.c **** 
 132:Generated_Source\PSoC5/USBUART.c **** 
 133:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 134:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Start
 135:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 136:Generated_Source\PSoC5/USBUART.c **** *
 137:Generated_Source\PSoC5/USBUART.c **** *   This function performs all required initialization for the USBFS component.
 138:Generated_Source\PSoC5/USBUART.c **** *   After this function call, the USB device initiates communication with the
 139:Generated_Source\PSoC5/USBUART.c **** *   host by pull-up D+ line. This is the preferred method to begin component
 140:Generated_Source\PSoC5/USBUART.c **** *   operation.
 141:Generated_Source\PSoC5/USBUART.c **** *
 142:Generated_Source\PSoC5/USBUART.c **** *   Note that global interrupts have to be enabled because interrupts are
 143:Generated_Source\PSoC5/USBUART.c **** *   required for USBFS component operation.
 144:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 4


 145:Generated_Source\PSoC5/USBUART.c **** *   PSoC 4200L devices: when USBFS component configured to DMA with Automatic
 146:Generated_Source\PSoC5/USBUART.c **** *   Buffer Management, the DMA interrupt priority is changed to the highest
 147:Generated_Source\PSoC5/USBUART.c **** *   (priority 0) inside this function.
 148:Generated_Source\PSoC5/USBUART.c **** *
 149:Generated_Source\PSoC5/USBUART.c **** *   PSoC 3/PSoC 5LP devices: when USBFS component configured to DMA with
 150:Generated_Source\PSoC5/USBUART.c **** *   Automatic Buffer Management, the Arbiter interrupt priority is changed to
 151:Generated_Source\PSoC5/USBUART.c **** *   the highest (priority 0) inside this function.
 152:Generated_Source\PSoC5/USBUART.c **** *
 153:Generated_Source\PSoC5/USBUART.c **** *  \param device
 154:Generated_Source\PSoC5/USBUART.c **** *          Contains the device number of the desired device descriptor.
 155:Generated_Source\PSoC5/USBUART.c **** *          The device number can be found in the Device Descriptor Tab of
 156:Generated_Source\PSoC5/USBUART.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 157:Generated_Source\PSoC5/USBUART.c **** *          in the "Device Number" field.
 158:Generated_Source\PSoC5/USBUART.c **** *  \param mode:
 159:Generated_Source\PSoC5/USBUART.c **** *   The operating voltage. This determines whether the voltage regulator
 160:Generated_Source\PSoC5/USBUART.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 161:Generated_Source\PSoC5/USBUART.c **** *   operation. Symbolic names and their associated values are given in the
 162:Generated_Source\PSoC5/USBUART.c **** *   following list.
 163:Generated_Source\PSoC5/USBUART.c **** *
 164:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_3V_OPERATION* - Disable voltage regulator and pass-
 165:Generated_Source\PSoC5/USBUART.c **** *                                      through Vcc for pull-up
 166:Generated_Source\PSoC5/USBUART.c **** *
 167:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_5V_OPERATION* - Enable voltage regulator and use
 168:Generated_Source\PSoC5/USBUART.c **** *                                      regulator for pull-up
 169:Generated_Source\PSoC5/USBUART.c **** *
 170:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_DWR_POWER_OPERATION* - Enable or disable the voltage
 171:Generated_Source\PSoC5/USBUART.c **** *                                      regulator depending on the power supply
 172:Generated_Source\PSoC5/USBUART.c **** *                                      voltage configuration in the DWR tab.
 173:Generated_Source\PSoC5/USBUART.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 174:Generated_Source\PSoC5/USBUART.c **** *                                      voltage is considered and for PSoC 4A-L,
 175:Generated_Source\PSoC5/USBUART.c **** *                                      the VBUS supply voltage is considered.*
 176:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 177:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_initVar
 178:Generated_Source\PSoC5/USBUART.c **** *
 179:Generated_Source\PSoC5/USBUART.c **** * \sideeffect
 180:Generated_Source\PSoC5/USBUART.c **** *   This function will reset all communication states to default.
 181:Generated_Source\PSoC5/USBUART.c **** *
 182:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 183:Generated_Source\PSoC5/USBUART.c **** *  No.
 184:Generated_Source\PSoC5/USBUART.c **** *
 185:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 186:Generated_Source\PSoC5/USBUART.c **** void USBUART_Start(uint8 device, uint8 mode) 
 187:Generated_Source\PSoC5/USBUART.c **** {
 188:Generated_Source\PSoC5/USBUART.c ****     if (0u == USBUART_initVar)
 189:Generated_Source\PSoC5/USBUART.c ****     {
 190:Generated_Source\PSoC5/USBUART.c ****         USBUART_Init();
 191:Generated_Source\PSoC5/USBUART.c ****         USBUART_initVar = 1u;
 192:Generated_Source\PSoC5/USBUART.c ****     }
 193:Generated_Source\PSoC5/USBUART.c **** 
 194:Generated_Source\PSoC5/USBUART.c ****     USBUART_InitComponent(device, mode);
 195:Generated_Source\PSoC5/USBUART.c **** }
 196:Generated_Source\PSoC5/USBUART.c **** 
 197:Generated_Source\PSoC5/USBUART.c **** 
 198:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 199:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Init
 200:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 201:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 5


 202:Generated_Source\PSoC5/USBUART.c **** * This function initializes or restores the component according to the
 203:Generated_Source\PSoC5/USBUART.c **** * customizer Configure dialog settings. It is not necessary to call
 204:Generated_Source\PSoC5/USBUART.c **** * USBUART_Init() because the USBUART_Start() routine calls
 205:Generated_Source\PSoC5/USBUART.c **** * this function and is the preferred method to begin component operation.
 206:Generated_Source\PSoC5/USBUART.c **** *
 207:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 208:Generated_Source\PSoC5/USBUART.c **** *  No.
 209:Generated_Source\PSoC5/USBUART.c **** *
 210:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 211:Generated_Source\PSoC5/USBUART.c **** void USBUART_Init(void) 
 212:Generated_Source\PSoC5/USBUART.c **** {
  28              		.loc 1 212 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 3, -24
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
 213:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 214:Generated_Source\PSoC5/USBUART.c ****     /* Enable clock to USB IP. */
 215:Generated_Source\PSoC5/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_CSR_CLK_EN;
 216:Generated_Source\PSoC5/USBUART.c **** 
 217:Generated_Source\PSoC5/USBUART.c ****     /* The internal regulator (CR1.REG_ENABLE) is enabled in
 218:Generated_Source\PSoC5/USBUART.c ****     * USBUART_InitComponent() if it is required.
 219:Generated_Source\PSoC5/USBUART.c ****     */
 220:Generated_Source\PSoC5/USBUART.c **** 
 221:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO control on drive mode of D+ and D- pins. */
 222:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= ~ (uint32) USBUART_USBIO_CR1_IOMODE;
 223:Generated_Source\PSoC5/USBUART.c **** 
 224:Generated_Source\PSoC5/USBUART.c ****     /* Set number of LF CLK to detect UBS bus reset. */
 225:Generated_Source\PSoC5/USBUART.c ****     USBUART_BUS_RST_CNT_REG = USBUART_DEFUALT_BUS_RST_CNT;
 226:Generated_Source\PSoC5/USBUART.c **** 
 227:Generated_Source\PSoC5/USBUART.c ****     /* Select VBUS detection source and clear PHY isolate. The application level
 228:Generated_Source\PSoC5/USBUART.c ****     * must ensure that VBUS is valid. There is no need to wait 2us before VBUS is valid.
 229:Generated_Source\PSoC5/USBUART.c ****     */
 230:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG = USBUART_DEFAULT_POWER_CTRL_VBUS;
 231:Generated_Source\PSoC5/USBUART.c **** 
 232:Generated_Source\PSoC5/USBUART.c ****     /* Enable PHY detector and single-ended and differential receivers. */
 233:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG |= USBUART_DEFAULT_POWER_CTRL_PHY;
 234:Generated_Source\PSoC5/USBUART.c **** 
 235:Generated_Source\PSoC5/USBUART.c ****     /* Suspend clear sequence. */
 236:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_SUSPEND;
 237:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_SUSPEND_DEL_DISABLE);
 238:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_SUSPEND_DEL;
 239:Generated_Source\PSoC5/USBUART.c **** 
 240:Generated_Source\PSoC5/USBUART.c ****     /* Sets IMO lock options and clear all other bits. */
 241:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = USBUART_DEFUALT_CR1;
 242:Generated_Source\PSoC5/USBUART.c **** 
 243:Generated_Source\PSoC5/USBUART.c ****     /* Configure level (hi, lo, med) for each interrupt source. */
 244:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_LVL_SEL_REG = USBUART_DEFAULT_INTR_LVL_SEL;
 245:Generated_Source\PSoC5/USBUART.c **** 
 246:Generated_Source\PSoC5/USBUART.c ****     /* Configure interrupt sources from: SOF, Bus Reset and EP0. */
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 6


 247:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG = USBUART_DEFAULT_INTR_SIE_MASK;
 248:Generated_Source\PSoC5/USBUART.c **** 
 249:Generated_Source\PSoC5/USBUART.c **** #else
 250:Generated_Source\PSoC5/USBUART.c ****     uint8 enableInterrupts = CyEnterCriticalSection();
  40              		.loc 1 250 0
  41 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  42              	.LVL0:
  43 0006 0646     		mov	r6, r0
  44              	.LVL1:
 251:Generated_Source\PSoC5/USBUART.c **** 
 252:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 253:Generated_Source\PSoC5/USBUART.c ****     uint16 i;
 254:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 255:Generated_Source\PSoC5/USBUART.c **** 
 256:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block. */
 257:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_ACT_CFG_REG |= USBUART_PM_ACT_EN_FSUSB;
  45              		.loc 1 257 0
  46 0008 404A     		ldr	r2, .L3
  47 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  48 000c 43F00103 		orr	r3, r3, #1
  49 0010 1370     		strb	r3, [r2]
 258:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block for Standby Power Mode. */
 259:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_STBY_CFG_REG |= USBUART_PM_STBY_EN_FSUSB;
  50              		.loc 1 259 0
  51 0012 1032     		adds	r2, r2, #16
  52 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  53 0016 43F00103 		orr	r3, r3, #1
  54 001a 1370     		strb	r3, [r2]
 260:Generated_Source\PSoC5/USBUART.c **** 
 261:Generated_Source\PSoC5/USBUART.c ****     /* Enable core clock. */
 262:Generated_Source\PSoC5/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_ENABLE;
  55              		.loc 1 262 0
  56 001c 0127     		movs	r7, #1
  57 001e 3C4B     		ldr	r3, .L3+4
  58 0020 1F70     		strb	r7, [r3]
 263:Generated_Source\PSoC5/USBUART.c **** 
 264:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = USBUART_CR1_ENABLE_LOCK;
  59              		.loc 1 264 0
  60 0022 0225     		movs	r5, #2
  61 0024 943B     		subs	r3, r3, #148
  62 0026 1D70     		strb	r5, [r3]
 265:Generated_Source\PSoC5/USBUART.c **** 
 266:Generated_Source\PSoC5/USBUART.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE. */
 267:Generated_Source\PSoC5/USBUART.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled. */
 268:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR0_REG &= (uint8) ~USBUART_USBIO_CR0_TEN;
  63              		.loc 1 268 0
  64 0028 02F5E252 		add	r2, r2, #7232
  65 002c 1B32     		adds	r2, r2, #27
  66 002e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  67 0030 03F07F03 		and	r3, r3, #127
  68 0034 1370     		strb	r3, [r2]
 269:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
  69              		.loc 1 269 0
  70 0036 0020     		movs	r0, #0
  71 0038 FFF7FEFF 		bl	CyDelayUs
  72              	.LVL2:
 270:Generated_Source\PSoC5/USBUART.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 7


 271:Generated_Source\PSoC5/USBUART.c ****     *  high. These bits will be set low by the power manager out-of-reset.
 272:Generated_Source\PSoC5/USBUART.c ****     *  Also confirm USBIO pull-up is disabled.
 273:Generated_Source\PSoC5/USBUART.c ****     */
 274:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG &= (uint8) ~(USBUART_PM_USB_CR0_PD_N |
  73              		.loc 1 274 0
  74 003c 354C     		ldr	r4, .L3+8
  75 003e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  76 0040 03F0F903 		and	r3, r3, #249
  77 0044 2370     		strb	r3, [r4]
 275:Generated_Source\PSoC5/USBUART.c ****                                                  USBUART_PM_USB_CR0_PD_PULLUP_N);
 276:Generated_Source\PSoC5/USBUART.c **** 
 277:Generated_Source\PSoC5/USBUART.c ****     /* Select IOMODE to USB mode. */
 278:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint8) ~USBUART_USBIO_CR1_IOMODE;
  78              		.loc 1 278 0
  79 0046 344A     		ldr	r2, .L3+12
  80 0048 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  81 004a 03F0DF03 		and	r3, r3, #223
  82 004e 1370     		strb	r3, [r2]
 279:Generated_Source\PSoC5/USBUART.c **** 
 280:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO reference by setting PM.USB_CR0.fsusbio_ref_en. */
 281:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_REF_EN;
  83              		.loc 1 281 0
  84 0050 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  85 0052 3B43     		orrs	r3, r3, r7
  86 0054 2370     		strb	r3, [r4]
 282:Generated_Source\PSoC5/USBUART.c ****     /* Reference is available for 1us after regulator is enabled. */
 283:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_1US);
  87              		.loc 1 283 0
  88 0056 3846     		mov	r0, r7
  89 0058 FFF7FEFF 		bl	CyDelayUs
  90              	.LVL3:
 284:Generated_Source\PSoC5/USBUART.c ****     /* OR 40us after power is restored. */
 285:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_VREF_RESTORE);
  91              		.loc 1 285 0
  92 005c 2820     		movs	r0, #40
  93 005e FFF7FEFF 		bl	CyDelayUs
  94              	.LVL4:
 286:Generated_Source\PSoC5/USBUART.c ****     /* Ensure single-ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). */
 287:Generated_Source\PSoC5/USBUART.c ****     USBUART_DM_INP_DIS_REG &= (uint8) ~USBUART_DM_MASK;
  95              		.loc 1 287 0
  96 0062 2E4B     		ldr	r3, .L3+16
  97 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  98 0066 02F07F02 		and	r2, r2, #127
  99 006a 1A70     		strb	r2, [r3]
 288:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG &= (uint8) ~USBUART_DP_MASK;
 100              		.loc 1 288 0
 101 006c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 102 006e 02F0BF02 		and	r2, r2, #191
 103 0072 1A70     		strb	r2, [r3]
 289:Generated_Source\PSoC5/USBUART.c **** 
 290:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO. */
 291:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_N;
 104              		.loc 1 291 0
 105 0074 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 106 0076 2B43     		orrs	r3, r3, r5
 107 0078 2370     		strb	r3, [r4]
 292:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_PD_PULLUP_N_ENABLE);
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 8


 108              		.loc 1 292 0
 109 007a 2846     		mov	r0, r5
 110 007c FFF7FEFF 		bl	CyDelayUs
 111              	.LVL5:
 293:Generated_Source\PSoC5/USBUART.c ****     /* Set USBIO pull-up enable. */
 294:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_PULLUP_N;
 112              		.loc 1 294 0
 113 0080 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 114 0082 43F00403 		orr	r3, r3, #4
 115 0086 2370     		strb	r3, [r4]
 295:Generated_Source\PSoC5/USBUART.c **** 
 296:Generated_Source\PSoC5/USBUART.c ****     /* Reset Arbiter Write Address register for endpoint 1. */
 297:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_PTR,     0u);
 116              		.loc 1 297 0
 117 0088 0023     		movs	r3, #0
 118 008a 254A     		ldr	r2, .L3+20
 119 008c 1370     		strb	r3, [r2]
 298:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_MSB_PTR, 0u);
 120              		.loc 1 298 0
 121 008e 0132     		adds	r2, r2, #1
 122 0090 1370     		strb	r3, [r2]
 299:Generated_Source\PSoC5/USBUART.c **** 
 300:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 301:Generated_Source\PSoC5/USBUART.c ****     /* Initialize transfer descriptor. This will be used to detect DMA state - initialized or not. 
 302:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_EP; ++i)
 303:Generated_Source\PSoC5/USBUART.c ****     {
 304:Generated_Source\PSoC5/USBUART.c ****         USBUART_DmaTd[i] = DMA_INVALID_TD;
 305:Generated_Source\PSoC5/USBUART.c **** 
 306:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
 307:Generated_Source\PSoC5/USBUART.c ****         USBUART_DmaNextTd[i] = DMA_INVALID_TD;
 308:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
 309:Generated_Source\PSoC5/USBUART.c ****     }
 310:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 311:Generated_Source\PSoC5/USBUART.c **** 
 312:Generated_Source\PSoC5/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 123              		.loc 1 312 0
 124 0092 3046     		mov	r0, r6
 125 0094 FFF7FEFF 		bl	CyExitCriticalSection
 126              	.LVL6:
 313:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 314:Generated_Source\PSoC5/USBUART.c **** 
 315:Generated_Source\PSoC5/USBUART.c ****     /* Configure interrupts from USB block. */
 316:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 317:Generated_Source\PSoC5/USBUART.c ****     /* Configure hi_int: set handler and priority. */
 318:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_HI_VECT_NUM,  USBUART_INTR_HI_PRIORITY);
 319:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_HI_VECT_NUM, &USBUART_INTR_HI_ISR);
 320:Generated_Source\PSoC5/USBUART.c **** 
 321:Generated_Source\PSoC5/USBUART.c ****     /* Configure lo_int: set handler and priority. */
 322:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_LO_VECT_NUM,  USBUART_INTR_LO_PRIORITY);
 323:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_LO_VECT_NUM, &USBUART_INTR_LO_ISR);
 324:Generated_Source\PSoC5/USBUART.c **** 
 325:Generated_Source\PSoC5/USBUART.c ****     /* Configure med_int: set handler and priority (routed through DSI). */
 326:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_MED_VECT_NUM,  USBUART_INTR_MED_PRIORITY);
 327:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_MED_VECT_NUM, &USBUART_INTR_MED_ISR);
 328:Generated_Source\PSoC5/USBUART.c **** 
 329:Generated_Source\PSoC5/USBUART.c **** #else
 330:Generated_Source\PSoC5/USBUART.c ****     /* Set bus reset interrupt. */
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 9


 331:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority(USBUART_BUS_RESET_VECT_NUM, USBUART_BUS_RESET_PRIOR);
 127              		.loc 1 331 0
 128 0098 0721     		movs	r1, #7
 129 009a 1720     		movs	r0, #23
 130 009c FFF7FEFF 		bl	CyIntSetPriority
 131              	.LVL7:
 332:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_BUS_RESET_VECT_NUM,   &USBUART_BUS_RESET_ISR);
 132              		.loc 1 332 0
 133 00a0 2049     		ldr	r1, .L3+24
 134 00a2 1720     		movs	r0, #23
 135 00a4 FFF7FEFF 		bl	CyIntSetVector
 136              	.LVL8:
 333:Generated_Source\PSoC5/USBUART.c **** 
 334:Generated_Source\PSoC5/USBUART.c ****     /* Set Control Endpoint Interrupt. */
 335:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority(USBUART_EP_0_VECT_NUM, USBUART_EP_0_PRIOR);
 137              		.loc 1 335 0
 138 00a8 0721     		movs	r1, #7
 139 00aa 1820     		movs	r0, #24
 140 00ac FFF7FEFF 		bl	CyIntSetPriority
 141              	.LVL9:
 336:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_EP_0_VECT_NUM,   &USBUART_EP_0_ISR);
 142              		.loc 1 336 0
 143 00b0 1D49     		ldr	r1, .L3+28
 144 00b2 1820     		movs	r0, #24
 145 00b4 FFF7FEFF 		bl	CyIntSetVector
 146              	.LVL10:
 337:Generated_Source\PSoC5/USBUART.c **** 
 338:Generated_Source\PSoC5/USBUART.c ****     /* Set SOF interrupt. */
 339:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 340:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_SOF_VECT_NUM,  USBUART_SOF_PRIOR);
 147              		.loc 1 340 0
 148 00b8 0721     		movs	r1, #7
 149 00ba 1520     		movs	r0, #21
 150 00bc FFF7FEFF 		bl	CyIntSetPriority
 151              	.LVL11:
 341:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_SOF_VECT_NUM, &USBUART_SOF_ISR);
 152              		.loc 1 341 0
 153 00c0 1A49     		ldr	r1, .L3+32
 154 00c2 1520     		movs	r0, #21
 155 00c4 FFF7FEFF 		bl	CyIntSetVector
 156              	.LVL12:
 342:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 343:Generated_Source\PSoC5/USBUART.c **** 
 344:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 1 Interrupt. */
 345:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 346:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_1_VECT_NUM,  USBUART_EP_1_PRIOR);
 157              		.loc 1 346 0
 158 00c8 0721     		movs	r1, #7
 159 00ca 2846     		mov	r0, r5
 160 00cc FFF7FEFF 		bl	CyIntSetPriority
 161              	.LVL13:
 347:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_1_VECT_NUM,  &USBUART_EP_1_ISR);
 162              		.loc 1 347 0
 163 00d0 1749     		ldr	r1, .L3+36
 164 00d2 2846     		mov	r0, r5
 165 00d4 FFF7FEFF 		bl	CyIntSetVector
 166              	.LVL14:
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 10


 348:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 349:Generated_Source\PSoC5/USBUART.c **** 
 350:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 2 Interrupt. */
 351:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 352:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_2_VECT_NUM,  USBUART_EP_2_PRIOR);
 167              		.loc 1 352 0
 168 00d8 0721     		movs	r1, #7
 169 00da 0320     		movs	r0, #3
 170 00dc FFF7FEFF 		bl	CyIntSetPriority
 171              	.LVL15:
 353:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_2_VECT_NUM, &USBUART_EP_2_ISR);
 172              		.loc 1 353 0
 173 00e0 1449     		ldr	r1, .L3+40
 174 00e2 0320     		movs	r0, #3
 175 00e4 FFF7FEFF 		bl	CyIntSetVector
 176              	.LVL16:
 354:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 355:Generated_Source\PSoC5/USBUART.c **** 
 356:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 3 Interrupt. */
 357:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 358:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_3_VECT_NUM,  USBUART_EP_3_PRIOR);
 177              		.loc 1 358 0
 178 00e8 0721     		movs	r1, #7
 179 00ea 0420     		movs	r0, #4
 180 00ec FFF7FEFF 		bl	CyIntSetPriority
 181              	.LVL17:
 359:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_3_VECT_NUM, &USBUART_EP_3_ISR);
 182              		.loc 1 359 0
 183 00f0 1149     		ldr	r1, .L3+44
 184 00f2 0420     		movs	r0, #4
 185 00f4 FFF7FEFF 		bl	CyIntSetVector
 186              	.LVL18:
 360:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP3_ISR_ACTIVE) */
 361:Generated_Source\PSoC5/USBUART.c **** 
 362:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 4 Interrupt. */
 363:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 364:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_4_VECT_NUM,  USBUART_EP_4_PRIOR);
 365:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_4_VECT_NUM, &USBUART_EP_4_ISR);
 366:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP4_ISR_ACTIVE) */
 367:Generated_Source\PSoC5/USBUART.c **** 
 368:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 5 Interrupt. */
 369:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 370:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_5_VECT_NUM,  USBUART_EP_5_PRIOR);
 371:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_5_VECT_NUM, &USBUART_EP_5_ISR);
 372:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 373:Generated_Source\PSoC5/USBUART.c **** 
 374:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 6 Interrupt. */
 375:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 376:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_6_VECT_NUM,  USBUART_EP_6_PRIOR);
 377:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_6_VECT_NUM, &USBUART_EP_6_ISR);
 378:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP6_ISR_ACTIVE) */
 379:Generated_Source\PSoC5/USBUART.c **** 
 380:Generated_Source\PSoC5/USBUART.c ****      /* Set Data Endpoint 7 Interrupt. */
 381:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 382:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_7_VECT_NUM,  USBUART_EP_7_PRIOR);
 383:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_7_VECT_NUM, &USBUART_EP_7_ISR);
 384:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 11


 385:Generated_Source\PSoC5/USBUART.c **** 
 386:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 8 Interrupt. */
 387:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 388:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_8_VECT_NUM,  USBUART_EP_8_PRIOR);
 389:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_8_VECT_NUM, &USBUART_EP_8_ISR);
 390:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 391:Generated_Source\PSoC5/USBUART.c **** 
 392:Generated_Source\PSoC5/USBUART.c ****     /* Set ARB Interrupt. */
 393:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 394:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_ARB_VECT_NUM,  USBUART_ARB_PRIOR);
 395:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_ARB_VECT_NUM, &USBUART_ARB_ISR);
 396:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE) */
 397:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 398:Generated_Source\PSoC5/USBUART.c **** 
 399:Generated_Source\PSoC5/USBUART.c ****     /* Common: Configure GPIO interrupt for wakeup. */
 400:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_DP_ISR_ACTIVE)
 401:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_DP_INTC_VECT_NUM,  USBUART_DP_INTC_PRIORITY);
 187              		.loc 1 401 0
 188 00f8 0721     		movs	r1, #7
 189 00fa 0C20     		movs	r0, #12
 190 00fc FFF7FEFF 		bl	CyIntSetPriority
 191              	.LVL19:
 402:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_DP_INTC_VECT_NUM, &USBUART_DP_ISR);
 192              		.loc 1 402 0
 193 0100 0E49     		ldr	r1, .L3+48
 194 0102 0C20     		movs	r0, #12
 195 0104 FFF7FEFF 		bl	CyIntSetVector
 196              	.LVL20:
 197 0108 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 198              	.LVL21:
 199              	.L4:
 200 010a 00BF     		.align	2
 201              	.L3:
 202 010c A5430040 		.word	1073759141
 203 0110 9D600040 		.word	1073766557
 204 0114 94430040 		.word	1073759124
 205 0118 12600040 		.word	1073766418
 206 011c F8510040 		.word	1073762808
 207 0120 84600040 		.word	1073766532
 208 0124 00000000 		.word	USBUART_BUS_RESET_ISR
 209 0128 00000000 		.word	USBUART_EP_0_ISR
 210 012c 00000000 		.word	USBUART_SOF_ISR
 211 0130 00000000 		.word	USBUART_EP_1_ISR
 212 0134 00000000 		.word	USBUART_EP_2_ISR
 213 0138 00000000 		.word	USBUART_EP_3_ISR
 214 013c 00000000 		.word	USBUART_DP_ISR
 215              		.cfi_endproc
 216              	.LFE1:
 217              		.size	USBUART_Init, .-USBUART_Init
 218              		.section	.text.USBUART_InitComponent,"ax",%progbits
 219              		.align	2
 220              		.global	USBUART_InitComponent
 221              		.thumb
 222              		.thumb_func
 223              		.type	USBUART_InitComponent, %function
 224              	USBUART_InitComponent:
 225              	.LFB2:
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 12


 403:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_DP_ISR_ACTIVE) */
 404:Generated_Source\PSoC5/USBUART.c **** 
 405:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA && CY_PSOC4)
 406:Generated_Source\PSoC5/USBUART.c ****     /* Initialize DMA channels. */
 407:Generated_Source\PSoC5/USBUART.c ****     USBUART_InitEpDma();
 408:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA && CY_PSOC4) */
 409:Generated_Source\PSoC5/USBUART.c **** }
 410:Generated_Source\PSoC5/USBUART.c **** 
 411:Generated_Source\PSoC5/USBUART.c **** 
 412:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 413:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_InitComponent
 414:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 415:Generated_Source\PSoC5/USBUART.c **** *
 416:Generated_Source\PSoC5/USBUART.c **** *   This function initializes the component’s global variables and initiates
 417:Generated_Source\PSoC5/USBUART.c **** *   communication with the host by pull-up D+ line.
 418:Generated_Source\PSoC5/USBUART.c **** *
 419:Generated_Source\PSoC5/USBUART.c **** * \param device:
 420:Generated_Source\PSoC5/USBUART.c **** *   Contains the device number of the desired device descriptor. The device
 421:Generated_Source\PSoC5/USBUART.c **** *   number can be found in the Device Descriptor Tab of "Configure" dialog,
 422:Generated_Source\PSoC5/USBUART.c **** *   under the settings of desired Device Descriptor, in the *Device Number*
 423:Generated_Source\PSoC5/USBUART.c **** *   field.
 424:Generated_Source\PSoC5/USBUART.c **** *  \param mode:
 425:Generated_Source\PSoC5/USBUART.c **** *   The operating voltage. This determines whether the voltage regulator
 426:Generated_Source\PSoC5/USBUART.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 427:Generated_Source\PSoC5/USBUART.c **** *   operation. Symbolic names and their associated values are given in the
 428:Generated_Source\PSoC5/USBUART.c **** *   following list.
 429:Generated_Source\PSoC5/USBUART.c **** *
 430:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_3V_OPERATION* - Disable voltage regulator and pass-
 431:Generated_Source\PSoC5/USBUART.c **** *                                      through Vcc for pull-up
 432:Generated_Source\PSoC5/USBUART.c **** *
 433:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_5V_OPERATION* - Enable voltage regulator and use
 434:Generated_Source\PSoC5/USBUART.c **** *                                      regulator for pull-up
 435:Generated_Source\PSoC5/USBUART.c **** *
 436:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_DWR_POWER_OPERATION* - Enable or disable the voltage
 437:Generated_Source\PSoC5/USBUART.c **** *                                      regulator depending on the power supply
 438:Generated_Source\PSoC5/USBUART.c **** *                                      voltage configuration in the DWR tab.
 439:Generated_Source\PSoC5/USBUART.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 440:Generated_Source\PSoC5/USBUART.c **** *                                      voltage is considered and for PSoC 4A-L,
 441:Generated_Source\PSoC5/USBUART.c **** *                                      the VBUS supply voltage is considered.
 442:Generated_Source\PSoC5/USBUART.c **** *
 443:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 444:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_device
 445:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_transferState
 446:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configuration
 447:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceStatus
 448:Generated_Source\PSoC5/USBUART.c **** *
 449:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceAddress - Contains the current device address. This
 450:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 451:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using a
 452:Generated_Source\PSoC5/USBUART.c **** *      SET_ADDRESS request.
 453:Generated_Source\PSoC5/USBUART.c **** *
 454:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_lastPacketSize - Initialized to 0;
 455:Generated_Source\PSoC5/USBUART.c **** *
 456:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 457:Generated_Source\PSoC5/USBUART.c **** *  No.
 458:Generated_Source\PSoC5/USBUART.c **** *
 459:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 13


 460:Generated_Source\PSoC5/USBUART.c **** void USBUART_InitComponent(uint8 device, uint8 mode) 
 461:Generated_Source\PSoC5/USBUART.c **** {
 226              		.loc 1 461 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              	.LVL22:
 231 0000 10B5     		push	{r4, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 4, -8
 234              		.cfi_offset 14, -4
 235              	.LVL23:
 462:Generated_Source\PSoC5/USBUART.c ****     /* Initialize _hidProtocol variable to comply with
 463:Generated_Source\PSoC5/USBUART.c ****     *  HID 7.2.6 Set_Protocol Request:
 464:Generated_Source\PSoC5/USBUART.c ****     *  "When initialized, all devices default to report protocol."
 465:Generated_Source\PSoC5/USBUART.c ****     */
 466:Generated_Source\PSoC5/USBUART.c **** #if defined(USBUART_ENABLE_HID_CLASS)
 467:Generated_Source\PSoC5/USBUART.c ****     uint8 i;
 468:Generated_Source\PSoC5/USBUART.c **** 
 469:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 236              		.loc 1 469 0
 237 0002 0023     		movs	r3, #0
 238 0004 04E0     		b	.L6
 239              	.LVL24:
 240              	.L7:
 470:Generated_Source\PSoC5/USBUART.c ****     {
 471:Generated_Source\PSoC5/USBUART.c ****         USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 241              		.loc 1 471 0 discriminator 3
 242 0006 0124     		movs	r4, #1
 243 0008 244A     		ldr	r2, .L14
 244 000a D454     		strb	r4, [r2, r3]
 469:Generated_Source\PSoC5/USBUART.c ****     {
 245              		.loc 1 469 0 discriminator 3
 246 000c 2344     		add	r3, r3, r4
 247              	.LVL25:
 248 000e DBB2     		uxtb	r3, r3
 249              	.LVL26:
 250              	.L6:
 469:Generated_Source\PSoC5/USBUART.c ****     {
 251              		.loc 1 469 0 is_stmt 0 discriminator 1
 252 0010 012B     		cmp	r3, #1
 253 0012 F8D9     		bls	.L7
 472:Generated_Source\PSoC5/USBUART.c ****     }
 473:Generated_Source\PSoC5/USBUART.c **** #endif /* USBUART_ENABLE_HID_CLASS */
 474:Generated_Source\PSoC5/USBUART.c **** 
 475:Generated_Source\PSoC5/USBUART.c ****     /* Store device number to access descriptor. */
 476:Generated_Source\PSoC5/USBUART.c ****     USBUART_device = device;
 254              		.loc 1 476 0 is_stmt 1
 255 0014 224B     		ldr	r3, .L14+4
 256              	.LVL27:
 257 0016 1870     		strb	r0, [r3]
 477:Generated_Source\PSoC5/USBUART.c **** 
 478:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 479:Generated_Source\PSoC5/USBUART.c ****     USBUART_transferState   = USBUART_TRANS_STATE_IDLE;
 258              		.loc 1 479 0
 259 0018 0023     		movs	r3, #0
 260 001a 224A     		ldr	r2, .L14+8
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 14


 261 001c 1370     		strb	r3, [r2]
 480:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 262              		.loc 1 480 0
 263 001e 224A     		ldr	r2, .L14+12
 264 0020 1370     		strb	r3, [r2]
 481:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 265              		.loc 1 481 0
 266 0022 224A     		ldr	r2, .L14+16
 267 0024 1370     		strb	r3, [r2]
 482:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 268              		.loc 1 482 0
 269 0026 224A     		ldr	r2, .L14+20
 270 0028 1370     		strb	r3, [r2]
 483:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 271              		.loc 1 483 0
 272 002a 224A     		ldr	r2, .L14+24
 273 002c 1370     		strb	r3, [r2]
 484:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 274              		.loc 1 484 0
 275 002e 224A     		ldr	r2, .L14+28
 276 0030 1370     		strb	r3, [r2]
 485:Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 277              		.loc 1 485 0
 278 0032 224A     		ldr	r2, .L14+32
 279 0034 1370     		strb	r3, [r2]
 486:Generated_Source\PSoC5/USBUART.c **** 
 487:Generated_Source\PSoC5/USBUART.c ****     /* Enable component interrupts. */
 488:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 489:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_HI_VECT_NUM);
 490:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_MED_VECT_NUM);
 491:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_LO_VECT_NUM);
 492:Generated_Source\PSoC5/USBUART.c **** #else
 493:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_BUS_RESET_VECT_NUM);
 280              		.loc 1 493 0
 281 0036 224B     		ldr	r3, .L14+36
 282 0038 4FF40002 		mov	r2, #8388608
 283 003c 1A60     		str	r2, [r3]
 494:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_EP_0_VECT_NUM);
 284              		.loc 1 494 0
 285 003e 4FF08072 		mov	r2, #16777216
 286 0042 1A60     		str	r2, [r3]
 495:Generated_Source\PSoC5/USBUART.c **** 
 496:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 497:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_SOF_VECT_NUM);
 287              		.loc 1 497 0
 288 0044 4FF40012 		mov	r2, #2097152
 289 0048 1A60     		str	r2, [r3]
 498:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 499:Generated_Source\PSoC5/USBUART.c **** 
 500:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 501:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_1_VECT_NUM);
 290              		.loc 1 501 0
 291 004a 0422     		movs	r2, #4
 292 004c 1A60     		str	r2, [r3]
 502:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 503:Generated_Source\PSoC5/USBUART.c **** 
 504:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 15


 505:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_2_VECT_NUM);
 293              		.loc 1 505 0
 294 004e 0822     		movs	r2, #8
 295 0050 1A60     		str	r2, [r3]
 506:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 507:Generated_Source\PSoC5/USBUART.c **** 
 508:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 509:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_3_VECT_NUM);
 296              		.loc 1 509 0
 297 0052 1022     		movs	r2, #16
 298 0054 1A60     		str	r2, [r3]
 510:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 511:Generated_Source\PSoC5/USBUART.c **** 
 512:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 513:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_4_VECT_NUM);
 514:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 515:Generated_Source\PSoC5/USBUART.c **** 
 516:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 517:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_5_VECT_NUM);
 518:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 519:Generated_Source\PSoC5/USBUART.c **** 
 520:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 521:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_6_VECT_NUM);
 522:Generated_Source\PSoC5/USBUART.c ****     #endif /* USBUART_EP6_ISR_REMOVE */
 523:Generated_Source\PSoC5/USBUART.c **** 
 524:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 525:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_7_VECT_NUM);
 526:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 527:Generated_Source\PSoC5/USBUART.c **** 
 528:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 529:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_8_VECT_NUM);
 530:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 531:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 532:Generated_Source\PSoC5/USBUART.c **** 
 533:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 534:Generated_Source\PSoC5/USBUART.c ****     /* Enable ARB EP interrupt sources. */
 535:Generated_Source\PSoC5/USBUART.c ****     USBUART_ARB_INT_EN_REG = USBUART_DEFAULT_ARB_INT_EN;
 536:Generated_Source\PSoC5/USBUART.c **** 
 537:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC3 || CY_PSOC5)
 538:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_ARB_VECT_NUM);
 539:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC3 || CY_PSOC5) */
 540:Generated_Source\PSoC5/USBUART.c **** #endif   /* (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE) */
 541:Generated_Source\PSoC5/USBUART.c **** 
 542:Generated_Source\PSoC5/USBUART.c **** /* Arbiter configuration for DMA transfers. */
 543:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 544:Generated_Source\PSoC5/USBUART.c ****     /* Configure Arbiter for Manual or Auto DMA operation and clear configuration completion. */
 545:Generated_Source\PSoC5/USBUART.c ****     USBUART_ARB_CFG_REG = USBUART_DEFAULT_ARB_CFG;
 546:Generated_Source\PSoC5/USBUART.c **** 
 547:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC4)
 548:Generated_Source\PSoC5/USBUART.c ****         /* Enable DMA operation. */
 549:Generated_Source\PSoC5/USBUART.c ****         CyDmaEnable();
 550:Generated_Source\PSoC5/USBUART.c **** 
 551:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBUART.c ****             /* Change DMA priority to be highest. */
 553:Generated_Source\PSoC5/USBUART.c ****              CyIntSetPriority(CYDMA_INTR_NUMBER, USBUART_DMA_AUTO_INTR_PRIO);
 554:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 555:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC4) */
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 16


 556:Generated_Source\PSoC5/USBUART.c **** 
 557:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 558:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
 559:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA interrupt to handle DMA management. */
 560:Generated_Source\PSoC5/USBUART.c ****             CyIntEnable(CYDMA_INTR_NUMBER);
 561:Generated_Source\PSoC5/USBUART.c ****         #else
 562:Generated_Source\PSoC5/USBUART.c ****             #if (USBUART_EP_DMA_AUTO_OPT == 0u)
 563:Generated_Source\PSoC5/USBUART.c ****                 /* Initialize interrupts which handle verification of successful DMA transaction. *
 564:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP_DMA_Done_isr_StartEx(&USBUART_EP_DMA_DONE_ISR);
 565:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP17_DMA_Done_SR_InterruptEnable();
 566:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP8_DMA_Done_SR_InterruptEnable();
 567:Generated_Source\PSoC5/USBUART.c ****             #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
 568:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
 569:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 570:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 571:Generated_Source\PSoC5/USBUART.c **** 
 572:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB regulator depends on operation voltage. IMO Locking is enabled in Init(). */
 573:Generated_Source\PSoC5/USBUART.c ****     switch(mode)
 299              		.loc 1 573 0
 300 0056 11B1     		cbz	r1, .L9
 301 0058 0129     		cmp	r1, #1
 302 005a 06D0     		beq	.L10
 303 005c 0BE0     		b	.L12
 304              	.L9:
 574:Generated_Source\PSoC5/USBUART.c ****     {
 575:Generated_Source\PSoC5/USBUART.c ****     case USBUART_3V_OPERATION:
 576:Generated_Source\PSoC5/USBUART.c ****         /* Disable regulator for 3V operation. */
 577:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG &= (uint8) ~USBUART_CR1_REG_ENABLE;
 305              		.loc 1 577 0
 306 005e 194A     		ldr	r2, .L14+40
 307 0060 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 308 0062 03F0FE03 		and	r3, r3, #254
 309 0066 1370     		strb	r3, [r2]
 578:Generated_Source\PSoC5/USBUART.c ****         break;
 310              		.loc 1 578 0
 311 0068 0AE0     		b	.L11
 312              	.L10:
 579:Generated_Source\PSoC5/USBUART.c **** 
 580:Generated_Source\PSoC5/USBUART.c ****     case USBUART_5V_OPERATION:
 581:Generated_Source\PSoC5/USBUART.c ****         /* Enable regulator for 5V operation. */
 582:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG |= (uint8)  USBUART_CR1_REG_ENABLE;
 313              		.loc 1 582 0
 314 006a 164A     		ldr	r2, .L14+40
 315 006c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 316 006e 43F00103 		orr	r3, r3, #1
 317 0072 1370     		strb	r3, [r2]
 583:Generated_Source\PSoC5/USBUART.c ****         break;
 318              		.loc 1 583 0
 319 0074 04E0     		b	.L11
 320              	.L12:
 584:Generated_Source\PSoC5/USBUART.c **** 
 585:Generated_Source\PSoC5/USBUART.c ****     default: /* Check DWR settings of USB power supply. */
 586:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_VDDD_MV < USBUART_3500MV)
 587:Generated_Source\PSoC5/USBUART.c ****         /* Disable regulator for 3V operation. */
 588:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG &= (uint8) ~USBUART_CR1_REG_ENABLE;
 589:Generated_Source\PSoC5/USBUART.c ****     #else
 590:Generated_Source\PSoC5/USBUART.c ****         /* Enable regulator for 5V operation. */
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 17


 591:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG |= (uint8)  USBUART_CR1_REG_ENABLE;
 321              		.loc 1 591 0
 322 0076 134A     		ldr	r2, .L14+40
 323 0078 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 324 007a 43F00103 		orr	r3, r3, #1
 325 007e 1370     		strb	r3, [r2]
 326              	.L11:
 592:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_VDDD_MV < USBUART_3500MV) */
 593:Generated_Source\PSoC5/USBUART.c ****         break;
 594:Generated_Source\PSoC5/USBUART.c ****     }
 595:Generated_Source\PSoC5/USBUART.c **** 
 596:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 597:Generated_Source\PSoC5/USBUART.c ****     /* Clear bus activity. */
 598:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG &= (uint32) ~USBUART_CR1_BUS_ACTIVITY;
 599:Generated_Source\PSoC5/USBUART.c **** 
 600:Generated_Source\PSoC5/USBUART.c ****     /* Clear EP0 count register. */
 601:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CNT_REG = USBUART_CLEAR_REG;
 602:Generated_Source\PSoC5/USBUART.c **** 
 603:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 604:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_NAK_IN_OUT;
 605:Generated_Source\PSoC5/USBUART.c **** 
 606:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_LPM_ACTIVE)
 607:Generated_Source\PSoC5/USBUART.c ****         if (NULL != USBUART_GetBOSPtr())
 608:Generated_Source\PSoC5/USBUART.c ****         {
 609:Generated_Source\PSoC5/USBUART.c ****             /* Enable LPM and acknowledge LPM packets for active device.
 610:Generated_Source\PSoC5/USBUART.c ****             * Reset NYET_EN and SUB_RESP bits in the LPM_CTRL register.
 611:Generated_Source\PSoC5/USBUART.c ****             */
 612:Generated_Source\PSoC5/USBUART.c ****             USBUART_LPM_CTRL_REG = (USBUART_LPM_CTRL_LPM_EN | \
 613:Generated_Source\PSoC5/USBUART.c ****                                              USBUART_LPM_CTRL_LPM_ACK_RESP);
 614:Generated_Source\PSoC5/USBUART.c ****         }
 615:Generated_Source\PSoC5/USBUART.c ****         else
 616:Generated_Source\PSoC5/USBUART.c ****         {
 617:Generated_Source\PSoC5/USBUART.c ****             /* Disable LPM for active device. */
 618:Generated_Source\PSoC5/USBUART.c ****             USBUART_LPM_CTRL_REG &= (uint32) ~USBUART_LPM_CTRL_LPM_EN;
 619:Generated_Source\PSoC5/USBUART.c ****         }
 620:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_LPM_ACTIVE) */
 621:Generated_Source\PSoC5/USBUART.c **** 
 622:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to responds to USB traffic with address 0. */
 623:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 624:Generated_Source\PSoC5/USBUART.c **** 
 625:Generated_Source\PSoC5/USBUART.c **** #else
 626:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 627:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_STALL_IN_OUT;
 327              		.loc 1 627 0
 328 0080 0322     		movs	r2, #3
 329 0082 114B     		ldr	r3, .L14+44
 330 0084 1A70     		strb	r2, [r3]
 628:Generated_Source\PSoC5/USBUART.c **** 
 629:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to respond to USB traffic with address 0. */
 630:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 331              		.loc 1 630 0
 332 0086 8022     		movs	r2, #128
 333 0088 203B     		subs	r3, r3, #32
 334 008a 1A70     		strb	r2, [r3]
 631:Generated_Source\PSoC5/USBUART.c ****     CyDelayCycles(USBUART_WAIT_CR0_REG_STABILITY);
 335              		.loc 1 631 0
 336 008c 0120     		movs	r0, #1
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 18


 337              	.LVL28:
 338 008e FFF7FEFF 		bl	CyDelayCycles
 339              	.LVL29:
 632:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 633:Generated_Source\PSoC5/USBUART.c **** 
 634:Generated_Source\PSoC5/USBUART.c ****     /* Enable D+ pull-up and keep USB control on IO. */
 635:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG = USBUART_USBIO_CR1_USBPUEN;
 340              		.loc 1 635 0
 341 0092 0422     		movs	r2, #4
 342 0094 0D4B     		ldr	r3, .L14+48
 343 0096 1A70     		strb	r2, [r3]
 344 0098 10BD     		pop	{r4, pc}
 345              	.L15:
 346 009a 00BF     		.align	2
 347              	.L14:
 348 009c 00000000 		.word	USBUART_hidProtocol
 349 00a0 00000000 		.word	USBUART_device
 350 00a4 00000000 		.word	USBUART_transferState
 351 00a8 00000000 		.word	USBUART_configurationChanged
 352 00ac 00000000 		.word	USBUART_configuration
 353 00b0 00000000 		.word	USBUART_interfaceNumber
 354 00b4 00000000 		.word	USBUART_deviceAddress
 355 00b8 00000000 		.word	USBUART_deviceStatus
 356 00bc 00000000 		.word	USBUART_lastPacketSize
 357 00c0 00E100E0 		.word	-536813312
 358 00c4 09600040 		.word	1073766409
 359 00c8 28600040 		.word	1073766440
 360 00cc 12600040 		.word	1073766418
 361              		.cfi_endproc
 362              	.LFE2:
 363              		.size	USBUART_InitComponent, .-USBUART_InitComponent
 364              		.section	.text.USBUART_Start,"ax",%progbits
 365              		.align	2
 366              		.global	USBUART_Start
 367              		.thumb
 368              		.thumb_func
 369              		.type	USBUART_Start, %function
 370              	USBUART_Start:
 371              	.LFB0:
 187:Generated_Source\PSoC5/USBUART.c ****     if (0u == USBUART_initVar)
 372              		.loc 1 187 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376              	.LVL30:
 377 0000 38B5     		push	{r3, r4, r5, lr}
 378              		.cfi_def_cfa_offset 16
 379              		.cfi_offset 3, -16
 380              		.cfi_offset 4, -12
 381              		.cfi_offset 5, -8
 382              		.cfi_offset 14, -4
 383 0002 0446     		mov	r4, r0
 384 0004 0D46     		mov	r5, r1
 188:Generated_Source\PSoC5/USBUART.c ****     {
 385              		.loc 1 188 0
 386 0006 064B     		ldr	r3, .L19
 387 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 19


 388 000a 23B9     		cbnz	r3, .L17
 190:Generated_Source\PSoC5/USBUART.c ****         USBUART_initVar = 1u;
 389              		.loc 1 190 0
 390 000c FFF7FEFF 		bl	USBUART_Init
 391              	.LVL31:
 191:Generated_Source\PSoC5/USBUART.c ****     }
 392              		.loc 1 191 0
 393 0010 0122     		movs	r2, #1
 394 0012 034B     		ldr	r3, .L19
 395 0014 1A70     		strb	r2, [r3]
 396              	.L17:
 194:Generated_Source\PSoC5/USBUART.c **** }
 397              		.loc 1 194 0
 398 0016 2946     		mov	r1, r5
 399 0018 2046     		mov	r0, r4
 400 001a FFF7FEFF 		bl	USBUART_InitComponent
 401              	.LVL32:
 402 001e 38BD     		pop	{r3, r4, r5, pc}
 403              	.L20:
 404              		.align	2
 405              	.L19:
 406 0020 00000000 		.word	.LANCHOR0
 407              		.cfi_endproc
 408              	.LFE0:
 409              		.size	USBUART_Start, .-USBUART_Start
 410              		.section	.text.USBUART_ReInitComponent,"ax",%progbits
 411              		.align	2
 412              		.global	USBUART_ReInitComponent
 413              		.thumb
 414              		.thumb_func
 415              		.type	USBUART_ReInitComponent, %function
 416              	USBUART_ReInitComponent:
 417              	.LFB3:
 636:Generated_Source\PSoC5/USBUART.c **** }
 637:Generated_Source\PSoC5/USBUART.c **** 
 638:Generated_Source\PSoC5/USBUART.c **** 
 639:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 640:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReInitComponent
 641:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 642:Generated_Source\PSoC5/USBUART.c **** *
 643:Generated_Source\PSoC5/USBUART.c **** *  This function reinitialize the component configuration and is
 644:Generated_Source\PSoC5/USBUART.c **** *  intend to be called from the Reset interrupt.
 645:Generated_Source\PSoC5/USBUART.c **** *
 646:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 647:Generated_Source\PSoC5/USBUART.c **** *   USBUART_device - Contains the device number of the desired Device
 648:Generated_Source\PSoC5/USBUART.c **** *        Descriptor. The device number can be found in the Device Descriptor tab
 649:Generated_Source\PSoC5/USBUART.c **** *       of the Configure dialog, under the settings of the desired Device Descriptor,
 650:Generated_Source\PSoC5/USBUART.c **** *       in the Device Number field.
 651:Generated_Source\PSoC5/USBUART.c **** *   USBUART_transferState - This variable is used by the communication
 652:Generated_Source\PSoC5/USBUART.c **** *       functions to handle the current transfer state. Initialized to
 653:Generated_Source\PSoC5/USBUART.c **** *       TRANS_STATE_IDLE in this API.
 654:Generated_Source\PSoC5/USBUART.c **** *   USBUART_configuration - Contains the current configuration number
 655:Generated_Source\PSoC5/USBUART.c **** *       set by the Host using a SET_CONFIGURATION request.
 656:Generated_Source\PSoC5/USBUART.c **** *       Initialized to zero in this API.
 657:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceAddress - Contains the current device address. This
 658:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 659:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 20


 660:Generated_Source\PSoC5/USBUART.c **** *      a SET_ADDRESS request.
 661:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceStatus - Initialized to 0.
 662:Generated_Source\PSoC5/USBUART.c **** *       This is a two-bit variable which contains the power status in the first bit
 663:Generated_Source\PSoC5/USBUART.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and the remote
 664:Generated_Source\PSoC5/USBUART.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in the second bit.
 665:Generated_Source\PSoC5/USBUART.c **** *   USBUART_lastPacketSize - Initialized to 0;
 666:Generated_Source\PSoC5/USBUART.c **** *
 667:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 668:Generated_Source\PSoC5/USBUART.c **** *  No.
 669:Generated_Source\PSoC5/USBUART.c **** *
 670:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 671:Generated_Source\PSoC5/USBUART.c **** void USBUART_ReInitComponent(void) 
 672:Generated_Source\PSoC5/USBUART.c **** {
 418              		.loc 1 672 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 0, uses_anonymous_args = 0
 422              		@ link register save eliminated.
 423              	.LVL33:
 673:Generated_Source\PSoC5/USBUART.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 674:Generated_Source\PSoC5/USBUART.c ****     *  Request: "When initialized, all devices default to report protocol."
 675:Generated_Source\PSoC5/USBUART.c ****     */
 676:Generated_Source\PSoC5/USBUART.c **** #if defined(USBUART_ENABLE_HID_CLASS)
 677:Generated_Source\PSoC5/USBUART.c ****     uint8 i;
 678:Generated_Source\PSoC5/USBUART.c **** 
 679:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 424              		.loc 1 679 0
 425 0000 0023     		movs	r3, #0
 426 0002 04E0     		b	.L22
 427              	.LVL34:
 428              	.L23:
 680:Generated_Source\PSoC5/USBUART.c ****     {
 681:Generated_Source\PSoC5/USBUART.c ****         USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 429              		.loc 1 681 0 discriminator 3
 430 0004 0121     		movs	r1, #1
 431 0006 0E4A     		ldr	r2, .L24
 432 0008 D154     		strb	r1, [r2, r3]
 679:Generated_Source\PSoC5/USBUART.c ****     {
 433              		.loc 1 679 0 discriminator 3
 434 000a 0B44     		add	r3, r3, r1
 435              	.LVL35:
 436 000c DBB2     		uxtb	r3, r3
 437              	.LVL36:
 438              	.L22:
 679:Generated_Source\PSoC5/USBUART.c ****     {
 439              		.loc 1 679 0 is_stmt 0 discriminator 1
 440 000e 012B     		cmp	r3, #1
 441 0010 F8D9     		bls	.L23
 682:Generated_Source\PSoC5/USBUART.c ****     }
 683:Generated_Source\PSoC5/USBUART.c **** #endif /* USBUART_ENABLE_HID_CLASS */
 684:Generated_Source\PSoC5/USBUART.c **** 
 685:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 686:Generated_Source\PSoC5/USBUART.c ****     USBUART_transferState   = USBUART_TRANS_STATE_IDLE;
 442              		.loc 1 686 0 is_stmt 1
 443 0012 0023     		movs	r3, #0
 444              	.LVL37:
 445 0014 0B4A     		ldr	r2, .L24+4
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 21


 446 0016 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 447              		.loc 1 687 0
 448 0018 0B4A     		ldr	r2, .L24+8
 449 001a 1370     		strb	r3, [r2]
 688:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 450              		.loc 1 688 0
 451 001c 0B4A     		ldr	r2, .L24+12
 452 001e 1370     		strb	r3, [r2]
 689:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 453              		.loc 1 689 0
 454 0020 0B4A     		ldr	r2, .L24+16
 455 0022 1370     		strb	r3, [r2]
 690:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 456              		.loc 1 690 0
 457 0024 0B4A     		ldr	r2, .L24+20
 458 0026 1370     		strb	r3, [r2]
 691:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 459              		.loc 1 691 0
 460 0028 0B4A     		ldr	r2, .L24+24
 461 002a 1370     		strb	r3, [r2]
 692:Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 462              		.loc 1 692 0
 463 002c 0B4A     		ldr	r2, .L24+28
 464 002e 1370     		strb	r3, [r2]
 693:Generated_Source\PSoC5/USBUART.c **** 
 694:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 695:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 696:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_NAK_IN_OUT;
 697:Generated_Source\PSoC5/USBUART.c **** #else
 698:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 699:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_STALL_IN_OUT;
 465              		.loc 1 699 0
 466 0030 0322     		movs	r2, #3
 467 0032 0B4B     		ldr	r3, .L24+32
 468 0034 1A70     		strb	r2, [r3]
 700:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 701:Generated_Source\PSoC5/USBUART.c **** 
 702:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to respond to USB traffic with address 0. */
 703:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 469              		.loc 1 703 0
 470 0036 8022     		movs	r2, #128
 471 0038 203B     		subs	r3, r3, #32
 472 003a 1A70     		strb	r2, [r3]
 473 003c 7047     		bx	lr
 474              	.L25:
 475 003e 00BF     		.align	2
 476              	.L24:
 477 0040 00000000 		.word	USBUART_hidProtocol
 478 0044 00000000 		.word	USBUART_transferState
 479 0048 00000000 		.word	USBUART_configurationChanged
 480 004c 00000000 		.word	USBUART_configuration
 481 0050 00000000 		.word	USBUART_interfaceNumber
 482 0054 00000000 		.word	USBUART_deviceAddress
 483 0058 00000000 		.word	USBUART_deviceStatus
 484 005c 00000000 		.word	USBUART_lastPacketSize
 485 0060 28600040 		.word	1073766440
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 22


 486              		.cfi_endproc
 487              	.LFE3:
 488              		.size	USBUART_ReInitComponent, .-USBUART_ReInitComponent
 489              		.section	.text.USBUART_Stop,"ax",%progbits
 490              		.align	2
 491              		.global	USBUART_Stop
 492              		.thumb
 493              		.thumb_func
 494              		.type	USBUART_Stop, %function
 495              	USBUART_Stop:
 496              	.LFB4:
 704:Generated_Source\PSoC5/USBUART.c **** }
 705:Generated_Source\PSoC5/USBUART.c **** 
 706:Generated_Source\PSoC5/USBUART.c **** 
 707:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 708:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Stop
 709:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 710:Generated_Source\PSoC5/USBUART.c **** *
 711:Generated_Source\PSoC5/USBUART.c **** *  This function shuts down the USB function including to release
 712:Generated_Source\PSoC5/USBUART.c **** *  the D+ pull-up and disabling the SIE.
 713:Generated_Source\PSoC5/USBUART.c **** *
 714:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 715:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configuration
 716:Generated_Source\PSoC5/USBUART.c **** *
 717:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceAddress - Contains the current device address. This
 718:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 719:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using
 720:Generated_Source\PSoC5/USBUART.c **** *      a SET_ADDRESS request.
 721:Generated_Source\PSoC5/USBUART.c **** *
 722:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceStatus
 723:Generated_Source\PSoC5/USBUART.c **** *
 724:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configurationChanged
 725:Generated_Source\PSoC5/USBUART.c **** *
 726:Generated_Source\PSoC5/USBUART.c **** *   USBUART_intiVar -  This variable is set to zero
 727:Generated_Source\PSoC5/USBUART.c **** *
 728:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 729:Generated_Source\PSoC5/USBUART.c **** void USBUART_Stop(void) 
 730:Generated_Source\PSoC5/USBUART.c **** {
 497              		.loc 1 730 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501 0000 08B5     		push	{r3, lr}
 502              		.cfi_def_cfa_offset 8
 503              		.cfi_offset 3, -8
 504              		.cfi_offset 14, -4
 731:Generated_Source\PSoC5/USBUART.c ****     uint8 enableInterrupts;
 732:Generated_Source\PSoC5/USBUART.c **** 
 733:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 734:Generated_Source\PSoC5/USBUART.c ****     /* Stop all DMA channels. */
 735:Generated_Source\PSoC5/USBUART.c ****     USBUART_Stop_DMA(USBUART_MAX_EP);
 736:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 737:Generated_Source\PSoC5/USBUART.c **** 
 738:Generated_Source\PSoC5/USBUART.c ****     enableInterrupts = CyEnterCriticalSection();
 505              		.loc 1 738 0
 506 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 507              	.LVL38:
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 23


 739:Generated_Source\PSoC5/USBUART.c **** 
 740:Generated_Source\PSoC5/USBUART.c ****     /* Disable USB IP to respond to USB traffic. */
 741:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG &= (uint8) ~USBUART_CR0_ENABLE;
 508              		.loc 1 741 0
 509 0006 224A     		ldr	r2, .L28
 510 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 511 000a 03F07F03 		and	r3, r3, #127
 512 000e 1370     		strb	r3, [r2]
 742:Generated_Source\PSoC5/USBUART.c **** 
 743:Generated_Source\PSoC5/USBUART.c ****     /* Disable D+ pull-up. */
 744:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint8) ~ USBUART_USBIO_CR1_USBPUEN;
 513              		.loc 1 744 0
 514 0010 0A32     		adds	r2, r2, #10
 515 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 516 0014 03F0FB03 		and	r3, r3, #251
 517 0018 1370     		strb	r3, [r2]
 745:Generated_Source\PSoC5/USBUART.c **** 
 746:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 747:Generated_Source\PSoC5/USBUART.c ****     /* Disable USBFS block. */
 748:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_ENABLE;
 749:Generated_Source\PSoC5/USBUART.c **** #else
 750:Generated_Source\PSoC5/USBUART.c ****     /* Clear power active and standby mode templates. */
 751:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_ACT_CFG_REG  &= (uint8) ~USBUART_PM_ACT_EN_FSUSB;
 518              		.loc 1 751 0
 519 001a A2F5E352 		sub	r2, r2, #7264
 520 001e 0D3A     		subs	r2, r2, #13
 521 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 522 0022 03F0FE03 		and	r3, r3, #254
 523 0026 1370     		strb	r3, [r2]
 752:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_STBY_CFG_REG &= (uint8) ~USBUART_PM_STBY_EN_FSUSB;
 524              		.loc 1 752 0
 525 0028 1032     		adds	r2, r2, #16
 526 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 527 002c 03F0FE03 		and	r3, r3, #254
 528 0030 1370     		strb	r3, [r2]
 753:Generated_Source\PSoC5/USBUART.c **** 
 754:Generated_Source\PSoC5/USBUART.c ****     /* Ensure single-ended disable bits are high (PRT15.INP_DIS[7:6])
 755:Generated_Source\PSoC5/USBUART.c ****      * (input receiver disabled). */
 756:Generated_Source\PSoC5/USBUART.c ****     USBUART_DM_INP_DIS_REG |= (uint8) USBUART_DM_MASK;
 529              		.loc 1 756 0
 530 0032 184B     		ldr	r3, .L28+4
 531 0034 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 532 0036 42F08002 		orr	r2, r2, #128
 533 003a 1A70     		strb	r2, [r3]
 757:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG |= (uint8) USBUART_DP_MASK;
 534              		.loc 1 757 0
 535 003c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 536 003e 42F04002 		orr	r2, r2, #64
 537 0042 1A70     		strb	r2, [r3]
 758:Generated_Source\PSoC5/USBUART.c **** 
 759:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 760:Generated_Source\PSoC5/USBUART.c **** 
 761:Generated_Source\PSoC5/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 538              		.loc 1 761 0
 539 0044 FFF7FEFF 		bl	CyExitCriticalSection
 540              	.LVL39:
 762:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 24


 763:Generated_Source\PSoC5/USBUART.c ****     /* Disable component interrupts. */
 764:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 765:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_HI_VECT_NUM);
 766:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_LO_VECT_NUM);
 767:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_MED_VECT_NUM);
 768:Generated_Source\PSoC5/USBUART.c **** #else
 769:Generated_Source\PSoC5/USBUART.c **** 
 770:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_BUS_RESET_VECT_NUM);
 541              		.loc 1 770 0
 542 0048 134B     		ldr	r3, .L28+8
 543 004a 4FF40002 		mov	r2, #8388608
 544 004e 1A60     		str	r2, [r3]
 771:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_EP_0_VECT_NUM);
 545              		.loc 1 771 0
 546 0050 4FF08072 		mov	r2, #16777216
 547 0054 1A60     		str	r2, [r3]
 772:Generated_Source\PSoC5/USBUART.c **** 
 773:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 774:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_SOF_VECT_NUM);
 548              		.loc 1 774 0
 549 0056 4FF40012 		mov	r2, #2097152
 550 005a 1A60     		str	r2, [r3]
 775:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 776:Generated_Source\PSoC5/USBUART.c **** 
 777:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 778:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_1_VECT_NUM);
 551              		.loc 1 778 0
 552 005c 0422     		movs	r2, #4
 553 005e 1A60     		str	r2, [r3]
 779:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 780:Generated_Source\PSoC5/USBUART.c **** 
 781:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 782:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_2_VECT_NUM);
 554              		.loc 1 782 0
 555 0060 0822     		movs	r2, #8
 556 0062 1A60     		str	r2, [r3]
 783:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 784:Generated_Source\PSoC5/USBUART.c **** 
 785:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 786:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_3_VECT_NUM);
 557              		.loc 1 786 0
 558 0064 1022     		movs	r2, #16
 559 0066 1A60     		str	r2, [r3]
 787:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP3_ISR_ACTIVE) */
 788:Generated_Source\PSoC5/USBUART.c **** 
 789:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 790:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_4_VECT_NUM);
 791:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP4_ISR_ACTIVE) */
 792:Generated_Source\PSoC5/USBUART.c **** 
 793:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 794:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_5_VECT_NUM);
 795:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 796:Generated_Source\PSoC5/USBUART.c **** 
 797:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 798:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_6_VECT_NUM);
 799:Generated_Source\PSoC5/USBUART.c ****     #endif /* USBUART_EP6_ISR_REMOVE */
 800:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 25


 801:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 802:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_7_VECT_NUM);
 803:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 804:Generated_Source\PSoC5/USBUART.c **** 
 805:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 806:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_8_VECT_NUM);
 807:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 808:Generated_Source\PSoC5/USBUART.c **** 
 809:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DP_ISR_ACTIVE)
 810:Generated_Source\PSoC5/USBUART.c ****         /* Clear active mode Dp interrupt source history. */
 811:Generated_Source\PSoC5/USBUART.c ****         (void) USBUART_Dp_ClearInterrupt();
 560              		.loc 1 811 0
 561 0068 FFF7FEFF 		bl	USBUART_Dp_ClearInterrupt
 562              	.LVL40:
 812:Generated_Source\PSoC5/USBUART.c ****         CyIntClearPending(USBUART_DP_INTC_VECT_NUM);
 563              		.loc 1 812 0
 564 006c 4FF48052 		mov	r2, #4096
 565 0070 0A4B     		ldr	r3, .L28+12
 566 0072 1A60     		str	r2, [r3]
 813:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DP_ISR_ACTIVE). */
 814:Generated_Source\PSoC5/USBUART.c **** 
 815:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 816:Generated_Source\PSoC5/USBUART.c **** 
 817:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 818:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 567              		.loc 1 818 0
 568 0074 0023     		movs	r3, #0
 569 0076 0A4A     		ldr	r2, .L28+16
 570 0078 1370     		strb	r3, [r2]
 819:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 571              		.loc 1 819 0
 572 007a 0A4A     		ldr	r2, .L28+20
 573 007c 1370     		strb	r3, [r2]
 820:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 574              		.loc 1 820 0
 575 007e 0A4A     		ldr	r2, .L28+24
 576 0080 1370     		strb	r3, [r2]
 821:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 577              		.loc 1 821 0
 578 0082 0A4A     		ldr	r2, .L28+28
 579 0084 1370     		strb	r3, [r2]
 822:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 580              		.loc 1 822 0
 581 0086 0A4A     		ldr	r2, .L28+32
 582 0088 1370     		strb	r3, [r2]
 823:Generated_Source\PSoC5/USBUART.c **** 
 824:Generated_Source\PSoC5/USBUART.c ****     /* It is mandatory for correct device startup. */
 825:Generated_Source\PSoC5/USBUART.c ****     USBUART_initVar = 0u;
 583              		.loc 1 825 0
 584 008a 0A4A     		ldr	r2, .L28+36
 585 008c 1370     		strb	r3, [r2]
 586 008e 08BD     		pop	{r3, pc}
 587              	.L29:
 588              		.align	2
 589              	.L28:
 590 0090 08600040 		.word	1073766408
 591 0094 F8510040 		.word	1073762808
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 26


 592 0098 80E100E0 		.word	-536813184
 593 009c 80E200E0 		.word	-536812928
 594 00a0 00000000 		.word	USBUART_configurationChanged
 595 00a4 00000000 		.word	USBUART_configuration
 596 00a8 00000000 		.word	USBUART_interfaceNumber
 597 00ac 00000000 		.word	USBUART_deviceAddress
 598 00b0 00000000 		.word	USBUART_deviceStatus
 599 00b4 00000000 		.word	.LANCHOR0
 600              		.cfi_endproc
 601              	.LFE4:
 602              		.size	USBUART_Stop, .-USBUART_Stop
 603              		.section	.text.USBUART_CheckActivity,"ax",%progbits
 604              		.align	2
 605              		.global	USBUART_CheckActivity
 606              		.thumb
 607              		.thumb_func
 608              		.type	USBUART_CheckActivity, %function
 609              	USBUART_CheckActivity:
 610              	.LFB5:
 826:Generated_Source\PSoC5/USBUART.c **** }
 827:Generated_Source\PSoC5/USBUART.c **** 
 828:Generated_Source\PSoC5/USBUART.c **** 
 829:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 830:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_CheckActivity
 831:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 832:Generated_Source\PSoC5/USBUART.c **** *
 833:Generated_Source\PSoC5/USBUART.c **** *  This function returns the activity status of the bus. It clears the hardware
 834:Generated_Source\PSoC5/USBUART.c **** *  status to provide updated status on the next call of this function. It
 835:Generated_Source\PSoC5/USBUART.c **** *  provides a way to determine whether any USB bus activity occurred. The
 836:Generated_Source\PSoC5/USBUART.c **** *  application should use this function to determine if the USB suspend
 837:Generated_Source\PSoC5/USBUART.c **** *  conditions are met.
 838:Generated_Source\PSoC5/USBUART.c **** *
 839:Generated_Source\PSoC5/USBUART.c **** *
 840:Generated_Source\PSoC5/USBUART.c **** * \return
 841:Generated_Source\PSoC5/USBUART.c **** *  cystatus: Status of the bus since the last call of the function.
 842:Generated_Source\PSoC5/USBUART.c **** *  Return Value |   Description
 843:Generated_Source\PSoC5/USBUART.c **** *  -------------|---------------------------------------------------------------
 844:Generated_Source\PSoC5/USBUART.c **** *  1            |Bus activity was detected since the last call to this function
 845:Generated_Source\PSoC5/USBUART.c **** *  0            |Bus activity was not detected since the last call to this function
 846:Generated_Source\PSoC5/USBUART.c **** *
 847:Generated_Source\PSoC5/USBUART.c **** *
 848:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 849:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_CheckActivity(void) 
 850:Generated_Source\PSoC5/USBUART.c **** {
 611              		.loc 1 850 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 851:Generated_Source\PSoC5/USBUART.c ****     uint8 cr1Reg = USBUART_CR1_REG;
 616              		.loc 1 851 0
 617 0000 064A     		ldr	r2, .L32
 618 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 619 0004 DBB2     		uxtb	r3, r3
 620              	.LVL41:
 852:Generated_Source\PSoC5/USBUART.c **** 
 853:Generated_Source\PSoC5/USBUART.c ****     /* Clear bus activity. */
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 27


 854:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = (cr1Reg & (uint8) ~USBUART_CR1_BUS_ACTIVITY);
 621              		.loc 1 854 0
 622 0006 03F0FB01 		and	r1, r3, #251
 623 000a 1170     		strb	r1, [r2]
 624 000c 03F00403 		and	r3, r3, #4
 625              	.LVL42:
 855:Generated_Source\PSoC5/USBUART.c **** 
 856:Generated_Source\PSoC5/USBUART.c ****     /* Get bus activity. */
 857:Generated_Source\PSoC5/USBUART.c ****     return ((0u != (cr1Reg & USBUART_CR1_BUS_ACTIVITY)) ? (1u) : (0u));
 626              		.loc 1 857 0
 627 0010 03F0FF00 		and	r0, r3, #255
 628 0014 03B1     		cbz	r3, .L31
 629 0016 0120     		movs	r0, #1
 630              	.L31:
 858:Generated_Source\PSoC5/USBUART.c **** }
 631              		.loc 1 858 0 discriminator 4
 632 0018 7047     		bx	lr
 633              	.L33:
 634 001a 00BF     		.align	2
 635              	.L32:
 636 001c 09600040 		.word	1073766409
 637              		.cfi_endproc
 638              	.LFE5:
 639              		.size	USBUART_CheckActivity, .-USBUART_CheckActivity
 640              		.section	.text.USBUART_GetConfiguration,"ax",%progbits
 641              		.align	2
 642              		.global	USBUART_GetConfiguration
 643              		.thumb
 644              		.thumb_func
 645              		.type	USBUART_GetConfiguration, %function
 646              	USBUART_GetConfiguration:
 647              	.LFB6:
 859:Generated_Source\PSoC5/USBUART.c **** 
 860:Generated_Source\PSoC5/USBUART.c **** 
 861:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 862:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetConfiguration
 863:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 864:Generated_Source\PSoC5/USBUART.c **** *
 865:Generated_Source\PSoC5/USBUART.c **** *  This function gets the current configuration of the USB device.
 866:Generated_Source\PSoC5/USBUART.c **** *
 867:Generated_Source\PSoC5/USBUART.c **** * \return
 868:Generated_Source\PSoC5/USBUART.c **** *  Returns the currently assigned configuration. Returns 0 if the device
 869:Generated_Source\PSoC5/USBUART.c **** *  is not configured
 870:Generated_Source\PSoC5/USBUART.c **** *
 871:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 872:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetConfiguration(void) 
 873:Generated_Source\PSoC5/USBUART.c **** {
 648              		.loc 1 873 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 0
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 652              		@ link register save eliminated.
 874:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_configuration);
 653              		.loc 1 874 0
 654 0000 014B     		ldr	r3, .L35
 655 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 875:Generated_Source\PSoC5/USBUART.c **** }
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 28


 656              		.loc 1 875 0
 657 0004 7047     		bx	lr
 658              	.L36:
 659 0006 00BF     		.align	2
 660              	.L35:
 661 0008 00000000 		.word	USBUART_configuration
 662              		.cfi_endproc
 663              	.LFE6:
 664              		.size	USBUART_GetConfiguration, .-USBUART_GetConfiguration
 665              		.section	.text.USBUART_IsConfigurationChanged,"ax",%progbits
 666              		.align	2
 667              		.global	USBUART_IsConfigurationChanged
 668              		.thumb
 669              		.thumb_func
 670              		.type	USBUART_IsConfigurationChanged, %function
 671              	USBUART_IsConfigurationChanged:
 672              	.LFB7:
 876:Generated_Source\PSoC5/USBUART.c **** 
 877:Generated_Source\PSoC5/USBUART.c **** 
 878:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 879:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_IsConfigurationChanged
 880:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 881:Generated_Source\PSoC5/USBUART.c **** *
 882:Generated_Source\PSoC5/USBUART.c **** *  This function returns the clear-on-read configuration state.  It is useful
 883:Generated_Source\PSoC5/USBUART.c **** *  when the host sends double SET_CONFIGURATION request with the same 
 884:Generated_Source\PSoC5/USBUART.c **** *  configuration number or changes alternate settings of the interface. 
 885:Generated_Source\PSoC5/USBUART.c **** *  After configuration has been changed the OUT endpoints must be enabled and IN 
 886:Generated_Source\PSoC5/USBUART.c **** *  endpoint must be loaded with data to start communication with the host.
 887:Generated_Source\PSoC5/USBUART.c **** *
 888:Generated_Source\PSoC5/USBUART.c **** * \return
 889:Generated_Source\PSoC5/USBUART.c **** *  None-zero value when new configuration has been changed, otherwise zero is
 890:Generated_Source\PSoC5/USBUART.c **** *  returned.
 891:Generated_Source\PSoC5/USBUART.c **** *
 892:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 893:Generated_Source\PSoC5/USBUART.c **** *
 894:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_configurationChanged - This variable is set to 1 after
 895:Generated_Source\PSoC5/USBUART.c **** *   a SET_CONFIGURATION request and cleared in this function.
 896:Generated_Source\PSoC5/USBUART.c **** *
 897:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 898:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_IsConfigurationChanged(void) 
 899:Generated_Source\PSoC5/USBUART.c **** {
 673              		.loc 1 899 0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677              		@ link register save eliminated.
 678              	.LVL43:
 900:Generated_Source\PSoC5/USBUART.c ****     uint8 res = 0u;
 901:Generated_Source\PSoC5/USBUART.c **** 
 902:Generated_Source\PSoC5/USBUART.c ****     if (USBUART_configurationChanged != 0u)
 679              		.loc 1 902 0
 680 0000 064B     		ldr	r3, .L40
 681 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 682 0004 13F0FF0F 		tst	r3, #255
 683 0008 05D0     		beq	.L39
 903:Generated_Source\PSoC5/USBUART.c ****     {
 904:Generated_Source\PSoC5/USBUART.c ****         res = USBUART_configurationChanged;
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 29


 684              		.loc 1 904 0
 685 000a 044B     		ldr	r3, .L40
 686 000c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 687 000e C0B2     		uxtb	r0, r0
 688              	.LVL44:
 905:Generated_Source\PSoC5/USBUART.c ****         USBUART_configurationChanged = 0u;
 689              		.loc 1 905 0
 690 0010 0022     		movs	r2, #0
 691 0012 1A70     		strb	r2, [r3]
 692 0014 7047     		bx	lr
 693              	.LVL45:
 694              	.L39:
 900:Generated_Source\PSoC5/USBUART.c ****     uint8 res = 0u;
 695              		.loc 1 900 0
 696 0016 0020     		movs	r0, #0
 697              	.LVL46:
 906:Generated_Source\PSoC5/USBUART.c ****     }
 907:Generated_Source\PSoC5/USBUART.c **** 
 908:Generated_Source\PSoC5/USBUART.c ****     return (res);
 909:Generated_Source\PSoC5/USBUART.c **** }
 698              		.loc 1 909 0
 699 0018 7047     		bx	lr
 700              	.L41:
 701 001a 00BF     		.align	2
 702              	.L40:
 703 001c 00000000 		.word	USBUART_configurationChanged
 704              		.cfi_endproc
 705              	.LFE7:
 706              		.size	USBUART_IsConfigurationChanged, .-USBUART_IsConfigurationChanged
 707              		.section	.text.USBUART_GetInterfaceSetting,"ax",%progbits
 708              		.align	2
 709              		.global	USBUART_GetInterfaceSetting
 710              		.thumb
 711              		.thumb_func
 712              		.type	USBUART_GetInterfaceSetting, %function
 713              	USBUART_GetInterfaceSetting:
 714              	.LFB8:
 910:Generated_Source\PSoC5/USBUART.c **** 
 911:Generated_Source\PSoC5/USBUART.c **** 
 912:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 913:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetInterfaceSetting
 914:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 915:Generated_Source\PSoC5/USBUART.c **** *
 916:Generated_Source\PSoC5/USBUART.c **** *  This function gets the current alternate setting for the specified interface.
 917:Generated_Source\PSoC5/USBUART.c **** *  It is useful to identify which alternate settings are active in the specified 
 918:Generated_Source\PSoC5/USBUART.c **** *  interface.
 919:Generated_Source\PSoC5/USBUART.c **** *
 920:Generated_Source\PSoC5/USBUART.c **** *  \param
 921:Generated_Source\PSoC5/USBUART.c **** *  interfaceNumber interface number
 922:Generated_Source\PSoC5/USBUART.c **** *
 923:Generated_Source\PSoC5/USBUART.c **** * \return
 924:Generated_Source\PSoC5/USBUART.c **** *  Returns the current alternate setting for the specified interface.
 925:Generated_Source\PSoC5/USBUART.c **** *
 926:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 927:Generated_Source\PSoC5/USBUART.c **** uint8  USBUART_GetInterfaceSetting(uint8 interfaceNumber)
 928:Generated_Source\PSoC5/USBUART.c ****                                                     
 929:Generated_Source\PSoC5/USBUART.c **** {
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 30


 715              		.loc 1 929 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719              		@ link register save eliminated.
 720              	.LVL47:
 930:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_interfaceSetting[interfaceNumber]);
 721              		.loc 1 930 0
 722 0000 014B     		ldr	r3, .L43
 723 0002 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 724              	.LVL48:
 931:Generated_Source\PSoC5/USBUART.c **** }
 725              		.loc 1 931 0
 726 0004 7047     		bx	lr
 727              	.L44:
 728 0006 00BF     		.align	2
 729              	.L43:
 730 0008 00000000 		.word	USBUART_interfaceSetting
 731              		.cfi_endproc
 732              	.LFE8:
 733              		.size	USBUART_GetInterfaceSetting, .-USBUART_GetInterfaceSetting
 734              		.section	.text.USBUART_GetEPState,"ax",%progbits
 735              		.align	2
 736              		.global	USBUART_GetEPState
 737              		.thumb
 738              		.thumb_func
 739              		.type	USBUART_GetEPState, %function
 740              	USBUART_GetEPState:
 741              	.LFB9:
 932:Generated_Source\PSoC5/USBUART.c **** 
 933:Generated_Source\PSoC5/USBUART.c **** 
 934:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 935:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPState
 936:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 937:Generated_Source\PSoC5/USBUART.c **** *
 938:Generated_Source\PSoC5/USBUART.c **** *  This function returns the state of the requested endpoint.
 939:Generated_Source\PSoC5/USBUART.c **** *
 940:Generated_Source\PSoC5/USBUART.c **** * \param epNumber Data endpoint number
 941:Generated_Source\PSoC5/USBUART.c **** *
 942:Generated_Source\PSoC5/USBUART.c **** * \return
 943:Generated_Source\PSoC5/USBUART.c **** *  Returns the current state of the specified USBFS endpoint. Symbolic names and
 944:Generated_Source\PSoC5/USBUART.c **** *  their associated values are given in the following table. Use these constants
 945:Generated_Source\PSoC5/USBUART.c **** *  whenever you write code to change the state of the endpoints, such as ISR
 946:Generated_Source\PSoC5/USBUART.c **** *  code, to handle data sent or received.
 947:Generated_Source\PSoC5/USBUART.c **** *
 948:Generated_Source\PSoC5/USBUART.c **** *  Return Value           | Description
 949:Generated_Source\PSoC5/USBUART.c **** *  -----------------------|-----------------------------------------------------
 950:Generated_Source\PSoC5/USBUART.c **** *  USBFS_NO_EVENT_PENDING |The endpoint is awaiting SIE action
 951:Generated_Source\PSoC5/USBUART.c **** *  USBFS_EVENT_PENDING    |The endpoint is awaiting CPU action
 952:Generated_Source\PSoC5/USBUART.c **** *  USBFS_NO_EVENT_ALLOWED |The endpoint is locked from access
 953:Generated_Source\PSoC5/USBUART.c **** *  USBFS_IN_BUFFER_FULL   |The IN endpoint is loaded and the mode is set to ACK IN
 954:Generated_Source\PSoC5/USBUART.c **** *  USBFS_IN_BUFFER_EMPTY  |An IN transaction occurred and more data can be loaded
 955:Generated_Source\PSoC5/USBUART.c **** *  USBFS_OUT_BUFFER_EMPTY |The OUT endpoint is set to ACK OUT and is waiting for data
 956:Generated_Source\PSoC5/USBUART.c **** *  USBFS_OUT_BUFFER_FULL  |An OUT transaction has occurred and data can be read
 957:Generated_Source\PSoC5/USBUART.c **** *
 958:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 959:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetEPState(uint8 epNumber) 
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 31


 960:Generated_Source\PSoC5/USBUART.c **** {
 742              		.loc 1 960 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              		@ link register save eliminated.
 747              	.LVL49:
 961:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_EP[epNumber].apiEpState);
 748              		.loc 1 961 0
 749 0000 00EB4000 		add	r0, r0, r0, lsl #1
 750              	.LVL50:
 751 0004 8300     		lsls	r3, r0, #2
 752 0006 024A     		ldr	r2, .L46
 753 0008 1344     		add	r3, r3, r2
 754 000a 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 962:Generated_Source\PSoC5/USBUART.c **** }
 755              		.loc 1 962 0
 756 000c 7047     		bx	lr
 757              	.L47:
 758 000e 00BF     		.align	2
 759              	.L46:
 760 0010 00000000 		.word	USBUART_EP
 761              		.cfi_endproc
 762              	.LFE9:
 763              		.size	USBUART_GetEPState, .-USBUART_GetEPState
 764              		.section	.text.USBUART_GetEPCount,"ax",%progbits
 765              		.align	2
 766              		.global	USBUART_GetEPCount
 767              		.thumb
 768              		.thumb_func
 769              		.type	USBUART_GetEPCount, %function
 770              	USBUART_GetEPCount:
 771              	.LFB10:
 963:Generated_Source\PSoC5/USBUART.c **** 
 964:Generated_Source\PSoC5/USBUART.c **** 
 965:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 966:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPCount
 967:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 968:Generated_Source\PSoC5/USBUART.c **** *
 969:Generated_Source\PSoC5/USBUART.c **** *  This function supports Data Endpoints only(EP1-EP8).
 970:Generated_Source\PSoC5/USBUART.c **** *  Returns the transfer count for the requested endpoint.  The value from
 971:Generated_Source\PSoC5/USBUART.c **** *  the count registers includes 2 counts for the two byte checksum of the
 972:Generated_Source\PSoC5/USBUART.c **** *  packet.  This function subtracts the two counts.
 973:Generated_Source\PSoC5/USBUART.c **** *
 974:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Data Endpoint Number.
 975:Generated_Source\PSoC5/USBUART.c **** *                   Valid values are between 1 and 8.
 976:Generated_Source\PSoC5/USBUART.c **** *
 977:Generated_Source\PSoC5/USBUART.c **** * \return
 978:Generated_Source\PSoC5/USBUART.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 979:Generated_Source\PSoC5/USBUART.c **** *  invalid endpoint.
 980:Generated_Source\PSoC5/USBUART.c **** *
 981:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 982:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_GetEPCount(uint8 epNumber) 
 983:Generated_Source\PSoC5/USBUART.c **** {
 772              		.loc 1 983 0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 32


 775              		@ frame_needed = 0, uses_anonymous_args = 0
 776              		@ link register save eliminated.
 777              	.LVL51:
 984:Generated_Source\PSoC5/USBUART.c ****     uint16 cntr = 0u;
 985:Generated_Source\PSoC5/USBUART.c **** 
 986:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 778              		.loc 1 986 0
 779 0000 431E     		subs	r3, r0, #1
 780 0002 DBB2     		uxtb	r3, r3
 781 0004 072B     		cmp	r3, #7
 782 0006 0BD8     		bhi	.L50
 987:Generated_Source\PSoC5/USBUART.c ****     {
 988:Generated_Source\PSoC5/USBUART.c ****         /* Get 11-bits EP counter where epCnt0 - 3 bits MSB and epCnt1 - 8 bits LSB. */
 989:Generated_Source\PSoC5/USBUART.c ****         cntr  = ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0) & USBUART_EPX_CNT0_MASK;
 783              		.loc 1 989 0
 784 0008 064B     		ldr	r3, .L51
 785 000a 0001     		lsls	r0, r0, #4
 786              	.LVL52:
 787 000c 1A18     		adds	r2, r3, r0
 788 000e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 789 0010 00F00F00 		and	r0, r0, #15
 790              	.LVL53:
 990:Generated_Source\PSoC5/USBUART.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1);
 791              		.loc 1 990 0
 792 0014 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 793 0016 43EA0020 		orr	r0, r3, r0, lsl #8
 794              	.LVL54:
 991:Generated_Source\PSoC5/USBUART.c ****         cntr -= USBUART_EPX_CNTX_CRC_COUNT;
 795              		.loc 1 991 0
 796 001a 0238     		subs	r0, r0, #2
 797              	.LVL55:
 798 001c 80B2     		uxth	r0, r0
 799              	.LVL56:
 800 001e 7047     		bx	lr
 801              	.LVL57:
 802              	.L50:
 984:Generated_Source\PSoC5/USBUART.c **** 
 803              		.loc 1 984 0
 804 0020 0020     		movs	r0, #0
 805              	.LVL58:
 992:Generated_Source\PSoC5/USBUART.c ****     }
 993:Generated_Source\PSoC5/USBUART.c **** 
 994:Generated_Source\PSoC5/USBUART.c ****     return (cntr);
 995:Generated_Source\PSoC5/USBUART.c **** }
 806              		.loc 1 995 0
 807 0022 7047     		bx	lr
 808              	.L52:
 809              		.align	2
 810              	.L51:
 811 0024 FC5F0040 		.word	1073766396
 812              		.cfi_endproc
 813              	.LFE10:
 814              		.size	USBUART_GetEPCount, .-USBUART_GetEPCount
 815              		.section	.text.USBUART_LoadInEP,"ax",%progbits
 816              		.align	2
 817              		.global	USBUART_LoadInEP
 818              		.thumb
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 33


 819              		.thumb_func
 820              		.type	USBUART_LoadInEP, %function
 821              	USBUART_LoadInEP:
 822              	.LFB11:
 996:Generated_Source\PSoC5/USBUART.c **** 
 997:Generated_Source\PSoC5/USBUART.c **** 
 998:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 999:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
1000:Generated_Source\PSoC5/USBUART.c ****     /*******************************************************************************
1001:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_InitEpDma
1002:Generated_Source\PSoC5/USBUART.c ****     ****************************************************************************//**
1003:Generated_Source\PSoC5/USBUART.c ****     *
1004:Generated_Source\PSoC5/USBUART.c ****     *  This function configures priority for all DMA channels utilized by the
1005:Generated_Source\PSoC5/USBUART.c ****     *  component. Also sets callbacks for DMA auto mode.
1006:Generated_Source\PSoC5/USBUART.c ****     *
1007:Generated_Source\PSoC5/USBUART.c ****     *******************************************************************************/
1008:Generated_Source\PSoC5/USBUART.c ****     static void USBUART_InitEpDma(void)
1009:Generated_Source\PSoC5/USBUART.c ****     {
1010:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA1_ACTIVE)
1011:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep1_dma_CHANNEL] = USBUART_ep1_dma_CHANNEL_CFG;
1012:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1013:Generated_Source\PSoC5/USBUART.c **** 
1014:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA2_ACTIVE)
1015:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep2_dma_CHANNEL] = USBUART_ep2_dma_CHANNEL_CFG;
1016:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1017:Generated_Source\PSoC5/USBUART.c **** 
1018:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA3_ACTIVE)
1019:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep3_dma_CHANNEL] = USBUART_ep3_dma_CHANNEL_CFG;
1020:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1021:Generated_Source\PSoC5/USBUART.c **** 
1022:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA4_ACTIVE)
1023:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep4_dma_CHANNEL] = USBUART_ep4_dma_CHANNEL_CFG;
1024:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1025:Generated_Source\PSoC5/USBUART.c **** 
1026:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA5_ACTIVE)
1027:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep5_dma_CHANNEL] = USBUART_ep5_dma_CHANNEL_CFG;
1028:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1029:Generated_Source\PSoC5/USBUART.c **** 
1030:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA6_ACTIVE)
1031:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep6_dma_CHANNEL] = USBUART_ep6_dma_CHANNEL_CFG;
1032:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1033:Generated_Source\PSoC5/USBUART.c **** 
1034:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA7_ACTIVE)
1035:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep7_dma_CHANNEL] = USBUART_ep7_dma_CHANNEL_CFG;
1036:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1037:Generated_Source\PSoC5/USBUART.c **** 
1038:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA8_ACTIVE)
1039:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep8_dma_CHANNEL] = USBUART_ep8_dma_CHANNEL_CFG;
1040:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1041:Generated_Source\PSoC5/USBUART.c **** 
1042:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1043:Generated_Source\PSoC5/USBUART.c ****         /* Initialize DMA channel callbacks. */
1044:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA1_ACTIVE)
1045:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep1_dma_SetInterruptCallback(&USBUART_EP1_DMA_DONE_ISR);
1046:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA1_ACTIVE) */
1047:Generated_Source\PSoC5/USBUART.c **** 
1048:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA2_ACTIVE)
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 34


1049:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep2_dma_SetInterruptCallback(&USBUART_EP2_DMA_DONE_ISR);
1050:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA2_ACTIVE) */
1051:Generated_Source\PSoC5/USBUART.c **** 
1052:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA3_ACTIVE)
1053:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep3_dma_SetInterruptCallback(&USBUART_EP3_DMA_DONE_ISR);
1054:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA3_ACTIVE) */
1055:Generated_Source\PSoC5/USBUART.c **** 
1056:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA4_ACTIVE)
1057:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep4_dma_SetInterruptCallback(&USBUART_EP4_DMA_DONE_ISR);
1058:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA4_ACTIVE) */
1059:Generated_Source\PSoC5/USBUART.c **** 
1060:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA5_ACTIVE)
1061:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep5_dma_SetInterruptCallback(&USBUART_EP5_DMA_DONE_ISR);
1062:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA5_ACTIVE) */
1063:Generated_Source\PSoC5/USBUART.c **** 
1064:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA6_ACTIVE)
1065:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep6_dma_SetInterruptCallback(&USBUART_EP6_DMA_DONE_ISR);
1066:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA6_ACTIVE) */
1067:Generated_Source\PSoC5/USBUART.c **** 
1068:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA7_ACTIVE)
1069:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep7_dma_SetInterruptCallback(&USBUART_EP7_DMA_DONE_ISR);
1070:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA7_ACTIVE) */
1071:Generated_Source\PSoC5/USBUART.c **** 
1072:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA8_ACTIVE)
1073:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep8_dma_SetInterruptCallback(&USBUART_EP8_DMA_DONE_ISR);
1074:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA8_ACTIVE) */
1075:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1076:Generated_Source\PSoC5/USBUART.c ****     }
1077:Generated_Source\PSoC5/USBUART.c **** #else
1078:Generated_Source\PSoC5/USBUART.c **** 
1079:Generated_Source\PSoC5/USBUART.c **** 
1080:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1081:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_InitEP_DMA
1082:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1083:Generated_Source\PSoC5/USBUART.c ****     *
1084:Generated_Source\PSoC5/USBUART.c ****     *  This function allocates and initializes a DMA channel to be used by the
1085:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_LoadInEP() or USBUART_ReadOutEP() APIs for data
1086:Generated_Source\PSoC5/USBUART.c ****     *  transfer. It is available when the Endpoint Memory Management parameter
1087:Generated_Source\PSoC5/USBUART.c ****     *  is set to DMA.
1088:Generated_Source\PSoC5/USBUART.c ****     *
1089:Generated_Source\PSoC5/USBUART.c ****     *  This function is automatically called from the USBFS_LoadInEP() and USBFS_ReadOutEP() APIs.
1090:Generated_Source\PSoC5/USBUART.c ****     *
1091:Generated_Source\PSoC5/USBUART.c ****     *  \param epNumber Contains the data endpoint number.
1092:Generated_Source\PSoC5/USBUART.c ****     *            Valid values are between 1 and 8.
1093:Generated_Source\PSoC5/USBUART.c ****     *  \param *pData Pointer to a data array that is related to the EP transfers.
1094:Generated_Source\PSoC5/USBUART.c ****     *
1095:Generated_Source\PSoC5/USBUART.c ****     * \reentrant No.
1096:Generated_Source\PSoC5/USBUART.c ****     *
1097:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1098:Generated_Source\PSoC5/USBUART.c ****     void USBUART_InitEP_DMA(uint8 epNumber, const uint8 *pData)
1099:Generated_Source\PSoC5/USBUART.c ****                                                                     
1100:Generated_Source\PSoC5/USBUART.c ****     {
1101:Generated_Source\PSoC5/USBUART.c ****         uint16 src;
1102:Generated_Source\PSoC5/USBUART.c ****         uint16 dst;
1103:Generated_Source\PSoC5/USBUART.c **** 
1104:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC3)
1105:Generated_Source\PSoC5/USBUART.c ****         src = HI16(CYDEV_SRAM_BASE);
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 35


1106:Generated_Source\PSoC5/USBUART.c ****         dst = HI16(CYDEV_PERIPH_BASE);
1107:Generated_Source\PSoC5/USBUART.c ****         pData = pData;
1108:Generated_Source\PSoC5/USBUART.c ****     #else
1109:Generated_Source\PSoC5/USBUART.c ****         if ((USBUART_EP[epNumber].addr & USBUART_DIR_IN) != 0u)
1110:Generated_Source\PSoC5/USBUART.c ****         {
1111:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint: source is memory buffer. */
1112:Generated_Source\PSoC5/USBUART.c ****             src = HI16(pData);
1113:Generated_Source\PSoC5/USBUART.c ****             dst = HI16(CYDEV_PERIPH_BASE);
1114:Generated_Source\PSoC5/USBUART.c ****         }
1115:Generated_Source\PSoC5/USBUART.c ****         else
1116:Generated_Source\PSoC5/USBUART.c ****         {
1117:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint: source is USB IP memory buffer. */
1118:Generated_Source\PSoC5/USBUART.c ****             src = HI16(CYDEV_PERIPH_BASE);
1119:Generated_Source\PSoC5/USBUART.c ****             dst = HI16(pData);
1120:Generated_Source\PSoC5/USBUART.c ****         }
1121:Generated_Source\PSoC5/USBUART.c ****     #endif  /* (CY_PSOC3) */
1122:Generated_Source\PSoC5/USBUART.c **** 
1123:Generated_Source\PSoC5/USBUART.c ****         switch(epNumber)
1124:Generated_Source\PSoC5/USBUART.c ****         {
1125:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA1_ACTIVE)
1126:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP1:
1127:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep1_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1128:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1129:Generated_Source\PSoC5/USBUART.c ****             break;
1130:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1131:Generated_Source\PSoC5/USBUART.c **** 
1132:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA2_ACTIVE)
1133:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP2:
1134:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep2_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1135:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1136:Generated_Source\PSoC5/USBUART.c ****             break;
1137:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1138:Generated_Source\PSoC5/USBUART.c **** 
1139:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA3_ACTIVE)
1140:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP3:
1141:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep3_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1142:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1143:Generated_Source\PSoC5/USBUART.c ****             break;
1144:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1145:Generated_Source\PSoC5/USBUART.c **** 
1146:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA4_ACTIVE)
1147:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP4:
1148:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep4_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1149:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1150:Generated_Source\PSoC5/USBUART.c ****             break;
1151:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1152:Generated_Source\PSoC5/USBUART.c **** 
1153:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA5_ACTIVE)
1154:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP5:
1155:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep5_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1156:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1157:Generated_Source\PSoC5/USBUART.c ****             break;
1158:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1159:Generated_Source\PSoC5/USBUART.c **** 
1160:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA6_ACTIVE)
1161:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP6:
1162:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep6_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 36


1163:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1164:Generated_Source\PSoC5/USBUART.c ****             break;
1165:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1166:Generated_Source\PSoC5/USBUART.c **** 
1167:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA7_ACTIVE)
1168:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP7:
1169:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep7_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1170:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1171:Generated_Source\PSoC5/USBUART.c ****             break;
1172:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1173:Generated_Source\PSoC5/USBUART.c **** 
1174:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA8_ACTIVE)
1175:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP8:
1176:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep8_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1177:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1178:Generated_Source\PSoC5/USBUART.c ****             break;
1179:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1180:Generated_Source\PSoC5/USBUART.c **** 
1181:Generated_Source\PSoC5/USBUART.c ****         default:
1182:Generated_Source\PSoC5/USBUART.c ****             /* Do nothing for endpoints other than 1-8. */
1183:Generated_Source\PSoC5/USBUART.c ****             break;
1184:Generated_Source\PSoC5/USBUART.c ****         }
1185:Generated_Source\PSoC5/USBUART.c **** 
1186:Generated_Source\PSoC5/USBUART.c ****         if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1187:Generated_Source\PSoC5/USBUART.c ****         {
1188:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaTd[epNumber] = CyDmaTdAllocate();
1189:Generated_Source\PSoC5/USBUART.c **** 
1190:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1191:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaNextTd[epNumber] = CyDmaTdAllocate();
1192:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1193:Generated_Source\PSoC5/USBUART.c ****         }
1194:Generated_Source\PSoC5/USBUART.c ****     }
1195:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
1196:Generated_Source\PSoC5/USBUART.c **** 
1197:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1198:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_Stop_DMA
1199:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1200:Generated_Source\PSoC5/USBUART.c ****     *  
1201:Generated_Source\PSoC5/USBUART.c ****     *  This function stops DMA channel associated with endpoint. It is available 
1202:Generated_Source\PSoC5/USBUART.c ****     *  when the Endpoint Buffer Management parameter is set to DMA. Call this 
1203:Generated_Source\PSoC5/USBUART.c ****     *  function when endpoint direction is changed from IN to OUT or vice versa 
1204:Generated_Source\PSoC5/USBUART.c ****     *  to trigger DMA re-configuration when USBUART_LoadInEP() or 
1205:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_ReadOutEP() functions are called the first time. 
1206:Generated_Source\PSoC5/USBUART.c ****     *  
1207:Generated_Source\PSoC5/USBUART.c ****     *  \param epNumber: The data endpoint number for which associated DMA 
1208:Generated_Source\PSoC5/USBUART.c ****     *  channel is stopped. The range of valid values is between 1 and 8. To stop 
1209:Generated_Source\PSoC5/USBUART.c ****     *  all DMAs associated with endpoints call this function with 
1210:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_MAX_EP argument.
1211:Generated_Source\PSoC5/USBUART.c ****     *
1212:Generated_Source\PSoC5/USBUART.c ****     * \reentrant
1213:Generated_Source\PSoC5/USBUART.c ****     *  No.
1214:Generated_Source\PSoC5/USBUART.c ****     *
1215:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1216:Generated_Source\PSoC5/USBUART.c ****     void USBUART_Stop_DMA(uint8 epNumber) 
1217:Generated_Source\PSoC5/USBUART.c ****     {
1218:Generated_Source\PSoC5/USBUART.c ****         uint8 i;
1219:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 37


1220:Generated_Source\PSoC5/USBUART.c ****         i = (epNumber < USBUART_MAX_EP) ? epNumber : USBUART_EP1;
1221:Generated_Source\PSoC5/USBUART.c **** 
1222:Generated_Source\PSoC5/USBUART.c ****         do
1223:Generated_Source\PSoC5/USBUART.c ****         {
1224:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1225:Generated_Source\PSoC5/USBUART.c ****             if (0u != USBUART_DmaChan[i])
1226:Generated_Source\PSoC5/USBUART.c ****             {
1227:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(USBUART_DmaChan[i]);
1228:Generated_Source\PSoC5/USBUART.c ****             }
1229:Generated_Source\PSoC5/USBUART.c ****         #else
1230:Generated_Source\PSoC5/USBUART.c ****             if(USBUART_DmaTd[i] != DMA_INVALID_TD)
1231:Generated_Source\PSoC5/USBUART.c ****             {
1232:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[i]);
1233:Generated_Source\PSoC5/USBUART.c ****                 CyDmaTdFree(USBUART_DmaTd[i]);
1234:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaTd[i] = DMA_INVALID_TD;
1235:Generated_Source\PSoC5/USBUART.c ****             }
1236:Generated_Source\PSoC5/USBUART.c **** 
1237:Generated_Source\PSoC5/USBUART.c ****             #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1238:Generated_Source\PSoC5/USBUART.c ****                 if(USBUART_DmaNextTd[i] != DMA_INVALID_TD)
1239:Generated_Source\PSoC5/USBUART.c ****                 {
1240:Generated_Source\PSoC5/USBUART.c ****                     CyDmaTdFree(USBUART_DmaNextTd[i]);
1241:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaNextTd[i] = DMA_INVALID_TD;
1242:Generated_Source\PSoC5/USBUART.c ****                 }
1243:Generated_Source\PSoC5/USBUART.c ****             #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1244:Generated_Source\PSoC5/USBUART.c **** 
1245:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1246:Generated_Source\PSoC5/USBUART.c ****             i++;
1247:Generated_Source\PSoC5/USBUART.c ****         }
1248:Generated_Source\PSoC5/USBUART.c ****         while ((i < USBUART_MAX_EP) && (epNumber == USBUART_MAX_EP));
1249:Generated_Source\PSoC5/USBUART.c ****     }
1250:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
1251:Generated_Source\PSoC5/USBUART.c **** 
1252:Generated_Source\PSoC5/USBUART.c **** 
1253:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC3 || CY_PSOC5)
1254:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1255:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1256:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_LoadNextInEP
1257:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1258:Generated_Source\PSoC5/USBUART.c ****     *
1259:Generated_Source\PSoC5/USBUART.c ****     * Summary:
1260:Generated_Source\PSoC5/USBUART.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
1261:Generated_Source\PSoC5/USBUART.c ****     *  Auto DMA mode.
1262:Generated_Source\PSoC5/USBUART.c ****     *
1263:Generated_Source\PSoC5/USBUART.c ****     * Parameters:
1264:Generated_Source\PSoC5/USBUART.c ****     *  epNumber: Contains the data endpoint number.
1265:Generated_Source\PSoC5/USBUART.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
1266:Generated_Source\PSoC5/USBUART.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
1267:Generated_Source\PSoC5/USBUART.c ****     *
1268:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1269:Generated_Source\PSoC5/USBUART.c ****     void USBUART_LoadNextInEP(uint8 epNumber, uint8 mode) 
1270:Generated_Source\PSoC5/USBUART.c ****     {
1271:Generated_Source\PSoC5/USBUART.c ****         reg16 *convert;
1272:Generated_Source\PSoC5/USBUART.c **** 
1273:Generated_Source\PSoC5/USBUART.c ****         if (mode == 0u)
1274:Generated_Source\PSoC5/USBUART.c ****         {
1275:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to send rest of data. */
1276:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 38


1277:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
1278:Generated_Source\PSoC5/USBUART.c ****             /* Set transfer length. */
1279:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, USBUART_inLength[epNumber] - USBUART_DMA_BYTES_PER_BURST);
1280:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1281:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
1282:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, LO16((uint32)USBUART_inDataPointer[epNumber] +
1283:Generated_Source\PSoC5/USBUART.c ****                                             USBUART_DMA_BYTES_PER_BURST));
1284:Generated_Source\PSoC5/USBUART.c ****             USBUART_inBufFull[epNumber] = 1u;
1285:Generated_Source\PSoC5/USBUART.c ****         }
1286:Generated_Source\PSoC5/USBUART.c ****         else
1287:Generated_Source\PSoC5/USBUART.c ****         {
1288:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
1289:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1290:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
1291:Generated_Source\PSoC5/USBUART.c ****             /* Set transfer length. */
1292:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, USBUART_DMA_BYTES_REPEAT);
1293:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1294:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
1295:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert,  LO16((uint32)USBUART_inDataPointer[epNumber] +
1296:Generated_Source\PSoC5/USBUART.c ****                                    (USBUART_DMA_BYTES_PER_BURST - USBUART_DMA_BYTES_REPEAT)));
1297:Generated_Source\PSoC5/USBUART.c ****         }
1298:Generated_Source\PSoC5/USBUART.c **** 
1299:Generated_Source\PSoC5/USBUART.c ****         /* CyDmaChSetInitialTd API is optimized to initialize TD. */
1300:Generated_Source\PSoC5/USBUART.c ****         CY_DMA_CH_STRUCT_PTR[USBUART_DmaChan[epNumber]].basic_status[1u] = USBUART_DmaTd[epNumber];
1301:Generated_Source\PSoC5/USBUART.c ****     }
1302:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1303:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC3 || CY_PSOC5) */
1304:Generated_Source\PSoC5/USBUART.c **** 
1305:Generated_Source\PSoC5/USBUART.c **** 
1306:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1307:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_LoadInEP
1308:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1309:Generated_Source\PSoC5/USBUART.c **** *
1310:Generated_Source\PSoC5/USBUART.c **** *  This function performs different functionality depending on the Component’s
1311:Generated_Source\PSoC5/USBUART.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1312:Generated_Source\PSoC5/USBUART.c **** *  the Descriptor Root in Component Configure window.
1313:Generated_Source\PSoC5/USBUART.c **** *
1314:Generated_Source\PSoC5/USBUART.c **** *  *Manual (Static/Dynamic Allocation):*
1315:Generated_Source\PSoC5/USBUART.c **** *  This function loads and enables the specified USB data endpoint for an IN
1316:Generated_Source\PSoC5/USBUART.c **** *  data transfer.
1317:Generated_Source\PSoC5/USBUART.c **** *
1318:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Manual Buffer Management:*
1319:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1320:Generated_Source\PSoC5/USBUART.c **** *  Generates request for a transfer.
1321:Generated_Source\PSoC5/USBUART.c **** *
1322:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Automatic Buffer Management:*
1323:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1324:Generated_Source\PSoC5/USBUART.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1325:Generated_Source\PSoC5/USBUART.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1326:Generated_Source\PSoC5/USBUART.c **** *  prepares data in endpoint buffer.
1327:Generated_Source\PSoC5/USBUART.c **** *
1328:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
1329:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1330:Generated_Source\PSoC5/USBUART.c **** *  \param *pData A pointer to a data array from which the data for the endpoint space
1331:Generated_Source\PSoC5/USBUART.c **** *          is loaded.
1332:Generated_Source\PSoC5/USBUART.c **** *  \param length The number of bytes to transfer from the array and then send as
1333:Generated_Source\PSoC5/USBUART.c **** *          a result of an IN request. Valid values are between 0 and 512
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 39


1334:Generated_Source\PSoC5/USBUART.c **** *          (1023 for DMA with Automatic Buffer Management mode). The value 512
1335:Generated_Source\PSoC5/USBUART.c **** *          is applicable if only one endpoint is used.
1336:Generated_Source\PSoC5/USBUART.c **** *
1337:Generated_Source\PSoC5/USBUART.c **** *
1338:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1339:Generated_Source\PSoC5/USBUART.c **** *  No.
1340:Generated_Source\PSoC5/USBUART.c **** *
1341:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1342:Generated_Source\PSoC5/USBUART.c **** void USBUART_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1343:Generated_Source\PSoC5/USBUART.c ****                                                                         
1344:Generated_Source\PSoC5/USBUART.c **** {
 823              		.loc 1 1344 0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 827              		@ link register save eliminated.
 828              	.LVL59:
1345:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 829              		.loc 1 1345 0
 830 0000 431E     		subs	r3, r0, #1
 831 0002 DBB2     		uxtb	r3, r3
 832 0004 072B     		cmp	r3, #7
 833 0006 3CD8     		bhi	.L62
1344:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 834              		.loc 1 1344 0
 835 0008 F0B4     		push	{r4, r5, r6, r7}
 836              		.cfi_def_cfa_offset 16
 837              		.cfi_offset 4, -16
 838              		.cfi_offset 5, -12
 839              		.cfi_offset 6, -8
 840              		.cfi_offset 7, -4
1346:Generated_Source\PSoC5/USBUART.c ****     {
1347:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1348:Generated_Source\PSoC5/USBUART.c ****         /* Limit length to available buffer USB IP buffer size.*/
1349:Generated_Source\PSoC5/USBUART.c ****         if (length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
 841              		.loc 1 1349 0
 842 000a 0746     		mov	r7, r0
 843 000c 00EB4004 		add	r4, r0, r0, lsl #1
 844 0010 A300     		lsls	r3, r4, #2
 845 0012 1C4C     		ldr	r4, .L63
 846 0014 2344     		add	r3, r3, r4
 847 0016 DB88     		ldrh	r3, [r3, #6]
 848 0018 9BB2     		uxth	r3, r3
 849 001a C3F50073 		rsb	r3, r3, #512
 850 001e 9A42     		cmp	r2, r3
 851 0020 08D9     		bls	.L55
1350:Generated_Source\PSoC5/USBUART.c ****         {
1351:Generated_Source\PSoC5/USBUART.c ****             length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
 852              		.loc 1 1351 0
 853 0022 00EB4002 		add	r2, r0, r0, lsl #1
 854              	.LVL60:
 855 0026 9300     		lsls	r3, r2, #2
 856 0028 2344     		add	r3, r3, r4
 857 002a DA88     		ldrh	r2, [r3, #6]
 858 002c 92B2     		uxth	r2, r2
 859 002e C2F50072 		rsb	r2, r2, #512
 860 0032 92B2     		uxth	r2, r2
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 40


 861              	.LVL61:
 862              	.L55:
1352:Generated_Source\PSoC5/USBUART.c ****         }
1353:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1354:Generated_Source\PSoC5/USBUART.c **** 
1355:Generated_Source\PSoC5/USBUART.c ****         /* Set count and data toggle. */
1356:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint8) HI8(length) | USBUART_EP[epNumber].epT
 863              		.loc 1 1356 0
 864 0034 00EB4004 		add	r4, r0, r0, lsl #1
 865 0038 A300     		lsls	r3, r4, #2
 866 003a 124C     		ldr	r4, .L63
 867 003c 2344     		add	r3, r3, r4
 868 003e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 869 0040 43EA1223 		orr	r3, r3, r2, lsr #8
 870 0044 104D     		ldr	r5, .L63+4
 871 0046 0401     		lsls	r4, r0, #4
 872 0048 2E19     		adds	r6, r5, r4
 873 004a 2B55     		strb	r3, [r5, r4]
1357:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint8) LO8(length);
 874              		.loc 1 1357 0
 875 004c D3B2     		uxtb	r3, r2
 876 004e 7370     		strb	r3, [r6, #1]
1358:Generated_Source\PSoC5/USBUART.c **** 
1359:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1360:Generated_Source\PSoC5/USBUART.c ****         if (NULL != pData)
 877              		.loc 1 1360 0
 878 0050 39B9     		cbnz	r1, .L59
 879              	.LBB2:
 880 0052 09E0     		b	.L57
 881              	.LVL62:
 882              	.L58:
1361:Generated_Source\PSoC5/USBUART.c ****         {
1362:Generated_Source\PSoC5/USBUART.c **** 			/* Copy data using arbiter data register. */
1363:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1364:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < length; ++i)
1365:Generated_Source\PSoC5/USBUART.c ****             {
1366:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].rwDr = pData[i];
 883              		.loc 1 1366 0 discriminator 3
 884 0054 CE5C     		ldrb	r6, [r1, r3]	@ zero_extendqisi2
 885 0056 3D01     		lsls	r5, r7, #4
 886 0058 0C4C     		ldr	r4, .L63+8
 887 005a 6655     		strb	r6, [r4, r5]
1364:Generated_Source\PSoC5/USBUART.c ****             {
 888              		.loc 1 1364 0 discriminator 3
 889 005c 0133     		adds	r3, r3, #1
 890              	.LVL63:
 891 005e 9BB2     		uxth	r3, r3
 892              	.LVL64:
 893 0060 00E0     		b	.L56
 894              	.LVL65:
 895              	.L59:
 896              	.LBE2:
 897 0062 0023     		movs	r3, #0
 898              	.L56:
 899              	.LVL66:
 900              	.LBB3:
1364:Generated_Source\PSoC5/USBUART.c ****             {
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 41


 901              		.loc 1 1364 0 is_stmt 0 discriminator 1
 902 0064 9A42     		cmp	r2, r3
 903 0066 F5D8     		bhi	.L58
 904              	.LVL67:
 905              	.L57:
 906              	.LBE3:
1367:Generated_Source\PSoC5/USBUART.c ****             }
1368:Generated_Source\PSoC5/USBUART.c ****         }
1369:Generated_Source\PSoC5/USBUART.c **** 
1370:Generated_Source\PSoC5/USBUART.c ****         /* IN endpoint buffer is full - read to be read. */
1371:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 907              		.loc 1 1371 0 is_stmt 1
 908 0068 4200     		lsls	r2, r0, #1
 909              	.LVL68:
 910 006a 0244     		add	r2, r2, r0
 911 006c 9300     		lsls	r3, r2, #2
 912 006e 054A     		ldr	r2, .L63
 913 0070 1344     		add	r3, r3, r2
 914 0072 0022     		movs	r2, #0
 915 0074 5A70     		strb	r2, [r3, #1]
1372:Generated_Source\PSoC5/USBUART.c **** 
1373:Generated_Source\PSoC5/USBUART.c ****         /* Arm IN endpoint. */
1374:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 916              		.loc 1 1374 0
 917 0076 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 918 0078 D2B2     		uxtb	r2, r2
 919 007a 0001     		lsls	r0, r0, #4
 920              	.LVL69:
 921 007c 044B     		ldr	r3, .L63+12
 922 007e 1A54     		strb	r2, [r3, r0]
1375:Generated_Source\PSoC5/USBUART.c **** 
1376:Generated_Source\PSoC5/USBUART.c ****     #else
1377:Generated_Source\PSoC5/USBUART.c **** 
1378:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1379:Generated_Source\PSoC5/USBUART.c ****             /* Initialize DMA if it was not initialized. */
1380:Generated_Source\PSoC5/USBUART.c ****             if (DMA_INVALID_TD == USBUART_DmaTd[epNumber])
1381:Generated_Source\PSoC5/USBUART.c ****             {
1382:Generated_Source\PSoC5/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1383:Generated_Source\PSoC5/USBUART.c ****             }
1384:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1385:Generated_Source\PSoC5/USBUART.c **** 
1386:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1387:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1388:Generated_Source\PSoC5/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1389:Generated_Source\PSoC5/USBUART.c **** 
1390:Generated_Source\PSoC5/USBUART.c ****             if ((pData != NULL) && (length > 0u))
1391:Generated_Source\PSoC5/USBUART.c ****             {
1392:Generated_Source\PSoC5/USBUART.c ****             #if (CY_PSOC4)
1393:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1394:Generated_Source\PSoC5/USBUART.c **** 
1395:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1396:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1397:Generated_Source\PSoC5/USBUART.c **** 
1398:Generated_Source\PSoC5/USBUART.c ****                 /* Configure source and destination. */
1399:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1400:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_
1401:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 42


1402:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1403:Generated_Source\PSoC5/USBUART.c ****                 --length;
1404:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1405:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1406:Generated_Source\PSoC5/USBUART.c **** 
1407:Generated_Source\PSoC5/USBUART.c ****                 /* Validate descriptor to execute on following DMA request. */
1408:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1409:Generated_Source\PSoC5/USBUART.c **** 
1410:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1411:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1412:Generated_Source\PSoC5/USBUART.c ****             #else
1413:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA to transfer data. */
1414:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1415:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, 
1416:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData), LO16((uint3
1417:Generated_Source\PSoC5/USBUART.c **** 
1418:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel. */
1419:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1420:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1421:Generated_Source\PSoC5/USBUART.c ****             #endif /* (CY_PSOC4) */
1422:Generated_Source\PSoC5/USBUART.c **** 
1423:Generated_Source\PSoC5/USBUART.c ****                 /* Generate DMA request. */
1424:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBUART_ARB_EPX_CFG_DMA_REQ;
1425:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBUART_ARB_EPX_CFG_DMA_REQ;
1426:Generated_Source\PSoC5/USBUART.c **** 
1427:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1428:Generated_Source\PSoC5/USBUART.c ****             }
1429:Generated_Source\PSoC5/USBUART.c ****             else
1430:Generated_Source\PSoC5/USBUART.c ****             {
1431:Generated_Source\PSoC5/USBUART.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1432:Generated_Source\PSoC5/USBUART.c ****                 USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1433:Generated_Source\PSoC5/USBUART.c ****             }
1434:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1435:Generated_Source\PSoC5/USBUART.c **** 
1436:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1437:Generated_Source\PSoC5/USBUART.c ****             if (pData != NULL)
1438:Generated_Source\PSoC5/USBUART.c ****             {
1439:Generated_Source\PSoC5/USBUART.c ****             #if (CY_PSOC4)
1440:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1441:Generated_Source\PSoC5/USBUART.c **** 
1442:Generated_Source\PSoC5/USBUART.c ****                 /* Store address of buffer. */
1443:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1444:Generated_Source\PSoC5/USBUART.c **** 
1445:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1446:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1447:Generated_Source\PSoC5/USBUART.c **** 
1448:Generated_Source\PSoC5/USBUART.c ****                 /* Set destination address. */
1449:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_
1450:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP_
1451:Generated_Source\PSoC5/USBUART.c **** 
1452:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1453:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1454:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1455:Generated_Source\PSoC5/USBUART.c **** 
1456:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1457:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CF
1458:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 43


1459:Generated_Source\PSoC5/USBUART.c **** 
1460:Generated_Source\PSoC5/USBUART.c ****                 /* Enable interrupt from DMA channel. */
1461:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetInterruptMask(channelNum);
1462:Generated_Source\PSoC5/USBUART.c **** 
1463:Generated_Source\PSoC5/USBUART.c **** 
1464:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1465:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1466:Generated_Source\PSoC5/USBUART.c **** 
1467:Generated_Source\PSoC5/USBUART.c ****             #else
1468:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1469:Generated_Source\PSoC5/USBUART.c **** 
1470:Generated_Source\PSoC5/USBUART.c ****                 #if (USBUART_EP_DMA_AUTO_OPT == 0u)
1471:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inLength[epNumber] = length;
1472:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inDataPointer[epNumber] = pData;
1473:Generated_Source\PSoC5/USBUART.c **** 
1474:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send data only for first burst */
1475:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber],
1476:Generated_Source\PSoC5/USBUART.c ****                         (length > USBUART_DMA_BYTES_PER_BURST) ? USBUART_DMA_BYTES_PER_BURST : leng
1477:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1478:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData),
1479:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1480:Generated_Source\PSoC5/USBUART.c **** 
1481:Generated_Source\PSoC5/USBUART.c ****                     /* The second TD will be executed only when the first one fails.
1482:Generated_Source\PSoC5/USBUART.c ****                     *  The intention of this TD is to generate NRQ interrupt
1483:Generated_Source\PSoC5/USBUART.c ****                     *  and repeat 2 last bytes of the first burst.
1484:Generated_Source\PSoC5/USBUART.c ****                     */
1485:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaNextTd[epNumber], 1u,
1486:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_DmaNextTd[epNumber],
1487:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_epX_TD_TERMOUT_EN[epNumber]);
1488:Generated_Source\PSoC5/USBUART.c **** 
1489:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DmaNextTd to clear Data Ready status. */
1490:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaNextTd[epNumber], LO16((uint32) &clearInDat
1491:Generated_Source\PSoC5/USBUART.c ****                                                                                    LO16((uint32) &U
1492:Generated_Source\PSoC5/USBUART.c ****                 #else
1493:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send all data. */
1494:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,
1495:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_S
1496:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData),
1497:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1498:Generated_Source\PSoC5/USBUART.c ****                 #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
1499:Generated_Source\PSoC5/USBUART.c **** 
1500:Generated_Source\PSoC5/USBUART.c ****                 /* Clear any potential pending DMA requests before starting DMA channel to transfer
1501:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1502:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA. */
1503:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1504:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1505:Generated_Source\PSoC5/USBUART.c ****             #endif /* (CY_PSOC4) */
1506:Generated_Source\PSoC5/USBUART.c ****             }
1507:Generated_Source\PSoC5/USBUART.c ****             else
1508:Generated_Source\PSoC5/USBUART.c ****             {
1509:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1510:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1511:Generated_Source\PSoC5/USBUART.c **** 
1512:Generated_Source\PSoC5/USBUART.c ****                 if (length > 0u)
1513:Generated_Source\PSoC5/USBUART.c ****                 {
1514:Generated_Source\PSoC5/USBUART.c ****                 #if (CY_PSOC4)
1515:Generated_Source\PSoC5/USBUART.c ****                     uint32 lengthDescr0, lengthDescr1;
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 44


1516:Generated_Source\PSoC5/USBUART.c ****                     uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1517:Generated_Source\PSoC5/USBUART.c **** 
1518:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of full bursts. */
1519:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST
1520:Generated_Source\PSoC5/USBUART.c **** 
1521:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of elements in the last burst. */
1522:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BU
1523:Generated_Source\PSoC5/USBUART.c **** 
1524:Generated_Source\PSoC5/USBUART.c ****                     /* Get total number of bursts. */
1525:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1526:Generated_Source\PSoC5/USBUART.c **** 
1527:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust number of data elements transferred in last burst. */
1528:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber])
1529:Generated_Source\PSoC5/USBUART.c ****                                                                           (USBUART_DmaEpLastBurstEl
1530:Generated_Source\PSoC5/USBUART.c ****                                                                           (USBUART_DMA_BYTES_PER_BU
1531:Generated_Source\PSoC5/USBUART.c **** 
1532:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
1533:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
1534:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
1535:Generated_Source\PSoC5/USBUART.c **** 
1536:Generated_Source\PSoC5/USBUART.c **** 
1537:Generated_Source\PSoC5/USBUART.c ****                     /* Mark which descriptor is last one to execute. */
1538:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] &
1539:Generated_Source\PSoC5/USBUART.c ****                                                                             USBUART_DMA_DESCR0_MASK
1540:Generated_Source\PSoC5/USBUART.c **** 
1541:Generated_Source\PSoC5/USBUART.c ****                     /* Restore DMA settings for current transfer. */
1542:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChDisable(channelNum);
1543:Generated_Source\PSoC5/USBUART.c **** 
1544:Generated_Source\PSoC5/USBUART.c ****                     /* Restore destination address for input endpoint. */
1545:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
1546:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
1547:Generated_Source\PSoC5/USBUART.c ****                                                                                                    
1548:Generated_Source\PSoC5/USBUART.c **** 
1549:Generated_Source\PSoC5/USBUART.c ****                     /* Set number of elements to transfer. */
1550:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR0, lengthDescr0);
1551:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR1, lengthDescr1);
1552:Generated_Source\PSoC5/USBUART.c **** 
1553:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 0 and command to start with it. */
1554:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1555:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
1556:Generated_Source\PSoC5/USBUART.c **** 
1557:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 1. */
1558:Generated_Source\PSoC5/USBUART.c ****                     if (USBUART_DmaEpBurstCnt[epNumber] > 1u)
1559:Generated_Source\PSoC5/USBUART.c ****                     {
1560:Generated_Source\PSoC5/USBUART.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1); 
1561:Generated_Source\PSoC5/USBUART.c ****                     }                   
1562:Generated_Source\PSoC5/USBUART.c **** 
1563:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
1564:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstC
1565:Generated_Source\PSoC5/USBUART.c **** 
1566:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA channel: configuration complete. */
1567:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChEnable(channelNum);
1568:Generated_Source\PSoC5/USBUART.c **** 
1569:Generated_Source\PSoC5/USBUART.c ****                 #elif (USBUART_EP_DMA_AUTO_OPT == 0u)
1570:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inLength[epNumber]  = length;
1571:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inBufFull[epNumber] = 0u;
1572:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 45


1573:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1574:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send data only for first burst. */
1575:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(
1576:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaTd[epNumber], (length > USBUART_DMA_BYTES_PER_BURST) ?
1577:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST : length,
1578:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1579:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32)  USBUART_inData
1580:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1581:Generated_Source\PSoC5/USBUART.c ****                     /* Clear Any potential pending DMA requests before starting DMA channel to tran
1582:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1583:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA. */
1584:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1585:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1586:Generated_Source\PSoC5/USBUART.c ****                 #endif /* (CY_PSOC4) */
1587:Generated_Source\PSoC5/USBUART.c **** 
1588:Generated_Source\PSoC5/USBUART.c ****                 #if !defined (USBUART_MANUAL_IN_EP_ARM)
1589:Generated_Source\PSoC5/USBUART.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
1590:Generated_Source\PSoC5/USBUART.c ****                     USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
1591:Generated_Source\PSoC5/USBUART.c ****                 #endif  /* (USBUART_MANUAL_IN_EP_ARM) */
1592:Generated_Source\PSoC5/USBUART.c **** 
1593:Generated_Source\PSoC5/USBUART.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
1594:Generated_Source\PSoC5/USBUART.c ****                 }
1595:Generated_Source\PSoC5/USBUART.c ****                 else
1596:Generated_Source\PSoC5/USBUART.c ****                 {
1597:Generated_Source\PSoC5/USBUART.c ****                     /* When zero-length packet: arm IN endpoint directly. */
1598:Generated_Source\PSoC5/USBUART.c ****                     USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1599:Generated_Source\PSoC5/USBUART.c ****                 }
1600:Generated_Source\PSoC5/USBUART.c ****             }
1601:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1602:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
1603:Generated_Source\PSoC5/USBUART.c ****     }
1604:Generated_Source\PSoC5/USBUART.c **** }
 923              		.loc 1 1604 0
 924 0080 F0BC     		pop	{r4, r5, r6, r7}
 925              		.cfi_restore 7
 926              		.cfi_restore 6
 927              		.cfi_restore 5
 928              		.cfi_restore 4
 929              		.cfi_def_cfa_offset 0
 930              	.L62:
 931 0082 7047     		bx	lr
 932              	.L64:
 933              		.align	2
 934              	.L63:
 935 0084 00000000 		.word	USBUART_EP
 936 0088 FC5F0040 		.word	1073766396
 937 008c 78600040 		.word	1073766520
 938 0090 FE5F0040 		.word	1073766398
 939              		.cfi_endproc
 940              	.LFE11:
 941              		.size	USBUART_LoadInEP, .-USBUART_LoadInEP
 942              		.section	.text.USBUART_EnableOutEP,"ax",%progbits
 943              		.align	2
 944              		.global	USBUART_EnableOutEP
 945              		.thumb
 946              		.thumb_func
 947              		.type	USBUART_EnableOutEP, %function
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 46


 948              	USBUART_EnableOutEP:
 949              	.LFB13:
1605:Generated_Source\PSoC5/USBUART.c **** 
1606:Generated_Source\PSoC5/USBUART.c **** 
1607:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1608:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReadOutEP
1609:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1610:Generated_Source\PSoC5/USBUART.c **** *
1611:Generated_Source\PSoC5/USBUART.c **** *   This function performs different functionality depending on the Component’s
1612:Generated_Source\PSoC5/USBUART.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
1613:Generated_Source\PSoC5/USBUART.c **** *   Descriptor Root in Component Configure window.
1614:Generated_Source\PSoC5/USBUART.c **** *
1615:Generated_Source\PSoC5/USBUART.c **** *   *Manual (Static/Dynamic Allocation):*
1616:Generated_Source\PSoC5/USBUART.c **** *   This function moves the specified number of bytes from endpoint buffer to
1617:Generated_Source\PSoC5/USBUART.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
1618:Generated_Source\PSoC5/USBUART.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
1619:Generated_Source\PSoC5/USBUART.c **** *   the number of bytes requested by the length parameter.
1620:Generated_Source\PSoC5/USBUART.c **** *
1621:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Manual Buffer Management:*
1622:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
1623:Generated_Source\PSoC5/USBUART.c **** *   a DMA request. The firmware must wait until the DMA completes the data
1624:Generated_Source\PSoC5/USBUART.c **** *   transfer after calling the USBUART_ReadOutEP() API. For example,
1625:Generated_Source\PSoC5/USBUART.c **** *   by checking EPstate:
1626:Generated_Source\PSoC5/USBUART.c **** *
1627:Generated_Source\PSoC5/USBUART.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
1628:Generated_Source\PSoC5/USBUART.c **** *
1629:Generated_Source\PSoC5/USBUART.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
1630:Generated_Source\PSoC5/USBUART.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
1631:Generated_Source\PSoC5/USBUART.c **** *   buffer to SRAM.
1632:Generated_Source\PSoC5/USBUART.c **** *
1633:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Automatic Buffer Management:*
1634:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA. This is required only once and automatically generates DMA
1635:Generated_Source\PSoC5/USBUART.c **** *   requests as data arrives
1636:Generated_Source\PSoC5/USBUART.c **** *
1637:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
1638:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1639:Generated_Source\PSoC5/USBUART.c **** *  \param pData: A pointer to a data array from which the data for the endpoint
1640:Generated_Source\PSoC5/USBUART.c **** *         space is loaded.
1641:Generated_Source\PSoC5/USBUART.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
1642:Generated_Source\PSoC5/USBUART.c **** *          loads it into data array. Valid values are between 0 and 1023. The
1643:Generated_Source\PSoC5/USBUART.c **** *          function moves fewer than the requested number of bytes if the host
1644:Generated_Source\PSoC5/USBUART.c **** *          sends fewer bytes than requested.
1645:Generated_Source\PSoC5/USBUART.c **** *
1646:Generated_Source\PSoC5/USBUART.c **** * \return
1647:Generated_Source\PSoC5/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
1648:Generated_Source\PSoC5/USBUART.c **** *
1649:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1650:Generated_Source\PSoC5/USBUART.c **** *  No.
1651:Generated_Source\PSoC5/USBUART.c **** *
1652:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1653:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1654:Generated_Source\PSoC5/USBUART.c ****                                                                         
1655:Generated_Source\PSoC5/USBUART.c **** {
1656:Generated_Source\PSoC5/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1657:Generated_Source\PSoC5/USBUART.c ****     {
1658:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1659:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length to available data. */
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 47


1660:Generated_Source\PSoC5/USBUART.c ****         length = (length > USBUART_GetEPCount(epNumber)) ? USBUART_GetEPCount(epNumber) : length;
1661:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1662:Generated_Source\PSoC5/USBUART.c **** 
1663:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1664:Generated_Source\PSoC5/USBUART.c ****         {
1665:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using arbiter data register. */
1666:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1667:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < length; ++i)
1668:Generated_Source\PSoC5/USBUART.c ****             {
1669:Generated_Source\PSoC5/USBUART.c ****                 pData[i] = (uint8) USBUART_ARB_EP_BASE.arbEp[epNumber].rwDr;
1670:Generated_Source\PSoC5/USBUART.c ****             }
1671:Generated_Source\PSoC5/USBUART.c ****         }
1672:Generated_Source\PSoC5/USBUART.c **** 
1673:Generated_Source\PSoC5/USBUART.c ****         /* Arm OUT endpoint after data has been copied from endpoint buffer. */
1674:Generated_Source\PSoC5/USBUART.c ****         USBUART_EnableOutEP(epNumber);
1675:Generated_Source\PSoC5/USBUART.c ****     #else
1676:Generated_Source\PSoC5/USBUART.c **** 
1677:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1678:Generated_Source\PSoC5/USBUART.c ****             /* Initialize DMA if it was not initialized. */
1679:Generated_Source\PSoC5/USBUART.c ****             if (DMA_INVALID_TD == USBUART_DmaTd[epNumber])
1680:Generated_Source\PSoC5/USBUART.c ****             {
1681:Generated_Source\PSoC5/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1682:Generated_Source\PSoC5/USBUART.c ****             }
1683:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1684:Generated_Source\PSoC5/USBUART.c **** 
1685:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1686:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1687:Generated_Source\PSoC5/USBUART.c ****         {
1688:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1689:Generated_Source\PSoC5/USBUART.c **** 
1690:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
1691:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
1692:Generated_Source\PSoC5/USBUART.c **** 
1693:Generated_Source\PSoC5/USBUART.c ****             /* Configure source and destination. */
1694:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_BASE
1695:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1696:Generated_Source\PSoC5/USBUART.c **** 
1697:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1698:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG | 
1699:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1700:Generated_Source\PSoC5/USBUART.c **** 
1701:Generated_Source\PSoC5/USBUART.c ****             /* Validate descriptor to execute on following DMA request. */
1702:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1703:Generated_Source\PSoC5/USBUART.c **** 
1704:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
1705:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
1706:Generated_Source\PSoC5/USBUART.c ****         }
1707:Generated_Source\PSoC5/USBUART.c ****         #else
1708:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to transfer data. */
1709:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1710:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD_T
1711:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) &USBUART_ARB_EP_BASE.ar
1712:Generated_Source\PSoC5/USBUART.c **** 
1713:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel. */
1714:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1715:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1716:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 48


1717:Generated_Source\PSoC5/USBUART.c **** 
1718:Generated_Source\PSoC5/USBUART.c ****             /* Generate DMA request. */
1719:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBUART_ARB_EPX_CFG_DMA_REQ;
1720:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBUART_ARB_EPX_CFG_DMA_REQ;
1721:Generated_Source\PSoC5/USBUART.c **** 
1722:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1723:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1724:Generated_Source\PSoC5/USBUART.c ****             */
1725:Generated_Source\PSoC5/USBUART.c **** 
1726:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1727:Generated_Source\PSoC5/USBUART.c **** 
1728:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1729:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1730:Generated_Source\PSoC5/USBUART.c ****         {
1731:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1732:Generated_Source\PSoC5/USBUART.c ****             uint32 lengthDescr0, lengthDescr1;
1733:Generated_Source\PSoC5/USBUART.c **** 
1734:Generated_Source\PSoC5/USBUART.c ****             /* Get number of full bursts. */
1735:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST);
1736:Generated_Source\PSoC5/USBUART.c **** 
1737:Generated_Source\PSoC5/USBUART.c ****             /* Get number of elements in the last burst. */
1738:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BURST);
1739:Generated_Source\PSoC5/USBUART.c **** 
1740:Generated_Source\PSoC5/USBUART.c ****             /* Get total number of bursts. */
1741:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
1742:Generated_Source\PSoC5/USBUART.c **** 
1743:Generated_Source\PSoC5/USBUART.c ****             /* Adjust number of the data elements transfered in last burst. */
1744:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1745:Generated_Source\PSoC5/USBUART.c ****                                                                   (USBUART_DmaEpLastBurstEl[epNumbe
1746:Generated_Source\PSoC5/USBUART.c ****                                                                   (USBUART_DMA_BYTES_PER_BURST - 1u
1747:Generated_Source\PSoC5/USBUART.c **** 
1748:Generated_Source\PSoC5/USBUART.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
1749:Generated_Source\PSoC5/USBUART.c ****             lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
1750:Generated_Source\PSoC5/USBUART.c ****             lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
1751:Generated_Source\PSoC5/USBUART.c **** 
1752:Generated_Source\PSoC5/USBUART.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
1753:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (USBUART_DmaEpBurstCnt[epNumber] > 2u) ? USBUART_
1754:Generated_Source\PSoC5/USBUART.c **** 
1755:Generated_Source\PSoC5/USBUART.c ****             /* Mark last descriptor to be executed. */
1756:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] & 0x1u)) 
1757:Generated_Source\PSoC5/USBUART.c ****                                                                     USBUART_DMA_DESCR0_MASK : USBUA
1758:Generated_Source\PSoC5/USBUART.c **** 
1759:Generated_Source\PSoC5/USBUART.c ****             /* Store address of buffer and burst counter for endpoint. */
1760:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1761:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCntBackup[epNumber]   = USBUART_DmaEpBurstCnt[epNumber];
1762:Generated_Source\PSoC5/USBUART.c **** 
1763:Generated_Source\PSoC5/USBUART.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
1764:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCnt[epNum
1765:Generated_Source\PSoC5/USBUART.c **** 
1766:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
1767:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
1768:Generated_Source\PSoC5/USBUART.c **** 
1769:Generated_Source\PSoC5/USBUART.c ****             /* Set destination address. */
1770:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_BASE
1771:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP_BASE
1772:Generated_Source\PSoC5/USBUART.c **** 
1773:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) pData));
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 49


1774:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) pData + US
1775:Generated_Source\PSoC5/USBUART.c **** 
1776:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1777:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG  |
1778:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1779:Generated_Source\PSoC5/USBUART.c **** 
1780:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1781:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CFG  |
1782:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1783:Generated_Source\PSoC5/USBUART.c **** 
1784:Generated_Source\PSoC5/USBUART.c ****             /* Enable interrupt from DMA channel. */
1785:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetInterruptMask(channelNum);
1786:Generated_Source\PSoC5/USBUART.c **** 
1787:Generated_Source\PSoC5/USBUART.c ****             /* Validate DMA descriptor 0 and 1. */
1788:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1789:Generated_Source\PSoC5/USBUART.c **** 
1790:Generated_Source\PSoC5/USBUART.c ****             if (USBUART_DmaEpBurstCntBackup[epNumber] > 1u)
1791:Generated_Source\PSoC5/USBUART.c ****             {
1792:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
1793:Generated_Source\PSoC5/USBUART.c ****             }
1794:Generated_Source\PSoC5/USBUART.c **** 
1795:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
1796:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
1797:Generated_Source\PSoC5/USBUART.c ****         }
1798:Generated_Source\PSoC5/USBUART.c ****         #else
1799:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1800:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,  USBUART_DmaTd[epNumber
1801:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) &USBUART_ARB_EP_BASE.ar
1802:Generated_Source\PSoC5/USBUART.c **** 
1803:Generated_Source\PSoC5/USBUART.c ****             /* Clear Any potential pending DMA requests before starting DMA channel to transfer dat
1804:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1805:Generated_Source\PSoC5/USBUART.c **** 
1806:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel. */
1807:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1808:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1809:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1810:Generated_Source\PSoC5/USBUART.c **** 
1811:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1812:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1813:Generated_Source\PSoC5/USBUART.c ****             */
1814:Generated_Source\PSoC5/USBUART.c **** 
1815:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1816:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
1817:Generated_Source\PSoC5/USBUART.c ****     }
1818:Generated_Source\PSoC5/USBUART.c ****     else
1819:Generated_Source\PSoC5/USBUART.c ****     {
1820:Generated_Source\PSoC5/USBUART.c ****         length = 0u;
1821:Generated_Source\PSoC5/USBUART.c ****     }
1822:Generated_Source\PSoC5/USBUART.c **** 
1823:Generated_Source\PSoC5/USBUART.c ****     return (length);
1824:Generated_Source\PSoC5/USBUART.c **** }
1825:Generated_Source\PSoC5/USBUART.c **** 
1826:Generated_Source\PSoC5/USBUART.c **** 
1827:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_16BITS_EP_ACCESS_ENABLE)
1828:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1829:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_LoadInEP16
1830:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 50


1831:Generated_Source\PSoC5/USBUART.c **** *
1832:Generated_Source\PSoC5/USBUART.c **** *  This function performs different functionality depending on the Component’s
1833:Generated_Source\PSoC5/USBUART.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1834:Generated_Source\PSoC5/USBUART.c **** *  the Descriptor Root in Component Configure window.
1835:Generated_Source\PSoC5/USBUART.c **** *
1836:Generated_Source\PSoC5/USBUART.c **** *  *Manual (Static/Dynamic Allocation):*
1837:Generated_Source\PSoC5/USBUART.c **** *  This function loads and enables the specified USB data endpoint for an IN
1838:Generated_Source\PSoC5/USBUART.c **** *  data transfer.
1839:Generated_Source\PSoC5/USBUART.c **** *
1840:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Manual Buffer Management:*
1841:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1842:Generated_Source\PSoC5/USBUART.c **** *  Generates request for a transfer.
1843:Generated_Source\PSoC5/USBUART.c **** *
1844:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Automatic Buffer Management:*
1845:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1846:Generated_Source\PSoC5/USBUART.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1847:Generated_Source\PSoC5/USBUART.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1848:Generated_Source\PSoC5/USBUART.c **** *  prepares data in endpoint buffer.
1849:Generated_Source\PSoC5/USBUART.c **** *
1850:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
1851:Generated_Source\PSoC5/USBUART.c **** *        Valid values are between 1 and 8.
1852:Generated_Source\PSoC5/USBUART.c **** *  \param *pData A pointer to a data array from which the data for the endpoint
1853:Generated_Source\PSoC5/USBUART.c **** *        space is loaded. It shall be ensured that this pointer address is even
1854:Generated_Source\PSoC5/USBUART.c **** *        to ensure the 16-bit transfer is aligned to even address. Else, a hard
1855:Generated_Source\PSoC5/USBUART.c **** *        fault condition can occur.
1856:Generated_Source\PSoC5/USBUART.c **** *  \param length The number of bytes to transfer from the array and then send as
1857:Generated_Source\PSoC5/USBUART.c **** *        a result of an IN request. Valid values are between 0 and 512 (1023 for
1858:Generated_Source\PSoC5/USBUART.c **** *        DMA with Automatic Buffer Management mode). The value 512 is applicable
1859:Generated_Source\PSoC5/USBUART.c **** *        if only one endpoint is used.
1860:Generated_Source\PSoC5/USBUART.c **** *
1861:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1862:Generated_Source\PSoC5/USBUART.c **** *  No.
1863:Generated_Source\PSoC5/USBUART.c **** *
1864:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1865:Generated_Source\PSoC5/USBUART.c **** void USBUART_LoadInEP16(uint8 epNumber, const uint8 pData[], uint16 length)
1866:Generated_Source\PSoC5/USBUART.c **** {
1867:Generated_Source\PSoC5/USBUART.c ****     /* Check array alignment on half-word boundary. */
1868:Generated_Source\PSoC5/USBUART.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
1869:Generated_Source\PSoC5/USBUART.c **** 
1870:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1871:Generated_Source\PSoC5/USBUART.c ****     {
1872:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1873:Generated_Source\PSoC5/USBUART.c ****         /* Limit length to available buffer USB IP buffer size. */
1874:Generated_Source\PSoC5/USBUART.c ****         if (length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
1875:Generated_Source\PSoC5/USBUART.c ****         {
1876:Generated_Source\PSoC5/USBUART.c ****             length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
1877:Generated_Source\PSoC5/USBUART.c ****         }
1878:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1879:Generated_Source\PSoC5/USBUART.c **** 
1880:Generated_Source\PSoC5/USBUART.c ****         /* Set count and data toggle. */
1881:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBUART_EP[epNumber].ep
1882:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
1883:Generated_Source\PSoC5/USBUART.c **** 
1884:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length: 2 bytes are handled at one data register access. */
1885:Generated_Source\PSoC5/USBUART.c ****         length += (length & 0x01u);
1886:Generated_Source\PSoC5/USBUART.c **** 
1887:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 51


1888:Generated_Source\PSoC5/USBUART.c ****         if (NULL != pData)
1889:Generated_Source\PSoC5/USBUART.c ****         {
1890:Generated_Source\PSoC5/USBUART.c ****             /* Convert uint8 array to uint16. */
1891:Generated_Source\PSoC5/USBUART.c ****             const uint16 *dataBuf = (uint16 *) pData;
1892:Generated_Source\PSoC5/USBUART.c **** 
1893:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using 16-bits arbiter data register. */
1894:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1895:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < (length >> 1u); ++i)
1896:Generated_Source\PSoC5/USBUART.c ****             {
1897:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP16_BASE.arbEp[epNumber].rwDr16 = dataBuf[i];
1898:Generated_Source\PSoC5/USBUART.c ****             }
1899:Generated_Source\PSoC5/USBUART.c ****         }
1900:Generated_Source\PSoC5/USBUART.c **** 
1901:Generated_Source\PSoC5/USBUART.c ****         /* IN endpoint buffer is full - read to be read. */
1902:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1903:Generated_Source\PSoC5/USBUART.c **** 
1904:Generated_Source\PSoC5/USBUART.c ****         /* Arm IN endpoint. */
1905:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1906:Generated_Source\PSoC5/USBUART.c **** 
1907:Generated_Source\PSoC5/USBUART.c ****     #else
1908:Generated_Source\PSoC5/USBUART.c **** 
1909:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1910:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1911:Generated_Source\PSoC5/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1912:Generated_Source\PSoC5/USBUART.c **** 
1913:Generated_Source\PSoC5/USBUART.c ****             if ((pData != NULL) && (length > 0u))
1914:Generated_Source\PSoC5/USBUART.c ****             {
1915:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1916:Generated_Source\PSoC5/USBUART.c **** 
1917:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1918:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1919:Generated_Source\PSoC5/USBUART.c **** 
1920:Generated_Source\PSoC5/USBUART.c ****                 /* Configure source and destination. */
1921:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1922:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP1
1923:Generated_Source\PSoC5/USBUART.c **** 
1924:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1925:Generated_Source\PSoC5/USBUART.c ****                 length = (length >> 1u) - 1u;
1926:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1927:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1928:Generated_Source\PSoC5/USBUART.c **** 
1929:Generated_Source\PSoC5/USBUART.c ****                 /* Validate descriptor to execute on following DMA request. */
1930:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1931:Generated_Source\PSoC5/USBUART.c **** 
1932:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1933:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1934:Generated_Source\PSoC5/USBUART.c **** 
1935:Generated_Source\PSoC5/USBUART.c ****                 /* Generate DMA request. */
1936:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ
1937:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ
1938:Generated_Source\PSoC5/USBUART.c **** 
1939:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1940:Generated_Source\PSoC5/USBUART.c ****             }
1941:Generated_Source\PSoC5/USBUART.c ****             else
1942:Generated_Source\PSoC5/USBUART.c ****             {
1943:Generated_Source\PSoC5/USBUART.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1944:Generated_Source\PSoC5/USBUART.c ****                 USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 52


1945:Generated_Source\PSoC5/USBUART.c ****             }
1946:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1947:Generated_Source\PSoC5/USBUART.c **** 
1948:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1949:Generated_Source\PSoC5/USBUART.c ****             if (pData != NULL)
1950:Generated_Source\PSoC5/USBUART.c ****             {
1951:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1952:Generated_Source\PSoC5/USBUART.c **** 
1953:Generated_Source\PSoC5/USBUART.c ****                 /* Store address of buffer. */
1954:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1955:Generated_Source\PSoC5/USBUART.c **** 
1956:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1957:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1958:Generated_Source\PSoC5/USBUART.c **** 
1959:Generated_Source\PSoC5/USBUART.c ****                 /* Set destination address. */
1960:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP1
1961:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP1
1962:Generated_Source\PSoC5/USBUART.c **** 
1963:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1964:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1965:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1966:Generated_Source\PSoC5/USBUART.c **** 
1967:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1968:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CF
1969:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1970:Generated_Source\PSoC5/USBUART.c **** 
1971:Generated_Source\PSoC5/USBUART.c ****                 /* Enable interrupt from DMA channel. */
1972:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetInterruptMask(channelNum);
1973:Generated_Source\PSoC5/USBUART.c **** 
1974:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1975:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1976:Generated_Source\PSoC5/USBUART.c ****             }
1977:Generated_Source\PSoC5/USBUART.c ****             else
1978:Generated_Source\PSoC5/USBUART.c ****             {
1979:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1980:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1981:Generated_Source\PSoC5/USBUART.c **** 
1982:Generated_Source\PSoC5/USBUART.c ****                 if (length > 0u)
1983:Generated_Source\PSoC5/USBUART.c ****                 {
1984:Generated_Source\PSoC5/USBUART.c ****                     uint32 lengthDescr0, lengthDescr1;
1985:Generated_Source\PSoC5/USBUART.c ****                     uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1986:Generated_Source\PSoC5/USBUART.c **** 
1987:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of full bursts. */
1988:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST
1989:Generated_Source\PSoC5/USBUART.c **** 
1990:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of elements in the last burst. */
1991:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BU
1992:Generated_Source\PSoC5/USBUART.c **** 
1993:Generated_Source\PSoC5/USBUART.c ****                     /* Get total number of bursts. */
1994:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1995:Generated_Source\PSoC5/USBUART.c **** 
1996:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust number of data elements transferred in last burst. */
1997:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber])
1998:Generated_Source\PSoC5/USBUART.c ****                                                                           ((USBUART_DmaEpLastBurstE
1999:Generated_Source\PSoC5/USBUART.c ****                                                                            (USBUART_DMA_HALFWORDS_P
2000:Generated_Source\PSoC5/USBUART.c **** 
2001:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 53


2002:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
2003:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
2004:Generated_Source\PSoC5/USBUART.c **** 
2005:Generated_Source\PSoC5/USBUART.c ****                     /* Mark which descriptor is last one to execute. */
2006:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] &
2007:Generated_Source\PSoC5/USBUART.c ****                                                                             USBUART_DMA_DESCR0_MASK
2008:Generated_Source\PSoC5/USBUART.c **** 
2009:Generated_Source\PSoC5/USBUART.c ****                     /* Restore DMA settings for current transfer. */
2010:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChDisable(channelNum);
2011:Generated_Source\PSoC5/USBUART.c **** 
2012:Generated_Source\PSoC5/USBUART.c ****                     /* Restore destination address for input endpoint. */
2013:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
2014:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
2015:Generated_Source\PSoC5/USBUART.c ****                                                                                                    
2016:Generated_Source\PSoC5/USBUART.c **** 
2017:Generated_Source\PSoC5/USBUART.c ****                     /* Set number of elements to transfer. */
2018:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR0, lengthDescr0);
2019:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR1, lengthDescr1);
2020:Generated_Source\PSoC5/USBUART.c **** 
2021:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 0 and command to start with it. */
2022:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2023:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
2024:Generated_Source\PSoC5/USBUART.c **** 
2025:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 1. */
2026:Generated_Source\PSoC5/USBUART.c ****                     if (USBUART_DmaEpBurstCnt[epNumber] > 1u)
2027:Generated_Source\PSoC5/USBUART.c ****                     {
2028:Generated_Source\PSoC5/USBUART.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
2029:Generated_Source\PSoC5/USBUART.c ****                     }
2030:Generated_Source\PSoC5/USBUART.c **** 
2031:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
2032:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstC
2033:Generated_Source\PSoC5/USBUART.c **** 
2034:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA channel: configuration complete. */
2035:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChEnable(channelNum);
2036:Generated_Source\PSoC5/USBUART.c **** 
2037:Generated_Source\PSoC5/USBUART.c ****                 #if !defined (USBUART_MANUAL_IN_EP_ARM)
2038:Generated_Source\PSoC5/USBUART.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
2039:Generated_Source\PSoC5/USBUART.c ****                     USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
2040:Generated_Source\PSoC5/USBUART.c ****                 #endif  /* (USBUART_MANUAL_IN_EP_ARM) */
2041:Generated_Source\PSoC5/USBUART.c **** 
2042:Generated_Source\PSoC5/USBUART.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
2043:Generated_Source\PSoC5/USBUART.c ****                 }
2044:Generated_Source\PSoC5/USBUART.c ****                 else
2045:Generated_Source\PSoC5/USBUART.c ****                 {
2046:Generated_Source\PSoC5/USBUART.c ****                     /* When zero-length packet: arm IN endpoint directly. */
2047:Generated_Source\PSoC5/USBUART.c ****                     USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
2048:Generated_Source\PSoC5/USBUART.c ****                 }
2049:Generated_Source\PSoC5/USBUART.c ****             }
2050:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
2051:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
2052:Generated_Source\PSoC5/USBUART.c ****     }
2053:Generated_Source\PSoC5/USBUART.c **** }
2054:Generated_Source\PSoC5/USBUART.c **** 
2055:Generated_Source\PSoC5/USBUART.c **** 
2056:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2057:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReadOutEP16
2058:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 54


2059:Generated_Source\PSoC5/USBUART.c **** *
2060:Generated_Source\PSoC5/USBUART.c **** *   This function performs different functionality depending on the Component’s
2061:Generated_Source\PSoC5/USBUART.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
2062:Generated_Source\PSoC5/USBUART.c **** *   Descriptor Root in Component Configure window.
2063:Generated_Source\PSoC5/USBUART.c **** *
2064:Generated_Source\PSoC5/USBUART.c **** *   *Manual (Static/Dynamic Allocation):*
2065:Generated_Source\PSoC5/USBUART.c **** *   This function moves the specified number of bytes from endpoint buffer to
2066:Generated_Source\PSoC5/USBUART.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
2067:Generated_Source\PSoC5/USBUART.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
2068:Generated_Source\PSoC5/USBUART.c **** *   the number of bytes requested by the length parameter.
2069:Generated_Source\PSoC5/USBUART.c **** *
2070:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Manual Buffer Management:*
2071:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
2072:Generated_Source\PSoC5/USBUART.c **** *   a DMA request. The firmware must wait until the DMA completes the data
2073:Generated_Source\PSoC5/USBUART.c **** *   transfer after calling the USBUART_ReadOutEP() API. For example,
2074:Generated_Source\PSoC5/USBUART.c **** *   by checking EPstate:
2075:Generated_Source\PSoC5/USBUART.c **** *
2076:Generated_Source\PSoC5/USBUART.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
2077:Generated_Source\PSoC5/USBUART.c **** *
2078:Generated_Source\PSoC5/USBUART.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
2079:Generated_Source\PSoC5/USBUART.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
2080:Generated_Source\PSoC5/USBUART.c **** *   buffer to SRAM.
2081:Generated_Source\PSoC5/USBUART.c **** *
2082:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Automatic Buffer Management:*
2083:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA. This is required only once and automatically generates DMA
2084:Generated_Source\PSoC5/USBUART.c **** *   requests as data arrives
2085:Generated_Source\PSoC5/USBUART.c **** *
2086:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
2087:Generated_Source\PSoC5/USBUART.c **** *         Valid values are between 1 and 8.
2088:Generated_Source\PSoC5/USBUART.c **** *  \param pData: A pointer to a data array into which the data for the endpoint
2089:Generated_Source\PSoC5/USBUART.c **** *         space is copied. It shall be ensured that this pointer address is
2090:Generated_Source\PSoC5/USBUART.c **** *         even to ensure the 16-bit transfer is aligned to even address. Else,
2091:Generated_Source\PSoC5/USBUART.c **** *         a hard fault condition can occur.
2092:Generated_Source\PSoC5/USBUART.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
2093:Generated_Source\PSoC5/USBUART.c **** *         loads it into data array. Valid values are between 0 and 1023. The
2094:Generated_Source\PSoC5/USBUART.c **** *         function moves fewer than the requested number of bytes if the host
2095:Generated_Source\PSoC5/USBUART.c **** *         sends fewer bytes than requested.
2096:Generated_Source\PSoC5/USBUART.c **** *
2097:Generated_Source\PSoC5/USBUART.c **** * \return
2098:Generated_Source\PSoC5/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
2099:Generated_Source\PSoC5/USBUART.c **** *
2100:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2101:Generated_Source\PSoC5/USBUART.c **** *  No.
2102:Generated_Source\PSoC5/USBUART.c **** *
2103:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2104:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_ReadOutEP16(uint8 epNumber, uint8 pData[], uint16 length)
2105:Generated_Source\PSoC5/USBUART.c **** {
2106:Generated_Source\PSoC5/USBUART.c ****     uint32 adjLength;
2107:Generated_Source\PSoC5/USBUART.c **** 
2108:Generated_Source\PSoC5/USBUART.c ****     /* Check array alignment on half-word boundary */
2109:Generated_Source\PSoC5/USBUART.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
2110:Generated_Source\PSoC5/USBUART.c **** 
2111:Generated_Source\PSoC5/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
2112:Generated_Source\PSoC5/USBUART.c ****     {
2113:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
2114:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length to available data. */
2115:Generated_Source\PSoC5/USBUART.c ****         length = (length > USBUART_GetEPCount(epNumber)) ? USBUART_GetEPCount(epNumber) : length;
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 55


2116:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
2117:Generated_Source\PSoC5/USBUART.c **** 
2118:Generated_Source\PSoC5/USBUART.c ****     /* Adjust requested length: 2 bytes are handled at one data register access. */
2119:Generated_Source\PSoC5/USBUART.c ****     adjLength =  length + ((uint32)length & 1u);
2120:Generated_Source\PSoC5/USBUART.c **** 
2121:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
2122:Generated_Source\PSoC5/USBUART.c ****         {
2123:Generated_Source\PSoC5/USBUART.c ****             /* Convert uint8 array to uint16. */
2124:Generated_Source\PSoC5/USBUART.c ****             uint16 *dataBuf = (uint16 *) pData;
2125:Generated_Source\PSoC5/USBUART.c **** 
2126:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using 16-bits arbiter data register. */
2127:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
2128:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < (adjLength >> 1u); ++i)
2129:Generated_Source\PSoC5/USBUART.c ****             {
2130:Generated_Source\PSoC5/USBUART.c ****                 dataBuf[i] = (uint16) USBUART_ARB_EP16_BASE.arbEp[epNumber].rwDr16;
2131:Generated_Source\PSoC5/USBUART.c ****             }
2132:Generated_Source\PSoC5/USBUART.c ****         }
2133:Generated_Source\PSoC5/USBUART.c **** 
2134:Generated_Source\PSoC5/USBUART.c ****         /* Arm OUT endpoint after data has been read from endpoint buffer. */
2135:Generated_Source\PSoC5/USBUART.c ****         USBUART_EnableOutEP(epNumber);
2136:Generated_Source\PSoC5/USBUART.c ****     #else
2137:Generated_Source\PSoC5/USBUART.c **** 
2138:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
2139:Generated_Source\PSoC5/USBUART.c ****         {
2140:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
2141:Generated_Source\PSoC5/USBUART.c **** 
2142:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
2143:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
2144:Generated_Source\PSoC5/USBUART.c **** 
2145:Generated_Source\PSoC5/USBUART.c ****             /* Configure source and destination. */
2146:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP16_BA
2147:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
2148:Generated_Source\PSoC5/USBUART.c **** 
2149:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
2150:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG | 
2151:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2152:Generated_Source\PSoC5/USBUART.c **** 
2153:Generated_Source\PSoC5/USBUART.c ****             /* Validate descriptor to execute on following DMA request. */
2154:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2155:Generated_Source\PSoC5/USBUART.c **** 
2156:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
2157:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
2158:Generated_Source\PSoC5/USBUART.c **** 
2159:Generated_Source\PSoC5/USBUART.c ****             /* Generate DMA request. */
2160:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ;
2161:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ;
2162:Generated_Source\PSoC5/USBUART.c **** 
2163:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2164:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2165:Generated_Source\PSoC5/USBUART.c ****             */
2166:Generated_Source\PSoC5/USBUART.c ****         }
2167:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
2168:Generated_Source\PSoC5/USBUART.c **** 
2169:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
2170:Generated_Source\PSoC5/USBUART.c ****         {
2171:Generated_Source\PSoC5/USBUART.c ****             uint32 lengthDescr0, lengthDescr1;
2172:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 56


2173:Generated_Source\PSoC5/USBUART.c **** 
2174:Generated_Source\PSoC5/USBUART.c ****             /* Get number of full bursts. */
2175:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = (uint8) (adjLength / USBUART_DMA_BYTES_PER_BURST);
2176:Generated_Source\PSoC5/USBUART.c **** 
2177:Generated_Source\PSoC5/USBUART.c ****             /* Get number of elements in last burst. */
2178:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (adjLength % USBUART_DMA_BYTES_PER_BURST);
2179:Generated_Source\PSoC5/USBUART.c **** 
2180:Generated_Source\PSoC5/USBUART.c ****             /* Get total number of bursts. */
2181:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
2182:Generated_Source\PSoC5/USBUART.c **** 
2183:Generated_Source\PSoC5/USBUART.c ****             /* Adjust number of data elements transferred in last burst. */
2184:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
2185:Generated_Source\PSoC5/USBUART.c ****                                                                   ((USBUART_DmaEpLastBurstEl[epNumb
2186:Generated_Source\PSoC5/USBUART.c ****                                                                    (USBUART_DMA_HALFWORDS_PER_BURST
2187:Generated_Source\PSoC5/USBUART.c **** 
2188:Generated_Source\PSoC5/USBUART.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
2189:Generated_Source\PSoC5/USBUART.c ****             lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
2190:Generated_Source\PSoC5/USBUART.c ****             lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
2191:Generated_Source\PSoC5/USBUART.c **** 
2192:Generated_Source\PSoC5/USBUART.c ****             /* Mark last descriptor to be executed. */
2193:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] & 0x1u)) 
2194:Generated_Source\PSoC5/USBUART.c ****                                                                     USBUART_DMA_DESCR0_MASK : USBUA
2195:Generated_Source\PSoC5/USBUART.c **** 
2196:Generated_Source\PSoC5/USBUART.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
2197:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (USBUART_DmaEpBurstCnt[epNumber] > 2u) ? USBUART_
2198:Generated_Source\PSoC5/USBUART.c **** 
2199:Generated_Source\PSoC5/USBUART.c ****             /* Mark that 16-bits access to data register is performed. */
2200:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= USBUART_DMA_DESCR_16BITS;
2201:Generated_Source\PSoC5/USBUART.c **** 
2202:Generated_Source\PSoC5/USBUART.c ****             /* Store address of buffer and burst counter for endpoint. */
2203:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
2204:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCntBackup[epNumber]   = USBUART_DmaEpBurstCnt[epNumber];
2205:Generated_Source\PSoC5/USBUART.c **** 
2206:Generated_Source\PSoC5/USBUART.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
2207:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCnt[epNum
2208:Generated_Source\PSoC5/USBUART.c **** 
2209:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
2210:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
2211:Generated_Source\PSoC5/USBUART.c **** 
2212:Generated_Source\PSoC5/USBUART.c ****             /* Set destination address. */
2213:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP16_BA
2214:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP16_BA
2215:Generated_Source\PSoC5/USBUART.c **** 
2216:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) pData));
2217:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) pData + US
2218:Generated_Source\PSoC5/USBUART.c **** 
2219:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor 0. */
2220:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG  |
2221:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2222:Generated_Source\PSoC5/USBUART.c **** 
2223:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor 1. */
2224:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CFG  |
2225:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2226:Generated_Source\PSoC5/USBUART.c **** 
2227:Generated_Source\PSoC5/USBUART.c ****             /* Enable interrupt from DMA channel. */
2228:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetInterruptMask(channelNum);
2229:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 57


2230:Generated_Source\PSoC5/USBUART.c ****             /* Validate DMA descriptor 0 and 1. */
2231:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2232:Generated_Source\PSoC5/USBUART.c ****             
2233:Generated_Source\PSoC5/USBUART.c ****             if (USBUART_DmaEpBurstCntBackup[epNumber] > 1u)
2234:Generated_Source\PSoC5/USBUART.c ****             {
2235:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
2236:Generated_Source\PSoC5/USBUART.c ****             }
2237:Generated_Source\PSoC5/USBUART.c **** 
2238:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
2239:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
2240:Generated_Source\PSoC5/USBUART.c **** 
2241:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2242:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2243:Generated_Source\PSoC5/USBUART.c ****             */
2244:Generated_Source\PSoC5/USBUART.c ****         }
2245:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
2246:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
2247:Generated_Source\PSoC5/USBUART.c ****     }
2248:Generated_Source\PSoC5/USBUART.c ****     else
2249:Generated_Source\PSoC5/USBUART.c ****     {
2250:Generated_Source\PSoC5/USBUART.c ****         length = 0u;
2251:Generated_Source\PSoC5/USBUART.c ****     }
2252:Generated_Source\PSoC5/USBUART.c **** 
2253:Generated_Source\PSoC5/USBUART.c ****     return (length);
2254:Generated_Source\PSoC5/USBUART.c **** }
2255:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_16BITS_EP_ACCESS_ENABLE) */
2256:Generated_Source\PSoC5/USBUART.c **** 
2257:Generated_Source\PSoC5/USBUART.c **** 
2258:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2259:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_EnableOutEP
2260:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2261:Generated_Source\PSoC5/USBUART.c **** *
2262:Generated_Source\PSoC5/USBUART.c **** *  This function enables the specified endpoint for OUT transfers. Do not call
2263:Generated_Source\PSoC5/USBUART.c **** *  this function for IN endpoints.
2264:Generated_Source\PSoC5/USBUART.c **** *
2265:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number. Valid values are between
2266:Generated_Source\PSoC5/USBUART.c **** *  1 and 8.
2267:Generated_Source\PSoC5/USBUART.c **** *
2268:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2269:Generated_Source\PSoC5/USBUART.c **** *
2270:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
2271:Generated_Source\PSoC5/USBUART.c **** *
2272:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2273:Generated_Source\PSoC5/USBUART.c **** *  No.
2274:Generated_Source\PSoC5/USBUART.c **** *
2275:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2276:Generated_Source\PSoC5/USBUART.c **** void USBUART_EnableOutEP(uint8 epNumber) 
2277:Generated_Source\PSoC5/USBUART.c **** {
 950              		.loc 1 2277 0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 0
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 954              		@ link register save eliminated.
 955              	.LVL70:
2278:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 956              		.loc 1 2278 0
 957 0000 431E     		subs	r3, r0, #1
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 58


 958 0002 DBB2     		uxtb	r3, r3
 959 0004 072B     		cmp	r3, #7
 960 0006 0BD8     		bhi	.L65
2279:Generated_Source\PSoC5/USBUART.c ****     {
2280:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 961              		.loc 1 2280 0
 962 0008 4200     		lsls	r2, r0, #1
 963 000a 0244     		add	r2, r2, r0
 964 000c 9300     		lsls	r3, r2, #2
 965 000e 054A     		ldr	r2, .L67
 966 0010 1344     		add	r3, r3, r2
 967 0012 0022     		movs	r2, #0
 968 0014 5A70     		strb	r2, [r3, #1]
2281:Generated_Source\PSoC5/USBUART.c **** 
2282:Generated_Source\PSoC5/USBUART.c ****         /* Enable OUT endpoint to be written by Host. */
2283:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 969              		.loc 1 2283 0
 970 0016 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 971 0018 D2B2     		uxtb	r2, r2
 972 001a 0001     		lsls	r0, r0, #4
 973              	.LVL71:
 974 001c 024B     		ldr	r3, .L67+4
 975 001e 1A54     		strb	r2, [r3, r0]
 976              	.L65:
 977 0020 7047     		bx	lr
 978              	.L68:
 979 0022 00BF     		.align	2
 980              	.L67:
 981 0024 00000000 		.word	USBUART_EP
 982 0028 FE5F0040 		.word	1073766398
 983              		.cfi_endproc
 984              	.LFE13:
 985              		.size	USBUART_EnableOutEP, .-USBUART_EnableOutEP
 986              		.section	.text.USBUART_ReadOutEP,"ax",%progbits
 987              		.align	2
 988              		.global	USBUART_ReadOutEP
 989              		.thumb
 990              		.thumb_func
 991              		.type	USBUART_ReadOutEP, %function
 992              	USBUART_ReadOutEP:
 993              	.LFB12:
1655:Generated_Source\PSoC5/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 994              		.loc 1 1655 0
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 0
 997              		@ frame_needed = 0, uses_anonymous_args = 0
 998              	.LVL72:
 999 0000 70B5     		push	{r4, r5, r6, lr}
 1000              		.cfi_def_cfa_offset 16
 1001              		.cfi_offset 4, -16
 1002              		.cfi_offset 5, -12
 1003              		.cfi_offset 6, -8
 1004              		.cfi_offset 14, -4
1656:Generated_Source\PSoC5/USBUART.c ****     {
 1005              		.loc 1 1656 0
 1006 0002 D9B1     		cbz	r1, .L74
 1007 0004 0546     		mov	r5, r0
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 59


 1008 0006 1446     		mov	r4, r2
 1009 0008 0E46     		mov	r6, r1
1656:Generated_Source\PSoC5/USBUART.c ****     {
 1010              		.loc 1 1656 0 is_stmt 0 discriminator 1
 1011 000a C8B1     		cbz	r0, .L75
1656:Generated_Source\PSoC5/USBUART.c ****     {
 1012              		.loc 1 1656 0 discriminator 2
 1013 000c 0828     		cmp	r0, #8
 1014 000e 19D8     		bhi	.L76
1660:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
 1015              		.loc 1 1660 0 is_stmt 1
 1016 0010 FFF7FEFF 		bl	USBUART_GetEPCount
 1017              	.LVL73:
 1018 0014 A042     		cmp	r0, r4
 1019 0016 03D2     		bcs	.L71
1660:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
 1020              		.loc 1 1660 0 is_stmt 0 discriminator 1
 1021 0018 2846     		mov	r0, r5
 1022 001a FFF7FEFF 		bl	USBUART_GetEPCount
 1023              	.LVL74:
 1024 001e 0446     		mov	r4, r0
 1025              	.L71:
 1026              	.LVL75:
 1027              	.LBB4:
1667:Generated_Source\PSoC5/USBUART.c ****             {
 1028              		.loc 1 1667 0 is_stmt 1 discriminator 4
 1029 0020 0023     		movs	r3, #0
 1030 0022 05E0     		b	.L72
 1031              	.LVL76:
 1032              	.L73:
1669:Generated_Source\PSoC5/USBUART.c ****             }
 1033              		.loc 1 1669 0 discriminator 3
 1034 0024 2901     		lsls	r1, r5, #4
 1035 0026 094A     		ldr	r2, .L78
 1036 0028 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 1037 002a F254     		strb	r2, [r6, r3]
1667:Generated_Source\PSoC5/USBUART.c ****             {
 1038              		.loc 1 1667 0 discriminator 3
 1039 002c 0133     		adds	r3, r3, #1
 1040              	.LVL77:
 1041 002e 9BB2     		uxth	r3, r3
 1042              	.LVL78:
 1043              	.L72:
1667:Generated_Source\PSoC5/USBUART.c ****             {
 1044              		.loc 1 1667 0 is_stmt 0 discriminator 1
 1045 0030 A342     		cmp	r3, r4
 1046 0032 F7D3     		bcc	.L73
 1047              	.LBE4:
1674:Generated_Source\PSoC5/USBUART.c ****     #else
 1048              		.loc 1 1674 0 is_stmt 1
 1049 0034 2846     		mov	r0, r5
 1050 0036 FFF7FEFF 		bl	USBUART_EnableOutEP
 1051              	.LVL79:
 1052 003a 04E0     		b	.L70
 1053              	.LVL80:
 1054              	.L74:
1820:Generated_Source\PSoC5/USBUART.c ****     }
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 60


 1055              		.loc 1 1820 0
 1056 003c 0024     		movs	r4, #0
 1057 003e 02E0     		b	.L70
 1058              	.L75:
 1059 0040 0024     		movs	r4, #0
 1060 0042 00E0     		b	.L70
 1061              	.L76:
 1062 0044 0024     		movs	r4, #0
 1063              	.LVL81:
 1064              	.L70:
1824:Generated_Source\PSoC5/USBUART.c **** 
 1065              		.loc 1 1824 0
 1066 0046 2046     		mov	r0, r4
 1067 0048 70BD     		pop	{r4, r5, r6, pc}
 1068              	.LVL82:
 1069              	.L79:
 1070 004a 00BF     		.align	2
 1071              	.L78:
 1072 004c 78600040 		.word	1073766520
 1073              		.cfi_endproc
 1074              	.LFE12:
 1075              		.size	USBUART_ReadOutEP, .-USBUART_ReadOutEP
 1076              		.section	.text.USBUART_DisableOutEP,"ax",%progbits
 1077              		.align	2
 1078              		.global	USBUART_DisableOutEP
 1079              		.thumb
 1080              		.thumb_func
 1081              		.type	USBUART_DisableOutEP, %function
 1082              	USBUART_DisableOutEP:
 1083              	.LFB14:
2284:Generated_Source\PSoC5/USBUART.c ****         
2285:Generated_Source\PSoC5/USBUART.c ****     }
2286:Generated_Source\PSoC5/USBUART.c **** }
2287:Generated_Source\PSoC5/USBUART.c **** 
2288:Generated_Source\PSoC5/USBUART.c **** 
2289:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2290:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_DisableOutEP
2291:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2292:Generated_Source\PSoC5/USBUART.c **** *
2293:Generated_Source\PSoC5/USBUART.c **** *  This function disables the specified USBFS OUT endpoint. Do not call this
2294:Generated_Source\PSoC5/USBUART.c **** *  function for IN endpoints.
2295:Generated_Source\PSoC5/USBUART.c **** *
2296:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
2297:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
2298:Generated_Source\PSoC5/USBUART.c **** *
2299:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2300:Generated_Source\PSoC5/USBUART.c **** void USBUART_DisableOutEP(uint8 epNumber) 
2301:Generated_Source\PSoC5/USBUART.c **** {
 1084              		.loc 1 2301 0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 0
 1087              		@ frame_needed = 0, uses_anonymous_args = 0
 1088              		@ link register save eliminated.
 1089              	.LVL83:
2302:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1090              		.loc 1 2302 0
 1091 0000 431E     		subs	r3, r0, #1
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 61


 1092 0002 DBB2     		uxtb	r3, r3
 1093 0004 072B     		cmp	r3, #7
 1094 0006 03D8     		bhi	.L80
2303:Generated_Source\PSoC5/USBUART.c ****     {
2304:Generated_Source\PSoC5/USBUART.c ****         /* Set NAK response for OUT endpoint. */
2305:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_MODE_NAK_OUT;
 1095              		.loc 1 2305 0
 1096 0008 0001     		lsls	r0, r0, #4
 1097              	.LVL84:
 1098 000a 024B     		ldr	r3, .L82
 1099 000c 0822     		movs	r2, #8
 1100 000e 1A54     		strb	r2, [r3, r0]
 1101              	.L80:
 1102 0010 7047     		bx	lr
 1103              	.L83:
 1104 0012 00BF     		.align	2
 1105              	.L82:
 1106 0014 FE5F0040 		.word	1073766398
 1107              		.cfi_endproc
 1108              	.LFE14:
 1109              		.size	USBUART_DisableOutEP, .-USBUART_DisableOutEP
 1110              		.section	.text.USBUART_Force,"ax",%progbits
 1111              		.align	2
 1112              		.global	USBUART_Force
 1113              		.thumb
 1114              		.thumb_func
 1115              		.type	USBUART_Force, %function
 1116              	USBUART_Force:
 1117              	.LFB15:
2306:Generated_Source\PSoC5/USBUART.c ****     }
2307:Generated_Source\PSoC5/USBUART.c **** }
2308:Generated_Source\PSoC5/USBUART.c **** 
2309:Generated_Source\PSoC5/USBUART.c **** 
2310:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2311:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Force
2312:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2313:Generated_Source\PSoC5/USBUART.c **** *
2314:Generated_Source\PSoC5/USBUART.c **** *  This function forces a USB J, K, or SE0 state on the D+/D– lines. It provides
2315:Generated_Source\PSoC5/USBUART.c **** *  the necessary mechanism for a USB device application to perform a USB Remote
2316:Generated_Source\PSoC5/USBUART.c **** *  Wakeup. For more information, see the USB 2.0 Specification for details on
2317:Generated_Source\PSoC5/USBUART.c **** *  Suspend and Resume.
2318:Generated_Source\PSoC5/USBUART.c **** *
2319:Generated_Source\PSoC5/USBUART.c **** *  \param state A byte indicating which of the four bus states to enable.
2320:Generated_Source\PSoC5/USBUART.c **** *        Symbolic names  and their associated values are listed here:
2321:Generated_Source\PSoC5/USBUART.c **** *    State                      |Description
2322:Generated_Source\PSoC5/USBUART.c **** *    ---------------------------|----------------------------------------------
2323:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_J   | Force a J State onto the D+/D– lines
2324:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_K   | Force a K State onto the D+/D– lines
2325:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_SE0 | Force a Single Ended 0 onto the D+/D– lines
2326:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_NONE| Return bus to SIE control
2327:Generated_Source\PSoC5/USBUART.c **** *
2328:Generated_Source\PSoC5/USBUART.c **** *
2329:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2330:Generated_Source\PSoC5/USBUART.c **** void USBUART_Force(uint8 bState) 
2331:Generated_Source\PSoC5/USBUART.c **** {
 1118              		.loc 1 2331 0
 1119              		.cfi_startproc
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 62


 1120              		@ args = 0, pretend = 0, frame = 0
 1121              		@ frame_needed = 0, uses_anonymous_args = 0
 1122              		@ link register save eliminated.
 1123              	.LVL85:
2332:Generated_Source\PSoC5/USBUART.c ****     /* This registers is used only for manual control of SIE (no masking is
2333:Generated_Source\PSoC5/USBUART.c ****     * needed before write into it).
2334:Generated_Source\PSoC5/USBUART.c ****     */
2335:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR0_REG = bState;
 1124              		.loc 1 2335 0
 1125 0000 014B     		ldr	r3, .L85
 1126 0002 1870     		strb	r0, [r3]
 1127 0004 7047     		bx	lr
 1128              	.L86:
 1129 0006 00BF     		.align	2
 1130              	.L85:
 1131 0008 10600040 		.word	1073766416
 1132              		.cfi_endproc
 1133              	.LFE15:
 1134              		.size	USBUART_Force, .-USBUART_Force
 1135              		.section	.text.USBUART_GetEPAckState,"ax",%progbits
 1136              		.align	2
 1137              		.global	USBUART_GetEPAckState
 1138              		.thumb
 1139              		.thumb_func
 1140              		.type	USBUART_GetEPAckState, %function
 1141              	USBUART_GetEPAckState:
 1142              	.LFB16:
2336:Generated_Source\PSoC5/USBUART.c **** }
2337:Generated_Source\PSoC5/USBUART.c **** 
2338:Generated_Source\PSoC5/USBUART.c **** 
2339:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2340:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPAckState
2341:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2342:Generated_Source\PSoC5/USBUART.c **** *
2343:Generated_Source\PSoC5/USBUART.c **** *  This function determines whether an ACK transaction occurred on this endpoint
2344:Generated_Source\PSoC5/USBUART.c **** *  by reading the ACK bit in the control register of the endpoint. It does not
2345:Generated_Source\PSoC5/USBUART.c **** *  clear the ACK bit.
2346:Generated_Source\PSoC5/USBUART.c **** *
2347:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
2348:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
2349:Generated_Source\PSoC5/USBUART.c **** *
2350:Generated_Source\PSoC5/USBUART.c **** *  \return
2351:Generated_Source\PSoC5/USBUART.c **** *  If an ACKed transaction occurred, this function returns a non-zero value.
2352:Generated_Source\PSoC5/USBUART.c **** *  Otherwise, it returns zero.
2353:Generated_Source\PSoC5/USBUART.c **** *
2354:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2355:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetEPAckState(uint8 epNumber) 
2356:Generated_Source\PSoC5/USBUART.c **** {
 1143              		.loc 1 2356 0
 1144              		.cfi_startproc
 1145              		@ args = 0, pretend = 0, frame = 0
 1146              		@ frame_needed = 0, uses_anonymous_args = 0
 1147              		@ link register save eliminated.
 1148              	.LVL86:
2357:Generated_Source\PSoC5/USBUART.c ****     uint8 cr = 0u;
2358:Generated_Source\PSoC5/USBUART.c **** 
2359:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 63


 1149              		.loc 1 2359 0
 1150 0000 431E     		subs	r3, r0, #1
 1151 0002 DBB2     		uxtb	r3, r3
 1152 0004 072B     		cmp	r3, #7
 1153 0006 06D8     		bhi	.L89
2360:Generated_Source\PSoC5/USBUART.c ****     {
2361:Generated_Source\PSoC5/USBUART.c ****         cr = USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 & USBUART_MODE_ACKD;
 1154              		.loc 1 2361 0
 1155 0008 0001     		lsls	r0, r0, #4
 1156              	.LVL87:
 1157 000a 044B     		ldr	r3, .L90
 1158 000c 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 1159 000e 00F01000 		and	r0, r0, #16
 1160 0012 C0B2     		uxtb	r0, r0
 1161              	.LVL88:
 1162 0014 7047     		bx	lr
 1163              	.LVL89:
 1164              	.L89:
2357:Generated_Source\PSoC5/USBUART.c ****     uint8 cr = 0u;
 1165              		.loc 1 2357 0
 1166 0016 0020     		movs	r0, #0
 1167              	.LVL90:
2362:Generated_Source\PSoC5/USBUART.c ****     }
2363:Generated_Source\PSoC5/USBUART.c **** 
2364:Generated_Source\PSoC5/USBUART.c ****     return ((uint8) cr);
2365:Generated_Source\PSoC5/USBUART.c **** }
 1168              		.loc 1 2365 0
 1169 0018 7047     		bx	lr
 1170              	.L91:
 1171 001a 00BF     		.align	2
 1172              	.L90:
 1173 001c FE5F0040 		.word	1073766398
 1174              		.cfi_endproc
 1175              	.LFE16:
 1176              		.size	USBUART_GetEPAckState, .-USBUART_GetEPAckState
 1177              		.section	.text.USBUART_SetPowerStatus,"ax",%progbits
 1178              		.align	2
 1179              		.global	USBUART_SetPowerStatus
 1180              		.thumb
 1181              		.thumb_func
 1182              		.type	USBUART_SetPowerStatus, %function
 1183              	USBUART_SetPowerStatus:
 1184              	.LFB17:
2366:Generated_Source\PSoC5/USBUART.c **** 
2367:Generated_Source\PSoC5/USBUART.c **** 
2368:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2369:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_SetPowerStatus
2370:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2371:Generated_Source\PSoC5/USBUART.c **** *
2372:Generated_Source\PSoC5/USBUART.c **** *  This function sets the current power status. The device replies to USB
2373:Generated_Source\PSoC5/USBUART.c **** *  GET_STATUS requests based on this value. This allows the device to properly
2374:Generated_Source\PSoC5/USBUART.c **** *  report its status for USB Chapter 9 compliance. Devices can change their
2375:Generated_Source\PSoC5/USBUART.c **** *  power source from self powered to bus powered at any time and report their
2376:Generated_Source\PSoC5/USBUART.c **** *  current power source as part of the device status. You should call this
2377:Generated_Source\PSoC5/USBUART.c **** *  function any time your device changes from self powered to bus powered or
2378:Generated_Source\PSoC5/USBUART.c **** *  vice versa, and set the status appropriately.
2379:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 64


2380:Generated_Source\PSoC5/USBUART.c **** *  \param powerStatus: Contains the desired power status, one for self powered
2381:Generated_Source\PSoC5/USBUART.c **** *        or zero for bus powered. Symbolic names and their associated values are
2382:Generated_Source\PSoC5/USBUART.c **** *        given here:
2383:Generated_Source\PSoC5/USBUART.c **** *  Power Status                                |Description
2384:Generated_Source\PSoC5/USBUART.c **** *  --------------------------------------------|---------------------------
2385:Generated_Source\PSoC5/USBUART.c **** *  USBUART_DEVICE_STATUS_BUS_POWERED  | Set the device to bus powered
2386:Generated_Source\PSoC5/USBUART.c **** *  USBUART_DEVICE_STATUS_SELF_POWERED | Set the device to self powered
2387:Generated_Source\PSoC5/USBUART.c **** *
2388:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2389:Generated_Source\PSoC5/USBUART.c **** *
2390:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_deviceStatus - set power status
2391:Generated_Source\PSoC5/USBUART.c **** *
2392:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2393:Generated_Source\PSoC5/USBUART.c **** *  No.
2394:Generated_Source\PSoC5/USBUART.c **** *
2395:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2396:Generated_Source\PSoC5/USBUART.c **** void USBUART_SetPowerStatus(uint8 powerStatus) 
2397:Generated_Source\PSoC5/USBUART.c **** {
 1185              		.loc 1 2397 0
 1186              		.cfi_startproc
 1187              		@ args = 0, pretend = 0, frame = 0
 1188              		@ frame_needed = 0, uses_anonymous_args = 0
 1189              		@ link register save eliminated.
 1190              	.LVL91:
2398:Generated_Source\PSoC5/USBUART.c ****     if (powerStatus != USBUART_DEVICE_STATUS_BUS_POWERED)
 1191              		.loc 1 2398 0
 1192 0000 28B1     		cbz	r0, .L93
2399:Generated_Source\PSoC5/USBUART.c ****     {
2400:Generated_Source\PSoC5/USBUART.c ****         USBUART_deviceStatus |= (uint8)  USBUART_DEVICE_STATUS_SELF_POWERED;
 1193              		.loc 1 2400 0
 1194 0002 064A     		ldr	r2, .L95
 1195 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1196 0006 43F00103 		orr	r3, r3, #1
 1197 000a 1370     		strb	r3, [r2]
 1198 000c 7047     		bx	lr
 1199              	.L93:
2401:Generated_Source\PSoC5/USBUART.c ****     }
2402:Generated_Source\PSoC5/USBUART.c ****     else
2403:Generated_Source\PSoC5/USBUART.c ****     {
2404:Generated_Source\PSoC5/USBUART.c ****         USBUART_deviceStatus &= (uint8) ~USBUART_DEVICE_STATUS_SELF_POWERED;
 1200              		.loc 1 2404 0
 1201 000e 034A     		ldr	r2, .L95
 1202 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1203 0012 03F0FE03 		and	r3, r3, #254
 1204 0016 1370     		strb	r3, [r2]
 1205 0018 7047     		bx	lr
 1206              	.L96:
 1207 001a 00BF     		.align	2
 1208              	.L95:
 1209 001c 00000000 		.word	USBUART_deviceStatus
 1210              		.cfi_endproc
 1211              	.LFE17:
 1212              		.size	USBUART_SetPowerStatus, .-USBUART_SetPowerStatus
 1213              		.section	.text.USBUART_RWUEnabled,"ax",%progbits
 1214              		.align	2
 1215              		.global	USBUART_RWUEnabled
 1216              		.thumb
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 65


 1217              		.thumb_func
 1218              		.type	USBUART_RWUEnabled, %function
 1219              	USBUART_RWUEnabled:
 1220              	.LFB18:
2405:Generated_Source\PSoC5/USBUART.c ****     }
2406:Generated_Source\PSoC5/USBUART.c **** }
2407:Generated_Source\PSoC5/USBUART.c **** 
2408:Generated_Source\PSoC5/USBUART.c **** 
2409:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_VBUS_MONITORING_ENABLE)
2410:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
2411:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_VBusPresent
2412:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
2413:Generated_Source\PSoC5/USBUART.c ****     *
2414:Generated_Source\PSoC5/USBUART.c ****     *  Determines VBUS presence for self-powered devices. This function is
2415:Generated_Source\PSoC5/USBUART.c ****     *  available when the VBUS Monitoring option is enabled in the Advanced tab.
2416:Generated_Source\PSoC5/USBUART.c ****     *
2417:Generated_Source\PSoC5/USBUART.c ****     * \return
2418:Generated_Source\PSoC5/USBUART.c ****     *  The return value can be the following:
2419:Generated_Source\PSoC5/USBUART.c ****     *  Return Value | Description
2420:Generated_Source\PSoC5/USBUART.c ****     *  -------------|-----------------
2421:Generated_Source\PSoC5/USBUART.c ****     *  1            | VBUS is present
2422:Generated_Source\PSoC5/USBUART.c ****     *  0            | VBUS is absent
2423:Generated_Source\PSoC5/USBUART.c ****     *
2424:Generated_Source\PSoC5/USBUART.c ****     *
2425:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
2426:Generated_Source\PSoC5/USBUART.c ****     uint8 USBUART_VBusPresent(void) 
2427:Generated_Source\PSoC5/USBUART.c ****     {
2428:Generated_Source\PSoC5/USBUART.c ****         return ((0u != (USBUART_VBUS_STATUS_REG & USBUART_VBUS_VALID)) ? (uint8) 1u : (uint8) 0u);
2429:Generated_Source\PSoC5/USBUART.c ****     }
2430:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_VBUS_MONITORING_ENABLE) */
2431:Generated_Source\PSoC5/USBUART.c **** 
2432:Generated_Source\PSoC5/USBUART.c **** 
2433:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2434:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_RWUEnabled
2435:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2436:Generated_Source\PSoC5/USBUART.c **** *
2437:Generated_Source\PSoC5/USBUART.c **** *  This function returns the current remote wakeup status.
2438:Generated_Source\PSoC5/USBUART.c **** *  If the device supports remote wakeup, the application should use this
2439:Generated_Source\PSoC5/USBUART.c **** *  function to determine if remote wakeup was enabled by the host. When the
2440:Generated_Source\PSoC5/USBUART.c **** *  device is suspended and it determines the conditions to initiate a remote
2441:Generated_Source\PSoC5/USBUART.c **** *  wakeup are met, the application should use the USBFS_Force() function to
2442:Generated_Source\PSoC5/USBUART.c **** *  force the appropriate J and K states onto the USB bus, signaling a remote
2443:Generated_Source\PSoC5/USBUART.c **** *  wakeup.
2444:Generated_Source\PSoC5/USBUART.c **** *
2445:Generated_Source\PSoC5/USBUART.c **** *
2446:Generated_Source\PSoC5/USBUART.c **** * \return
2447:Generated_Source\PSoC5/USBUART.c **** *  Returns non-zero value if remote wakeup is enabled and zero otherwise.
2448:Generated_Source\PSoC5/USBUART.c **** *
2449:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2450:Generated_Source\PSoC5/USBUART.c **** *  USBUART_deviceStatus - checked to determine remote status
2451:Generated_Source\PSoC5/USBUART.c **** *
2452:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2453:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_RWUEnabled(void) 
2454:Generated_Source\PSoC5/USBUART.c **** {
 1221              		.loc 1 2454 0
 1222              		.cfi_startproc
 1223              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 66


 1224              		@ frame_needed = 0, uses_anonymous_args = 0
 1225              		@ link register save eliminated.
 1226              	.LVL92:
2455:Generated_Source\PSoC5/USBUART.c ****     uint8 result = USBUART_FALSE;
2456:Generated_Source\PSoC5/USBUART.c **** 
2457:Generated_Source\PSoC5/USBUART.c ****     if (0u != (USBUART_deviceStatus & USBUART_DEVICE_STATUS_REMOTE_WAKEUP))
 1227              		.loc 1 2457 0
 1228 0000 044B     		ldr	r3, .L100
 1229 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1230 0004 13F0020F 		tst	r3, #2
 1231 0008 01D1     		bne	.L99
2455:Generated_Source\PSoC5/USBUART.c ****     uint8 result = USBUART_FALSE;
 1232              		.loc 1 2455 0
 1233 000a 0020     		movs	r0, #0
 1234 000c 7047     		bx	lr
 1235              	.L99:
2458:Generated_Source\PSoC5/USBUART.c ****     {
2459:Generated_Source\PSoC5/USBUART.c ****         result = USBUART_TRUE;
 1236              		.loc 1 2459 0
 1237 000e 0120     		movs	r0, #1
 1238              	.LVL93:
2460:Generated_Source\PSoC5/USBUART.c ****     }
2461:Generated_Source\PSoC5/USBUART.c **** 
2462:Generated_Source\PSoC5/USBUART.c ****     return (result);
2463:Generated_Source\PSoC5/USBUART.c **** }
 1239              		.loc 1 2463 0
 1240 0010 7047     		bx	lr
 1241              	.L101:
 1242 0012 00BF     		.align	2
 1243              	.L100:
 1244 0014 00000000 		.word	USBUART_deviceStatus
 1245              		.cfi_endproc
 1246              	.LFE18:
 1247              		.size	USBUART_RWUEnabled, .-USBUART_RWUEnabled
 1248              		.section	.text.USBUART_GetDeviceAddress,"ax",%progbits
 1249              		.align	2
 1250              		.global	USBUART_GetDeviceAddress
 1251              		.thumb
 1252              		.thumb_func
 1253              		.type	USBUART_GetDeviceAddress, %function
 1254              	USBUART_GetDeviceAddress:
 1255              	.LFB19:
2464:Generated_Source\PSoC5/USBUART.c **** 
2465:Generated_Source\PSoC5/USBUART.c **** 
2466:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2467:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetDeviceAddress
2468:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2469:Generated_Source\PSoC5/USBUART.c **** *
2470:Generated_Source\PSoC5/USBUART.c **** *  This function returns the currently assigned address for the USB device.
2471:Generated_Source\PSoC5/USBUART.c **** *
2472:Generated_Source\PSoC5/USBUART.c **** * \return
2473:Generated_Source\PSoC5/USBUART.c **** *  Returns the currently assigned address.
2474:Generated_Source\PSoC5/USBUART.c **** *  Returns 0 if the device has not yet been assigned an address.
2475:Generated_Source\PSoC5/USBUART.c **** *
2476:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2477:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetDeviceAddress(void) 
2478:Generated_Source\PSoC5/USBUART.c **** {
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 67


 1256              		.loc 1 2478 0
 1257              		.cfi_startproc
 1258              		@ args = 0, pretend = 0, frame = 0
 1259              		@ frame_needed = 0, uses_anonymous_args = 0
 1260              		@ link register save eliminated.
2479:Generated_Source\PSoC5/USBUART.c ****     return (uint8)(USBUART_CR0_REG & USBUART_CR0_DEVICE_ADDRESS_MASK);
 1261              		.loc 1 2479 0
 1262 0000 024B     		ldr	r3, .L103
 1263 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
2480:Generated_Source\PSoC5/USBUART.c **** }
 1264              		.loc 1 2480 0
 1265 0004 00F07F00 		and	r0, r0, #127
 1266 0008 7047     		bx	lr
 1267              	.L104:
 1268 000a 00BF     		.align	2
 1269              	.L103:
 1270 000c 08600040 		.word	1073766408
 1271              		.cfi_endproc
 1272              	.LFE19:
 1273              		.size	USBUART_GetDeviceAddress, .-USBUART_GetDeviceAddress
 1274              		.section	.text.USBUART_EnableSofInt,"ax",%progbits
 1275              		.align	2
 1276              		.global	USBUART_EnableSofInt
 1277              		.thumb
 1278              		.thumb_func
 1279              		.type	USBUART_EnableSofInt, %function
 1280              	USBUART_EnableSofInt:
 1281              	.LFB20:
2481:Generated_Source\PSoC5/USBUART.c **** 
2482:Generated_Source\PSoC5/USBUART.c **** 
2483:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2484:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_EnableSofInt
2485:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2486:Generated_Source\PSoC5/USBUART.c **** *
2487:Generated_Source\PSoC5/USBUART.c **** *  This function enables interrupt generation when a Start-of-Frame (SOF)
2488:Generated_Source\PSoC5/USBUART.c **** *  packet is received from the host.
2489:Generated_Source\PSoC5/USBUART.c **** *
2490:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2491:Generated_Source\PSoC5/USBUART.c **** void USBUART_EnableSofInt(void) 
2492:Generated_Source\PSoC5/USBUART.c **** {
 1282              		.loc 1 2492 0
 1283              		.cfi_startproc
 1284              		@ args = 0, pretend = 0, frame = 0
 1285              		@ frame_needed = 0, uses_anonymous_args = 0
 1286              		@ link register save eliminated.
2493:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
2494:Generated_Source\PSoC5/USBUART.c ****     /* Enable SOF interrupt interrupt source. */
2495:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG |= (uint32) USBUART_INTR_SIE_SOF_INTR;
2496:Generated_Source\PSoC5/USBUART.c **** #else
2497:Generated_Source\PSoC5/USBUART.c ****     /* Enable SOF interrupt if it is present. */
2498:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
2499:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_SOF_VECT_NUM);
 1287              		.loc 1 2499 0
 1288 0000 4FF40012 		mov	r2, #2097152
 1289 0004 014B     		ldr	r3, .L106
 1290 0006 1A60     		str	r2, [r3]
 1291 0008 7047     		bx	lr
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 68


 1292              	.L107:
 1293 000a 00BF     		.align	2
 1294              	.L106:
 1295 000c 00E100E0 		.word	-536813312
 1296              		.cfi_endproc
 1297              	.LFE20:
 1298              		.size	USBUART_EnableSofInt, .-USBUART_EnableSofInt
 1299              		.section	.text.USBUART_DisableSofInt,"ax",%progbits
 1300              		.align	2
 1301              		.global	USBUART_DisableSofInt
 1302              		.thumb
 1303              		.thumb_func
 1304              		.type	USBUART_DisableSofInt, %function
 1305              	USBUART_DisableSofInt:
 1306              	.LFB21:
2500:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
2501:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
2502:Generated_Source\PSoC5/USBUART.c **** }
2503:Generated_Source\PSoC5/USBUART.c **** 
2504:Generated_Source\PSoC5/USBUART.c **** 
2505:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2506:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_DisableSofInt
2507:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2508:Generated_Source\PSoC5/USBUART.c **** *
2509:Generated_Source\PSoC5/USBUART.c **** *  This function disables interrupt generation when a Start-of-Frame (SOF)
2510:Generated_Source\PSoC5/USBUART.c **** *  packet is received from the host.
2511:Generated_Source\PSoC5/USBUART.c **** *
2512:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2513:Generated_Source\PSoC5/USBUART.c **** void USBUART_DisableSofInt(void) 
2514:Generated_Source\PSoC5/USBUART.c **** {
 1307              		.loc 1 2514 0
 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 0
 1310              		@ frame_needed = 0, uses_anonymous_args = 0
 1311              		@ link register save eliminated.
2515:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
2516:Generated_Source\PSoC5/USBUART.c ****     /* Disable SOF interrupt interrupt source. */
2517:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG &= (uint32) ~USBUART_INTR_SIE_SOF_INTR;
2518:Generated_Source\PSoC5/USBUART.c **** #else
2519:Generated_Source\PSoC5/USBUART.c ****     /* Disable SOF interrupt if it is present. */
2520:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
2521:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_SOF_VECT_NUM);
 1312              		.loc 1 2521 0
 1313 0000 4FF40012 		mov	r2, #2097152
 1314 0004 014B     		ldr	r3, .L109
 1315 0006 1A60     		str	r2, [r3]
 1316 0008 7047     		bx	lr
 1317              	.L110:
 1318 000a 00BF     		.align	2
 1319              	.L109:
 1320 000c 80E100E0 		.word	-536813184
 1321              		.cfi_endproc
 1322              	.LFE21:
 1323              		.size	USBUART_DisableSofInt, .-USBUART_DisableSofInt
 1324              		.global	USBUART_initVar
 1325              		.bss
 1326              		.set	.LANCHOR0,. + 0
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 69


 1327              		.type	USBUART_initVar, %object
 1328              		.size	USBUART_initVar, 1
 1329              	USBUART_initVar:
 1330 0000 00       		.space	1
 1331              		.text
 1332              	.Letext0:
 1333              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1334              		.file 3 "Generated_Source\\PSoC5\\USBUART.h"
 1335              		.file 4 "Generated_Source\\PSoC5\\USBUART_pvt.h"
 1336              		.file 5 "Generated_Source\\PSoC5\\CyLib.h"
 1337              		.file 6 "Generated_Source\\PSoC5\\USBUART_Dp.h"
 1338              		.section	.debug_info,"",%progbits
 1339              	.Ldebug_info0:
 1340 0000 BF090000 		.4byte	0x9bf
 1341 0004 0400     		.2byte	0x4
 1342 0006 00000000 		.4byte	.Ldebug_abbrev0
 1343 000a 04       		.byte	0x4
 1344 000b 01       		.uleb128 0x1
 1345 000c 9A050000 		.4byte	.LASF100
 1346 0010 0C       		.byte	0xc
 1347 0011 41020000 		.4byte	.LASF101
 1348 0015 71020000 		.4byte	.LASF102
 1349 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1350 001d 00000000 		.4byte	0
 1351 0021 00000000 		.4byte	.Ldebug_line0
 1352 0025 02       		.uleb128 0x2
 1353 0026 01       		.byte	0x1
 1354 0027 06       		.byte	0x6
 1355 0028 28030000 		.4byte	.LASF0
 1356 002c 02       		.uleb128 0x2
 1357 002d 01       		.byte	0x1
 1358 002e 08       		.byte	0x8
 1359 002f 08030000 		.4byte	.LASF1
 1360 0033 02       		.uleb128 0x2
 1361 0034 02       		.byte	0x2
 1362 0035 05       		.byte	0x5
 1363 0036 93000000 		.4byte	.LASF2
 1364 003a 02       		.uleb128 0x2
 1365 003b 02       		.byte	0x2
 1366 003c 07       		.byte	0x7
 1367 003d C9030000 		.4byte	.LASF3
 1368 0041 02       		.uleb128 0x2
 1369 0042 04       		.byte	0x4
 1370 0043 05       		.byte	0x5
 1371 0044 01040000 		.4byte	.LASF4
 1372 0048 02       		.uleb128 0x2
 1373 0049 04       		.byte	0x4
 1374 004a 07       		.byte	0x7
 1375 004b 80040000 		.4byte	.LASF5
 1376 004f 02       		.uleb128 0x2
 1377 0050 08       		.byte	0x8
 1378 0051 05       		.byte	0x5
 1379 0052 0A020000 		.4byte	.LASF6
 1380 0056 02       		.uleb128 0x2
 1381 0057 08       		.byte	0x8
 1382 0058 07       		.byte	0x7
 1383 0059 4C030000 		.4byte	.LASF7
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 70


 1384 005d 03       		.uleb128 0x3
 1385 005e 04       		.byte	0x4
 1386 005f 05       		.byte	0x5
 1387 0060 696E7400 		.ascii	"int\000"
 1388 0064 02       		.uleb128 0x2
 1389 0065 04       		.byte	0x4
 1390 0066 07       		.byte	0x7
 1391 0067 87030000 		.4byte	.LASF8
 1392 006b 04       		.uleb128 0x4
 1393 006c 42040000 		.4byte	.LASF9
 1394 0070 02       		.byte	0x2
 1395 0071 9201     		.2byte	0x192
 1396 0073 2C000000 		.4byte	0x2c
 1397 0077 04       		.uleb128 0x4
 1398 0078 4D010000 		.4byte	.LASF10
 1399 007c 02       		.byte	0x2
 1400 007d 9301     		.2byte	0x193
 1401 007f 3A000000 		.4byte	0x3a
 1402 0083 04       		.uleb128 0x4
 1403 0084 74040000 		.4byte	.LASF11
 1404 0088 02       		.byte	0x2
 1405 0089 9401     		.2byte	0x194
 1406 008b 48000000 		.4byte	0x48
 1407 008f 02       		.uleb128 0x2
 1408 0090 04       		.byte	0x4
 1409 0091 04       		.byte	0x4
 1410 0092 C1010000 		.4byte	.LASF12
 1411 0096 02       		.uleb128 0x2
 1412 0097 08       		.byte	0x8
 1413 0098 04       		.byte	0x4
 1414 0099 92040000 		.4byte	.LASF13
 1415 009d 02       		.uleb128 0x2
 1416 009e 01       		.byte	0x1
 1417 009f 08       		.byte	0x8
 1418 00a0 FC030000 		.4byte	.LASF14
 1419 00a4 04       		.uleb128 0x4
 1420 00a5 7B040000 		.4byte	.LASF15
 1421 00a9 02       		.byte	0x2
 1422 00aa 3C02     		.2byte	0x23c
 1423 00ac B0000000 		.4byte	0xb0
 1424 00b0 05       		.uleb128 0x5
 1425 00b1 6B000000 		.4byte	0x6b
 1426 00b5 04       		.uleb128 0x4
 1427 00b6 AC030000 		.4byte	.LASF16
 1428 00ba 02       		.byte	0x2
 1429 00bb 3E02     		.2byte	0x23e
 1430 00bd C1000000 		.4byte	0xc1
 1431 00c1 05       		.uleb128 0x5
 1432 00c2 83000000 		.4byte	0x83
 1433 00c6 02       		.uleb128 0x2
 1434 00c7 08       		.byte	0x8
 1435 00c8 04       		.byte	0x4
 1436 00c9 D6000000 		.4byte	.LASF17
 1437 00cd 02       		.uleb128 0x2
 1438 00ce 04       		.byte	0x4
 1439 00cf 07       		.byte	0x7
 1440 00d0 9D000000 		.4byte	.LASF18
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 71


 1441 00d4 06       		.uleb128 0x6
 1442 00d5 0C       		.byte	0xc
 1443 00d6 03       		.byte	0x3
 1444 00d7 91       		.byte	0x91
 1445 00d8 49010000 		.4byte	0x149
 1446 00dc 07       		.uleb128 0x7
 1447 00dd E4030000 		.4byte	.LASF19
 1448 00e1 03       		.byte	0x3
 1449 00e2 93       		.byte	0x93
 1450 00e3 6B000000 		.4byte	0x6b
 1451 00e7 00       		.byte	0
 1452 00e8 07       		.uleb128 0x7
 1453 00e9 CE040000 		.4byte	.LASF20
 1454 00ed 03       		.byte	0x3
 1455 00ee 94       		.byte	0x94
 1456 00ef 6B000000 		.4byte	0x6b
 1457 00f3 01       		.byte	0x1
 1458 00f4 07       		.uleb128 0x7
 1459 00f5 56040000 		.4byte	.LASF21
 1460 00f9 03       		.byte	0x3
 1461 00fa 95       		.byte	0x95
 1462 00fb 6B000000 		.4byte	0x6b
 1463 00ff 02       		.byte	0x2
 1464 0100 07       		.uleb128 0x7
 1465 0101 00000000 		.4byte	.LASF22
 1466 0105 03       		.byte	0x3
 1467 0106 96       		.byte	0x96
 1468 0107 6B000000 		.4byte	0x6b
 1469 010b 03       		.byte	0x3
 1470 010c 07       		.uleb128 0x7
 1471 010d 36040000 		.4byte	.LASF23
 1472 0111 03       		.byte	0x3
 1473 0112 97       		.byte	0x97
 1474 0113 6B000000 		.4byte	0x6b
 1475 0117 04       		.byte	0x4
 1476 0118 07       		.uleb128 0x7
 1477 0119 BD000000 		.4byte	.LASF24
 1478 011d 03       		.byte	0x3
 1479 011e 98       		.byte	0x98
 1480 011f 6B000000 		.4byte	0x6b
 1481 0123 05       		.byte	0x5
 1482 0124 07       		.uleb128 0x7
 1483 0125 F3020000 		.4byte	.LASF25
 1484 0129 03       		.byte	0x3
 1485 012a 99       		.byte	0x99
 1486 012b 77000000 		.4byte	0x77
 1487 012f 06       		.byte	0x6
 1488 0130 07       		.uleb128 0x7
 1489 0131 F3040000 		.4byte	.LASF26
 1490 0135 03       		.byte	0x3
 1491 0136 9A       		.byte	0x9a
 1492 0137 77000000 		.4byte	0x77
 1493 013b 08       		.byte	0x8
 1494 013c 07       		.uleb128 0x7
 1495 013d 31060000 		.4byte	.LASF27
 1496 0141 03       		.byte	0x3
 1497 0142 9B       		.byte	0x9b
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 72


 1498 0143 6B000000 		.4byte	0x6b
 1499 0147 0A       		.byte	0xa
 1500 0148 00       		.byte	0
 1501 0149 08       		.uleb128 0x8
 1502 014a 14050000 		.4byte	.LASF28
 1503 014e 03       		.byte	0x3
 1504 014f 9C       		.byte	0x9c
 1505 0150 D4000000 		.4byte	0xd4
 1506 0154 06       		.uleb128 0x6
 1507 0155 10       		.byte	0x10
 1508 0156 03       		.byte	0x3
 1509 0157 D8       		.byte	0xd8
 1510 0158 8D010000 		.4byte	0x18d
 1511 015c 07       		.uleb128 0x7
 1512 015d 3B040000 		.4byte	.LASF29
 1513 0161 03       		.byte	0x3
 1514 0162 DA       		.byte	0xda
 1515 0163 6B000000 		.4byte	0x6b
 1516 0167 00       		.byte	0
 1517 0168 07       		.uleb128 0x7
 1518 0169 4F040000 		.4byte	.LASF30
 1519 016d 03       		.byte	0x3
 1520 016e DB       		.byte	0xdb
 1521 016f 6B000000 		.4byte	0x6b
 1522 0173 01       		.byte	0x1
 1523 0174 07       		.uleb128 0x7
 1524 0175 35020000 		.4byte	.LASF31
 1525 0179 03       		.byte	0x3
 1526 017a DC       		.byte	0xdc
 1527 017b 6B000000 		.4byte	0x6b
 1528 017f 02       		.byte	0x2
 1529 0180 09       		.uleb128 0x9
 1530 0181 67617000 		.ascii	"gap\000"
 1531 0185 03       		.byte	0x3
 1532 0186 DD       		.byte	0xdd
 1533 0187 8D010000 		.4byte	0x18d
 1534 018b 03       		.byte	0x3
 1535 018c 00       		.byte	0
 1536 018d 0A       		.uleb128 0xa
 1537 018e 6B000000 		.4byte	0x6b
 1538 0192 9D010000 		.4byte	0x19d
 1539 0196 0B       		.uleb128 0xb
 1540 0197 CD000000 		.4byte	0xcd
 1541 019b 0C       		.byte	0xc
 1542 019c 00       		.byte	0
 1543 019d 08       		.uleb128 0x8
 1544 019e 70010000 		.4byte	.LASF32
 1545 01a2 03       		.byte	0x3
 1546 01a3 DE       		.byte	0xde
 1547 01a4 54010000 		.4byte	0x154
 1548 01a8 06       		.uleb128 0x6
 1549 01a9 10       		.byte	0x10
 1550 01aa 03       		.byte	0x3
 1551 01ab EA       		.byte	0xea
 1552 01ac 29020000 		.4byte	0x229
 1553 01b0 07       		.uleb128 0x7
 1554 01b1 3B020000 		.4byte	.LASF33
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 73


 1555 01b5 03       		.byte	0x3
 1556 01b6 EC       		.byte	0xec
 1557 01b7 6B000000 		.4byte	0x6b
 1558 01bb 00       		.byte	0
 1559 01bc 07       		.uleb128 0x7
 1560 01bd 8B000000 		.4byte	.LASF34
 1561 01c1 03       		.byte	0x3
 1562 01c2 ED       		.byte	0xed
 1563 01c3 6B000000 		.4byte	0x6b
 1564 01c7 01       		.byte	0x1
 1565 01c8 07       		.uleb128 0x7
 1566 01c9 16030000 		.4byte	.LASF35
 1567 01cd 03       		.byte	0x3
 1568 01ce EE       		.byte	0xee
 1569 01cf 6B000000 		.4byte	0x6b
 1570 01d3 02       		.byte	0x2
 1571 01d4 07       		.uleb128 0x7
 1572 01d5 28060000 		.4byte	.LASF36
 1573 01d9 03       		.byte	0x3
 1574 01da EF       		.byte	0xef
 1575 01db 6B000000 		.4byte	0x6b
 1576 01df 03       		.byte	0x3
 1577 01e0 07       		.uleb128 0x7
 1578 01e1 99030000 		.4byte	.LASF37
 1579 01e5 03       		.byte	0x3
 1580 01e6 F0       		.byte	0xf0
 1581 01e7 6B000000 		.4byte	0x6b
 1582 01eb 04       		.byte	0x4
 1583 01ec 07       		.uleb128 0x7
 1584 01ed 92050000 		.4byte	.LASF38
 1585 01f1 03       		.byte	0x3
 1586 01f2 F1       		.byte	0xf1
 1587 01f3 6B000000 		.4byte	0x6b
 1588 01f7 05       		.byte	0x5
 1589 01f8 07       		.uleb128 0x7
 1590 01f9 54010000 		.4byte	.LASF39
 1591 01fd 03       		.byte	0x3
 1592 01fe F2       		.byte	0xf2
 1593 01ff 6B000000 		.4byte	0x6b
 1594 0203 06       		.byte	0x6
 1595 0204 07       		.uleb128 0x7
 1596 0205 DC030000 		.4byte	.LASF40
 1597 0209 03       		.byte	0x3
 1598 020a F3       		.byte	0xf3
 1599 020b 6B000000 		.4byte	0x6b
 1600 020f 07       		.byte	0x7
 1601 0210 07       		.uleb128 0x7
 1602 0211 94030000 		.4byte	.LASF41
 1603 0215 03       		.byte	0x3
 1604 0216 F4       		.byte	0xf4
 1605 0217 6B000000 		.4byte	0x6b
 1606 021b 08       		.byte	0x8
 1607 021c 09       		.uleb128 0x9
 1608 021d 67617000 		.ascii	"gap\000"
 1609 0221 03       		.byte	0x3
 1610 0222 F5       		.byte	0xf5
 1611 0223 29020000 		.4byte	0x229
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 74


 1612 0227 09       		.byte	0x9
 1613 0228 00       		.byte	0
 1614 0229 0A       		.uleb128 0xa
 1615 022a 6B000000 		.4byte	0x6b
 1616 022e 39020000 		.4byte	0x239
 1617 0232 0B       		.uleb128 0xb
 1618 0233 CD000000 		.4byte	0xcd
 1619 0237 06       		.byte	0x6
 1620 0238 00       		.byte	0
 1621 0239 08       		.uleb128 0x8
 1622 023a 71030000 		.4byte	.LASF42
 1623 023e 03       		.byte	0x3
 1624 023f F6       		.byte	0xf6
 1625 0240 A8010000 		.4byte	0x1a8
 1626 0244 0C       		.uleb128 0xc
 1627 0245 90       		.byte	0x90
 1628 0246 03       		.byte	0x3
 1629 0247 1201     		.2byte	0x112
 1630 0249 5B020000 		.4byte	0x25b
 1631 024d 0D       		.uleb128 0xd
 1632 024e 97010000 		.4byte	.LASF43
 1633 0252 03       		.byte	0x3
 1634 0253 1401     		.2byte	0x114
 1635 0255 5B020000 		.4byte	0x25b
 1636 0259 00       		.byte	0
 1637 025a 00       		.byte	0
 1638 025b 0A       		.uleb128 0xa
 1639 025c 9D010000 		.4byte	0x19d
 1640 0260 6B020000 		.4byte	0x26b
 1641 0264 0B       		.uleb128 0xb
 1642 0265 CD000000 		.4byte	0xcd
 1643 0269 08       		.byte	0x8
 1644 026a 00       		.byte	0
 1645 026b 04       		.uleb128 0x4
 1646 026c FA000000 		.4byte	.LASF44
 1647 0270 03       		.byte	0x3
 1648 0271 1501     		.2byte	0x115
 1649 0273 44020000 		.4byte	0x244
 1650 0277 0C       		.uleb128 0xc
 1651 0278 90       		.byte	0x90
 1652 0279 03       		.byte	0x3
 1653 027a 1801     		.2byte	0x118
 1654 027c 8E020000 		.4byte	0x28e
 1655 0280 0D       		.uleb128 0xd
 1656 0281 C4000000 		.4byte	.LASF45
 1657 0285 03       		.byte	0x3
 1658 0286 1A01     		.2byte	0x11a
 1659 0288 8E020000 		.4byte	0x28e
 1660 028c 00       		.byte	0
 1661 028d 00       		.byte	0
 1662 028e 0A       		.uleb128 0xa
 1663 028f 39020000 		.4byte	0x239
 1664 0293 9E020000 		.4byte	0x29e
 1665 0297 0B       		.uleb128 0xb
 1666 0298 CD000000 		.4byte	0xcd
 1667 029c 08       		.byte	0x8
 1668 029d 00       		.byte	0
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 75


 1669 029e 04       		.uleb128 0x4
 1670 029f A6000000 		.4byte	.LASF46
 1671 02a3 03       		.byte	0x3
 1672 02a4 1B01     		.2byte	0x11b
 1673 02a6 77020000 		.4byte	0x277
 1674 02aa 0E       		.uleb128 0xe
 1675 02ab 1B030000 		.4byte	.LASF47
 1676 02af 01       		.byte	0x1
 1677 02b0 D3       		.byte	0xd3
 1678 02b1 00000000 		.4byte	.LFB1
 1679 02b5 40010000 		.4byte	.LFE1-.LFB1
 1680 02b9 01       		.uleb128 0x1
 1681 02ba 9C       		.byte	0x9c
 1682 02bb 66040000 		.4byte	0x466
 1683 02bf 0F       		.uleb128 0xf
 1684 02c0 42060000 		.4byte	.LASF51
 1685 02c4 01       		.byte	0x1
 1686 02c5 FA       		.byte	0xfa
 1687 02c6 6B000000 		.4byte	0x6b
 1688 02ca 00000000 		.4byte	.LLST0
 1689 02ce 10       		.uleb128 0x10
 1690 02cf 06000000 		.4byte	.LVL0
 1691 02d3 75090000 		.4byte	0x975
 1692 02d7 11       		.uleb128 0x11
 1693 02d8 3C000000 		.4byte	.LVL2
 1694 02dc 80090000 		.4byte	0x980
 1695 02e0 EA020000 		.4byte	0x2ea
 1696 02e4 12       		.uleb128 0x12
 1697 02e5 01       		.uleb128 0x1
 1698 02e6 50       		.byte	0x50
 1699 02e7 01       		.uleb128 0x1
 1700 02e8 30       		.byte	0x30
 1701 02e9 00       		.byte	0
 1702 02ea 11       		.uleb128 0x11
 1703 02eb 5C000000 		.4byte	.LVL3
 1704 02ef 80090000 		.4byte	0x980
 1705 02f3 FE020000 		.4byte	0x2fe
 1706 02f7 12       		.uleb128 0x12
 1707 02f8 01       		.uleb128 0x1
 1708 02f9 50       		.byte	0x50
 1709 02fa 02       		.uleb128 0x2
 1710 02fb 77       		.byte	0x77
 1711 02fc 00       		.sleb128 0
 1712 02fd 00       		.byte	0
 1713 02fe 11       		.uleb128 0x11
 1714 02ff 62000000 		.4byte	.LVL4
 1715 0303 80090000 		.4byte	0x980
 1716 0307 12030000 		.4byte	0x312
 1717 030b 12       		.uleb128 0x12
 1718 030c 01       		.uleb128 0x1
 1719 030d 50       		.byte	0x50
 1720 030e 02       		.uleb128 0x2
 1721 030f 08       		.byte	0x8
 1722 0310 28       		.byte	0x28
 1723 0311 00       		.byte	0
 1724 0312 11       		.uleb128 0x11
 1725 0313 80000000 		.4byte	.LVL5
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 76


 1726 0317 80090000 		.4byte	0x980
 1727 031b 26030000 		.4byte	0x326
 1728 031f 12       		.uleb128 0x12
 1729 0320 01       		.uleb128 0x1
 1730 0321 50       		.byte	0x50
 1731 0322 02       		.uleb128 0x2
 1732 0323 75       		.byte	0x75
 1733 0324 00       		.sleb128 0
 1734 0325 00       		.byte	0
 1735 0326 11       		.uleb128 0x11
 1736 0327 98000000 		.4byte	.LVL6
 1737 032b 8B090000 		.4byte	0x98b
 1738 032f 3A030000 		.4byte	0x33a
 1739 0333 12       		.uleb128 0x12
 1740 0334 01       		.uleb128 0x1
 1741 0335 50       		.byte	0x50
 1742 0336 02       		.uleb128 0x2
 1743 0337 76       		.byte	0x76
 1744 0338 00       		.sleb128 0
 1745 0339 00       		.byte	0
 1746 033a 11       		.uleb128 0x11
 1747 033b A0000000 		.4byte	.LVL7
 1748 033f 96090000 		.4byte	0x996
 1749 0343 52030000 		.4byte	0x352
 1750 0347 12       		.uleb128 0x12
 1751 0348 01       		.uleb128 0x1
 1752 0349 50       		.byte	0x50
 1753 034a 01       		.uleb128 0x1
 1754 034b 47       		.byte	0x47
 1755 034c 12       		.uleb128 0x12
 1756 034d 01       		.uleb128 0x1
 1757 034e 51       		.byte	0x51
 1758 034f 01       		.uleb128 0x1
 1759 0350 37       		.byte	0x37
 1760 0351 00       		.byte	0
 1761 0352 11       		.uleb128 0x11
 1762 0353 A8000000 		.4byte	.LVL8
 1763 0357 A1090000 		.4byte	0x9a1
 1764 035b 65030000 		.4byte	0x365
 1765 035f 12       		.uleb128 0x12
 1766 0360 01       		.uleb128 0x1
 1767 0361 50       		.byte	0x50
 1768 0362 01       		.uleb128 0x1
 1769 0363 47       		.byte	0x47
 1770 0364 00       		.byte	0
 1771 0365 11       		.uleb128 0x11
 1772 0366 B0000000 		.4byte	.LVL9
 1773 036a 96090000 		.4byte	0x996
 1774 036e 7D030000 		.4byte	0x37d
 1775 0372 12       		.uleb128 0x12
 1776 0373 01       		.uleb128 0x1
 1777 0374 50       		.byte	0x50
 1778 0375 01       		.uleb128 0x1
 1779 0376 48       		.byte	0x48
 1780 0377 12       		.uleb128 0x12
 1781 0378 01       		.uleb128 0x1
 1782 0379 51       		.byte	0x51
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 77


 1783 037a 01       		.uleb128 0x1
 1784 037b 37       		.byte	0x37
 1785 037c 00       		.byte	0
 1786 037d 11       		.uleb128 0x11
 1787 037e B8000000 		.4byte	.LVL10
 1788 0382 A1090000 		.4byte	0x9a1
 1789 0386 90030000 		.4byte	0x390
 1790 038a 12       		.uleb128 0x12
 1791 038b 01       		.uleb128 0x1
 1792 038c 50       		.byte	0x50
 1793 038d 01       		.uleb128 0x1
 1794 038e 48       		.byte	0x48
 1795 038f 00       		.byte	0
 1796 0390 11       		.uleb128 0x11
 1797 0391 C0000000 		.4byte	.LVL11
 1798 0395 96090000 		.4byte	0x996
 1799 0399 A8030000 		.4byte	0x3a8
 1800 039d 12       		.uleb128 0x12
 1801 039e 01       		.uleb128 0x1
 1802 039f 50       		.byte	0x50
 1803 03a0 01       		.uleb128 0x1
 1804 03a1 45       		.byte	0x45
 1805 03a2 12       		.uleb128 0x12
 1806 03a3 01       		.uleb128 0x1
 1807 03a4 51       		.byte	0x51
 1808 03a5 01       		.uleb128 0x1
 1809 03a6 37       		.byte	0x37
 1810 03a7 00       		.byte	0
 1811 03a8 11       		.uleb128 0x11
 1812 03a9 C8000000 		.4byte	.LVL12
 1813 03ad A1090000 		.4byte	0x9a1
 1814 03b1 BB030000 		.4byte	0x3bb
 1815 03b5 12       		.uleb128 0x12
 1816 03b6 01       		.uleb128 0x1
 1817 03b7 50       		.byte	0x50
 1818 03b8 01       		.uleb128 0x1
 1819 03b9 45       		.byte	0x45
 1820 03ba 00       		.byte	0
 1821 03bb 11       		.uleb128 0x11
 1822 03bc D0000000 		.4byte	.LVL13
 1823 03c0 96090000 		.4byte	0x996
 1824 03c4 D4030000 		.4byte	0x3d4
 1825 03c8 12       		.uleb128 0x12
 1826 03c9 01       		.uleb128 0x1
 1827 03ca 50       		.byte	0x50
 1828 03cb 02       		.uleb128 0x2
 1829 03cc 75       		.byte	0x75
 1830 03cd 00       		.sleb128 0
 1831 03ce 12       		.uleb128 0x12
 1832 03cf 01       		.uleb128 0x1
 1833 03d0 51       		.byte	0x51
 1834 03d1 01       		.uleb128 0x1
 1835 03d2 37       		.byte	0x37
 1836 03d3 00       		.byte	0
 1837 03d4 11       		.uleb128 0x11
 1838 03d5 D8000000 		.4byte	.LVL14
 1839 03d9 A1090000 		.4byte	0x9a1
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 78


 1840 03dd E8030000 		.4byte	0x3e8
 1841 03e1 12       		.uleb128 0x12
 1842 03e2 01       		.uleb128 0x1
 1843 03e3 50       		.byte	0x50
 1844 03e4 02       		.uleb128 0x2
 1845 03e5 75       		.byte	0x75
 1846 03e6 00       		.sleb128 0
 1847 03e7 00       		.byte	0
 1848 03e8 11       		.uleb128 0x11
 1849 03e9 E0000000 		.4byte	.LVL15
 1850 03ed 96090000 		.4byte	0x996
 1851 03f1 00040000 		.4byte	0x400
 1852 03f5 12       		.uleb128 0x12
 1853 03f6 01       		.uleb128 0x1
 1854 03f7 50       		.byte	0x50
 1855 03f8 01       		.uleb128 0x1
 1856 03f9 33       		.byte	0x33
 1857 03fa 12       		.uleb128 0x12
 1858 03fb 01       		.uleb128 0x1
 1859 03fc 51       		.byte	0x51
 1860 03fd 01       		.uleb128 0x1
 1861 03fe 37       		.byte	0x37
 1862 03ff 00       		.byte	0
 1863 0400 11       		.uleb128 0x11
 1864 0401 E8000000 		.4byte	.LVL16
 1865 0405 A1090000 		.4byte	0x9a1
 1866 0409 13040000 		.4byte	0x413
 1867 040d 12       		.uleb128 0x12
 1868 040e 01       		.uleb128 0x1
 1869 040f 50       		.byte	0x50
 1870 0410 01       		.uleb128 0x1
 1871 0411 33       		.byte	0x33
 1872 0412 00       		.byte	0
 1873 0413 11       		.uleb128 0x11
 1874 0414 F0000000 		.4byte	.LVL17
 1875 0418 96090000 		.4byte	0x996
 1876 041c 2B040000 		.4byte	0x42b
 1877 0420 12       		.uleb128 0x12
 1878 0421 01       		.uleb128 0x1
 1879 0422 50       		.byte	0x50
 1880 0423 01       		.uleb128 0x1
 1881 0424 34       		.byte	0x34
 1882 0425 12       		.uleb128 0x12
 1883 0426 01       		.uleb128 0x1
 1884 0427 51       		.byte	0x51
 1885 0428 01       		.uleb128 0x1
 1886 0429 37       		.byte	0x37
 1887 042a 00       		.byte	0
 1888 042b 11       		.uleb128 0x11
 1889 042c F8000000 		.4byte	.LVL18
 1890 0430 A1090000 		.4byte	0x9a1
 1891 0434 3E040000 		.4byte	0x43e
 1892 0438 12       		.uleb128 0x12
 1893 0439 01       		.uleb128 0x1
 1894 043a 50       		.byte	0x50
 1895 043b 01       		.uleb128 0x1
 1896 043c 34       		.byte	0x34
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 79


 1897 043d 00       		.byte	0
 1898 043e 11       		.uleb128 0x11
 1899 043f 00010000 		.4byte	.LVL19
 1900 0443 96090000 		.4byte	0x996
 1901 0447 56040000 		.4byte	0x456
 1902 044b 12       		.uleb128 0x12
 1903 044c 01       		.uleb128 0x1
 1904 044d 50       		.byte	0x50
 1905 044e 01       		.uleb128 0x1
 1906 044f 3C       		.byte	0x3c
 1907 0450 12       		.uleb128 0x12
 1908 0451 01       		.uleb128 0x1
 1909 0452 51       		.byte	0x51
 1910 0453 01       		.uleb128 0x1
 1911 0454 37       		.byte	0x37
 1912 0455 00       		.byte	0
 1913 0456 13       		.uleb128 0x13
 1914 0457 08010000 		.4byte	.LVL20
 1915 045b A1090000 		.4byte	0x9a1
 1916 045f 12       		.uleb128 0x12
 1917 0460 01       		.uleb128 0x1
 1918 0461 50       		.byte	0x50
 1919 0462 01       		.uleb128 0x1
 1920 0463 3C       		.byte	0x3c
 1921 0464 00       		.byte	0
 1922 0465 00       		.byte	0
 1923 0466 14       		.uleb128 0x14
 1924 0467 FE040000 		.4byte	.LASF48
 1925 046b 01       		.byte	0x1
 1926 046c CC01     		.2byte	0x1cc
 1927 046e 00000000 		.4byte	.LFB2
 1928 0472 D0000000 		.4byte	.LFE2-.LFB2
 1929 0476 01       		.uleb128 0x1
 1930 0477 9C       		.byte	0x9c
 1931 0478 BA040000 		.4byte	0x4ba
 1932 047c 15       		.uleb128 0x15
 1933 047d BA010000 		.4byte	.LASF49
 1934 0481 01       		.byte	0x1
 1935 0482 CC01     		.2byte	0x1cc
 1936 0484 6B000000 		.4byte	0x6b
 1937 0488 13000000 		.4byte	.LLST1
 1938 048c 15       		.uleb128 0x15
 1939 048d F5000000 		.4byte	.LASF50
 1940 0491 01       		.byte	0x1
 1941 0492 CC01     		.2byte	0x1cc
 1942 0494 6B000000 		.4byte	0x6b
 1943 0498 34000000 		.4byte	.LLST2
 1944 049c 16       		.uleb128 0x16
 1945 049d 6900     		.ascii	"i\000"
 1946 049f 01       		.byte	0x1
 1947 04a0 D301     		.2byte	0x1d3
 1948 04a2 6B000000 		.4byte	0x6b
 1949 04a6 55000000 		.4byte	.LLST3
 1950 04aa 13       		.uleb128 0x13
 1951 04ab 92000000 		.4byte	.LVL29
 1952 04af AC090000 		.4byte	0x9ac
 1953 04b3 12       		.uleb128 0x12
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 80


 1954 04b4 01       		.uleb128 0x1
 1955 04b5 50       		.byte	0x50
 1956 04b6 01       		.uleb128 0x1
 1957 04b7 31       		.byte	0x31
 1958 04b8 00       		.byte	0
 1959 04b9 00       		.byte	0
 1960 04ba 0E       		.uleb128 0xe
 1961 04bb 26010000 		.4byte	.LASF52
 1962 04bf 01       		.byte	0x1
 1963 04c0 BA       		.byte	0xba
 1964 04c1 00000000 		.4byte	.LFB0
 1965 04c5 24000000 		.4byte	.LFE0-.LFB0
 1966 04c9 01       		.uleb128 0x1
 1967 04ca 9C       		.byte	0x9c
 1968 04cb 0D050000 		.4byte	0x50d
 1969 04cf 17       		.uleb128 0x17
 1970 04d0 BA010000 		.4byte	.LASF49
 1971 04d4 01       		.byte	0x1
 1972 04d5 BA       		.byte	0xba
 1973 04d6 6B000000 		.4byte	0x6b
 1974 04da 7F000000 		.4byte	.LLST4
 1975 04de 17       		.uleb128 0x17
 1976 04df F5000000 		.4byte	.LASF50
 1977 04e3 01       		.byte	0x1
 1978 04e4 BA       		.byte	0xba
 1979 04e5 6B000000 		.4byte	0x6b
 1980 04e9 A0000000 		.4byte	.LLST5
 1981 04ed 10       		.uleb128 0x10
 1982 04ee 10000000 		.4byte	.LVL31
 1983 04f2 AA020000 		.4byte	0x2aa
 1984 04f6 13       		.uleb128 0x13
 1985 04f7 1E000000 		.4byte	.LVL32
 1986 04fb 66040000 		.4byte	0x466
 1987 04ff 12       		.uleb128 0x12
 1988 0500 01       		.uleb128 0x1
 1989 0501 50       		.byte	0x50
 1990 0502 02       		.uleb128 0x2
 1991 0503 74       		.byte	0x74
 1992 0504 00       		.sleb128 0
 1993 0505 12       		.uleb128 0x12
 1994 0506 01       		.uleb128 0x1
 1995 0507 51       		.byte	0x51
 1996 0508 02       		.uleb128 0x2
 1997 0509 75       		.byte	0x75
 1998 050a 00       		.sleb128 0
 1999 050b 00       		.byte	0
 2000 050c 00       		.byte	0
 2001 050d 14       		.uleb128 0x14
 2002 050e 34030000 		.4byte	.LASF53
 2003 0512 01       		.byte	0x1
 2004 0513 9F02     		.2byte	0x29f
 2005 0515 00000000 		.4byte	.LFB3
 2006 0519 64000000 		.4byte	.LFE3-.LFB3
 2007 051d 01       		.uleb128 0x1
 2008 051e 9C       		.byte	0x9c
 2009 051f 32050000 		.4byte	0x532
 2010 0523 16       		.uleb128 0x16
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 81


 2011 0524 6900     		.ascii	"i\000"
 2012 0526 01       		.byte	0x1
 2013 0527 A502     		.2byte	0x2a5
 2014 0529 6B000000 		.4byte	0x6b
 2015 052d C1000000 		.4byte	.LLST6
 2016 0531 00       		.byte	0
 2017 0532 14       		.uleb128 0x14
 2018 0533 73060000 		.4byte	.LASF54
 2019 0537 01       		.byte	0x1
 2020 0538 D902     		.2byte	0x2d9
 2021 053a 00000000 		.4byte	.LFB4
 2022 053e B8000000 		.4byte	.LFE4-.LFB4
 2023 0542 01       		.uleb128 0x1
 2024 0543 9C       		.byte	0x9c
 2025 0544 74050000 		.4byte	0x574
 2026 0548 18       		.uleb128 0x18
 2027 0549 42060000 		.4byte	.LASF51
 2028 054d 01       		.byte	0x1
 2029 054e DB02     		.2byte	0x2db
 2030 0550 6B000000 		.4byte	0x6b
 2031 0554 EB000000 		.4byte	.LLST7
 2032 0558 10       		.uleb128 0x10
 2033 0559 06000000 		.4byte	.LVL38
 2034 055d 75090000 		.4byte	0x975
 2035 0561 10       		.uleb128 0x10
 2036 0562 48000000 		.4byte	.LVL39
 2037 0566 8B090000 		.4byte	0x98b
 2038 056a 10       		.uleb128 0x10
 2039 056b 6C000000 		.4byte	.LVL40
 2040 056f B7090000 		.4byte	0x9b7
 2041 0573 00       		.byte	0
 2042 0574 19       		.uleb128 0x19
 2043 0575 3A050000 		.4byte	.LASF56
 2044 0579 01       		.byte	0x1
 2045 057a 5103     		.2byte	0x351
 2046 057c 6B000000 		.4byte	0x6b
 2047 0580 00000000 		.4byte	.LFB5
 2048 0584 20000000 		.4byte	.LFE5-.LFB5
 2049 0588 01       		.uleb128 0x1
 2050 0589 9C       		.byte	0x9c
 2051 058a 9F050000 		.4byte	0x59f
 2052 058e 18       		.uleb128 0x18
 2053 058f 48040000 		.4byte	.LASF55
 2054 0593 01       		.byte	0x1
 2055 0594 5303     		.2byte	0x353
 2056 0596 6B000000 		.4byte	0x6b
 2057 059a FE000000 		.4byte	.LLST8
 2058 059e 00       		.byte	0
 2059 059f 1A       		.uleb128 0x1a
 2060 05a0 C7010000 		.4byte	.LASF77
 2061 05a4 01       		.byte	0x1
 2062 05a5 6803     		.2byte	0x368
 2063 05a7 6B000000 		.4byte	0x6b
 2064 05ab 00000000 		.4byte	.LFB6
 2065 05af 0C000000 		.4byte	.LFE6-.LFB6
 2066 05b3 01       		.uleb128 0x1
 2067 05b4 9C       		.byte	0x9c
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 82


 2068 05b5 19       		.uleb128 0x19
 2069 05b6 25000000 		.4byte	.LASF57
 2070 05ba 01       		.byte	0x1
 2071 05bb 8203     		.2byte	0x382
 2072 05bd 6B000000 		.4byte	0x6b
 2073 05c1 00000000 		.4byte	.LFB7
 2074 05c5 20000000 		.4byte	.LFE7-.LFB7
 2075 05c9 01       		.uleb128 0x1
 2076 05ca 9C       		.byte	0x9c
 2077 05cb E0050000 		.4byte	0x5e0
 2078 05cf 16       		.uleb128 0x16
 2079 05d0 72657300 		.ascii	"res\000"
 2080 05d4 01       		.byte	0x1
 2081 05d5 8403     		.2byte	0x384
 2082 05d7 6B000000 		.4byte	0x6b
 2083 05db 11010000 		.4byte	.LLST9
 2084 05df 00       		.byte	0
 2085 05e0 19       		.uleb128 0x19
 2086 05e1 B2040000 		.4byte	.LASF58
 2087 05e5 01       		.byte	0x1
 2088 05e6 9F03     		.2byte	0x39f
 2089 05e8 6B000000 		.4byte	0x6b
 2090 05ec 00000000 		.4byte	.LFB8
 2091 05f0 0C000000 		.4byte	.LFE8-.LFB8
 2092 05f4 01       		.uleb128 0x1
 2093 05f5 9C       		.byte	0x9c
 2094 05f6 0B060000 		.4byte	0x60b
 2095 05fa 15       		.uleb128 0x15
 2096 05fb 09000000 		.4byte	.LASF59
 2097 05ff 01       		.byte	0x1
 2098 0600 9F03     		.2byte	0x39f
 2099 0602 6B000000 		.4byte	0x6b
 2100 0606 47010000 		.4byte	.LLST10
 2101 060a 00       		.byte	0
 2102 060b 19       		.uleb128 0x19
 2103 060c 0A040000 		.4byte	.LASF60
 2104 0610 01       		.byte	0x1
 2105 0611 BF03     		.2byte	0x3bf
 2106 0613 6B000000 		.4byte	0x6b
 2107 0617 00000000 		.4byte	.LFB9
 2108 061b 14000000 		.4byte	.LFE9-.LFB9
 2109 061f 01       		.uleb128 0x1
 2110 0620 9C       		.byte	0x9c
 2111 0621 36060000 		.4byte	0x636
 2112 0625 15       		.uleb128 0x15
 2113 0626 1D040000 		.4byte	.LASF61
 2114 062a 01       		.byte	0x1
 2115 062b BF03     		.2byte	0x3bf
 2116 062d 6B000000 		.4byte	0x6b
 2117 0631 68010000 		.4byte	.LLST11
 2118 0635 00       		.byte	0
 2119 0636 19       		.uleb128 0x19
 2120 0637 50050000 		.4byte	.LASF62
 2121 063b 01       		.byte	0x1
 2122 063c D603     		.2byte	0x3d6
 2123 063e 77000000 		.4byte	0x77
 2124 0642 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 83


 2125 0646 28000000 		.4byte	.LFE10-.LFB10
 2126 064a 01       		.uleb128 0x1
 2127 064b 9C       		.byte	0x9c
 2128 064c 71060000 		.4byte	0x671
 2129 0650 15       		.uleb128 0x15
 2130 0651 1D040000 		.4byte	.LASF61
 2131 0655 01       		.byte	0x1
 2132 0656 D603     		.2byte	0x3d6
 2133 0658 6B000000 		.4byte	0x6b
 2134 065c 89010000 		.4byte	.LLST12
 2135 0660 18       		.uleb128 0x18
 2136 0661 20000000 		.4byte	.LASF63
 2137 0665 01       		.byte	0x1
 2138 0666 D803     		.2byte	0x3d8
 2139 0668 77000000 		.4byte	0x77
 2140 066c C3010000 		.4byte	.LLST13
 2141 0670 00       		.byte	0
 2142 0671 14       		.uleb128 0x14
 2143 0672 EB030000 		.4byte	.LASF64
 2144 0676 01       		.byte	0x1
 2145 0677 3E05     		.2byte	0x53e
 2146 0679 00000000 		.4byte	.LFB11
 2147 067d 94000000 		.4byte	.LFE11-.LFB11
 2148 0681 01       		.uleb128 0x1
 2149 0682 9C       		.byte	0x9c
 2150 0683 CA060000 		.4byte	0x6ca
 2151 0687 15       		.uleb128 0x15
 2152 0688 1D040000 		.4byte	.LASF61
 2153 068c 01       		.byte	0x1
 2154 068d 3E05     		.2byte	0x53e
 2155 068f 6B000000 		.4byte	0x6b
 2156 0693 11020000 		.4byte	.LLST14
 2157 0697 1B       		.uleb128 0x1b
 2158 0698 85000000 		.4byte	.LASF65
 2159 069c 01       		.byte	0x1
 2160 069d 3E05     		.2byte	0x53e
 2161 069f CA060000 		.4byte	0x6ca
 2162 06a3 01       		.uleb128 0x1
 2163 06a4 51       		.byte	0x51
 2164 06a5 15       		.uleb128 0x15
 2165 06a6 B3010000 		.4byte	.LASF66
 2166 06aa 01       		.byte	0x1
 2167 06ab 3E05     		.2byte	0x53e
 2168 06ad 77000000 		.4byte	0x77
 2169 06b1 32020000 		.4byte	.LLST15
 2170 06b5 1C       		.uleb128 0x1c
 2171 06b6 00000000 		.4byte	.Ldebug_ranges0+0
 2172 06ba 16       		.uleb128 0x16
 2173 06bb 6900     		.ascii	"i\000"
 2174 06bd 01       		.byte	0x1
 2175 06be 5305     		.2byte	0x553
 2176 06c0 77000000 		.4byte	0x77
 2177 06c4 5E020000 		.4byte	.LLST16
 2178 06c8 00       		.byte	0
 2179 06c9 00       		.byte	0
 2180 06ca 1D       		.uleb128 0x1d
 2181 06cb 04       		.byte	0x4
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 84


 2182 06cc D0060000 		.4byte	0x6d0
 2183 06d0 1E       		.uleb128 0x1e
 2184 06d1 6B000000 		.4byte	0x6b
 2185 06d5 14       		.uleb128 0x14
 2186 06d6 E0010000 		.4byte	.LASF67
 2187 06da 01       		.byte	0x1
 2188 06db E408     		.2byte	0x8e4
 2189 06dd 00000000 		.4byte	.LFB13
 2190 06e1 2C000000 		.4byte	.LFE13-.LFB13
 2191 06e5 01       		.uleb128 0x1
 2192 06e6 9C       		.byte	0x9c
 2193 06e7 FC060000 		.4byte	0x6fc
 2194 06eb 15       		.uleb128 0x15
 2195 06ec 1D040000 		.4byte	.LASF61
 2196 06f0 01       		.byte	0x1
 2197 06f1 E408     		.2byte	0x8e4
 2198 06f3 6B000000 		.4byte	0x6b
 2199 06f7 87020000 		.4byte	.LLST17
 2200 06fb 00       		.byte	0
 2201 06fc 19       		.uleb128 0x19
 2202 06fd B5020000 		.4byte	.LASF68
 2203 0701 01       		.byte	0x1
 2204 0702 7506     		.2byte	0x675
 2205 0704 77000000 		.4byte	0x77
 2206 0708 00000000 		.4byte	.LFB12
 2207 070c 50000000 		.4byte	.LFE12-.LFB12
 2208 0710 01       		.uleb128 0x1
 2209 0711 9C       		.byte	0x9c
 2210 0712 9B070000 		.4byte	0x79b
 2211 0716 15       		.uleb128 0x15
 2212 0717 1D040000 		.4byte	.LASF61
 2213 071b 01       		.byte	0x1
 2214 071c 7506     		.2byte	0x675
 2215 071e 6B000000 		.4byte	0x6b
 2216 0722 A8020000 		.4byte	.LLST18
 2217 0726 15       		.uleb128 0x15
 2218 0727 85000000 		.4byte	.LASF65
 2219 072b 01       		.byte	0x1
 2220 072c 7506     		.2byte	0x675
 2221 072e 9B070000 		.4byte	0x79b
 2222 0732 E2020000 		.4byte	.LLST19
 2223 0736 15       		.uleb128 0x15
 2224 0737 B3010000 		.4byte	.LASF66
 2225 073b 01       		.byte	0x1
 2226 073c 7506     		.2byte	0x675
 2227 073e 77000000 		.4byte	0x77
 2228 0742 19030000 		.4byte	.LLST20
 2229 0746 1F       		.uleb128 0x1f
 2230 0747 20000000 		.4byte	.LBB4
 2231 074b 14000000 		.4byte	.LBE4-.LBB4
 2232 074f 62070000 		.4byte	0x762
 2233 0753 16       		.uleb128 0x16
 2234 0754 6900     		.ascii	"i\000"
 2235 0756 01       		.byte	0x1
 2236 0757 8206     		.2byte	0x682
 2237 0759 77000000 		.4byte	0x77
 2238 075d 5B030000 		.4byte	.LLST21
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 85


 2239 0761 00       		.byte	0
 2240 0762 11       		.uleb128 0x11
 2241 0763 14000000 		.4byte	.LVL73
 2242 0767 36060000 		.4byte	0x636
 2243 076b 76070000 		.4byte	0x776
 2244 076f 12       		.uleb128 0x12
 2245 0770 01       		.uleb128 0x1
 2246 0771 50       		.byte	0x50
 2247 0772 02       		.uleb128 0x2
 2248 0773 75       		.byte	0x75
 2249 0774 00       		.sleb128 0
 2250 0775 00       		.byte	0
 2251 0776 11       		.uleb128 0x11
 2252 0777 1E000000 		.4byte	.LVL74
 2253 077b 36060000 		.4byte	0x636
 2254 077f 8A070000 		.4byte	0x78a
 2255 0783 12       		.uleb128 0x12
 2256 0784 01       		.uleb128 0x1
 2257 0785 50       		.byte	0x50
 2258 0786 02       		.uleb128 0x2
 2259 0787 75       		.byte	0x75
 2260 0788 00       		.sleb128 0
 2261 0789 00       		.byte	0
 2262 078a 13       		.uleb128 0x13
 2263 078b 3A000000 		.4byte	.LVL79
 2264 078f D5060000 		.4byte	0x6d5
 2265 0793 12       		.uleb128 0x12
 2266 0794 01       		.uleb128 0x1
 2267 0795 50       		.byte	0x50
 2268 0796 02       		.uleb128 0x2
 2269 0797 75       		.byte	0x75
 2270 0798 00       		.sleb128 0
 2271 0799 00       		.byte	0
 2272 079a 00       		.byte	0
 2273 079b 1D       		.uleb128 0x1d
 2274 079c 04       		.byte	0x4
 2275 079d 6B000000 		.4byte	0x6b
 2276 07a1 14       		.uleb128 0x14
 2277 07a2 53060000 		.4byte	.LASF69
 2278 07a6 01       		.byte	0x1
 2279 07a7 FC08     		.2byte	0x8fc
 2280 07a9 00000000 		.4byte	.LFB14
 2281 07ad 18000000 		.4byte	.LFE14-.LFB14
 2282 07b1 01       		.uleb128 0x1
 2283 07b2 9C       		.byte	0x9c
 2284 07b3 C8070000 		.4byte	0x7c8
 2285 07b7 15       		.uleb128 0x15
 2286 07b8 1D040000 		.4byte	.LASF61
 2287 07bc 01       		.byte	0x1
 2288 07bd FC08     		.2byte	0x8fc
 2289 07bf 6B000000 		.4byte	0x6b
 2290 07c3 85030000 		.4byte	.LLST22
 2291 07c7 00       		.byte	0
 2292 07c8 14       		.uleb128 0x14
 2293 07c9 63030000 		.4byte	.LASF70
 2294 07cd 01       		.byte	0x1
 2295 07ce 1A09     		.2byte	0x91a
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 86


 2296 07d0 00000000 		.4byte	.LFB15
 2297 07d4 0C000000 		.4byte	.LFE15-.LFB15
 2298 07d8 01       		.uleb128 0x1
 2299 07d9 9C       		.byte	0x9c
 2300 07da ED070000 		.4byte	0x7ed
 2301 07de 1B       		.uleb128 0x1b
 2302 07df 3B060000 		.4byte	.LASF71
 2303 07e3 01       		.byte	0x1
 2304 07e4 1A09     		.2byte	0x91a
 2305 07e6 6B000000 		.4byte	0x6b
 2306 07ea 01       		.uleb128 0x1
 2307 07eb 50       		.byte	0x50
 2308 07ec 00       		.byte	0
 2309 07ed 19       		.uleb128 0x19
 2310 07ee C7020000 		.4byte	.LASF72
 2311 07f2 01       		.byte	0x1
 2312 07f3 3309     		.2byte	0x933
 2313 07f5 6B000000 		.4byte	0x6b
 2314 07f9 00000000 		.4byte	.LFB16
 2315 07fd 20000000 		.4byte	.LFE16-.LFB16
 2316 0801 01       		.uleb128 0x1
 2317 0802 9C       		.byte	0x9c
 2318 0803 27080000 		.4byte	0x827
 2319 0807 15       		.uleb128 0x15
 2320 0808 1D040000 		.4byte	.LASF61
 2321 080c 01       		.byte	0x1
 2322 080d 3309     		.2byte	0x933
 2323 080f 6B000000 		.4byte	0x6b
 2324 0813 A6030000 		.4byte	.LLST23
 2325 0817 16       		.uleb128 0x16
 2326 0818 637200   		.ascii	"cr\000"
 2327 081b 01       		.byte	0x1
 2328 081c 3509     		.2byte	0x935
 2329 081e 6B000000 		.4byte	0x6b
 2330 0822 E0030000 		.4byte	.LLST24
 2331 0826 00       		.byte	0
 2332 0827 14       		.uleb128 0x14
 2333 0828 59010000 		.4byte	.LASF73
 2334 082c 01       		.byte	0x1
 2335 082d 5C09     		.2byte	0x95c
 2336 082f 00000000 		.4byte	.LFB17
 2337 0833 20000000 		.4byte	.LFE17-.LFB17
 2338 0837 01       		.uleb128 0x1
 2339 0838 9C       		.byte	0x9c
 2340 0839 4C080000 		.4byte	0x84c
 2341 083d 1B       		.uleb128 0x1b
 2342 083e CA000000 		.4byte	.LASF74
 2343 0842 01       		.byte	0x1
 2344 0843 5C09     		.2byte	0x95c
 2345 0845 6B000000 		.4byte	0x6b
 2346 0849 01       		.uleb128 0x1
 2347 084a 50       		.byte	0x50
 2348 084b 00       		.byte	0
 2349 084c 19       		.uleb128 0x19
 2350 084d E2000000 		.4byte	.LASF75
 2351 0851 01       		.byte	0x1
 2352 0852 9509     		.2byte	0x995
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 87


 2353 0854 6B000000 		.4byte	0x6b
 2354 0858 00000000 		.4byte	.LFB18
 2355 085c 18000000 		.4byte	.LFE18-.LFB18
 2356 0860 01       		.uleb128 0x1
 2357 0861 9C       		.byte	0x9c
 2358 0862 77080000 		.4byte	0x877
 2359 0866 18       		.uleb128 0x18
 2360 0867 19000000 		.4byte	.LASF76
 2361 086b 01       		.byte	0x1
 2362 086c 9709     		.2byte	0x997
 2363 086e 6B000000 		.4byte	0x6b
 2364 0872 16040000 		.4byte	.LLST25
 2365 0876 00       		.byte	0
 2366 0877 1A       		.uleb128 0x1a
 2367 0878 99040000 		.4byte	.LASF78
 2368 087c 01       		.byte	0x1
 2369 087d AD09     		.2byte	0x9ad
 2370 087f 6B000000 		.4byte	0x6b
 2371 0883 00000000 		.4byte	.LFB19
 2372 0887 10000000 		.4byte	.LFE19-.LFB19
 2373 088b 01       		.uleb128 0x1
 2374 088c 9C       		.byte	0x9c
 2375 088d 20       		.uleb128 0x20
 2376 088e 11010000 		.4byte	.LASF79
 2377 0892 01       		.byte	0x1
 2378 0893 BB09     		.2byte	0x9bb
 2379 0895 00000000 		.4byte	.LFB20
 2380 0899 10000000 		.4byte	.LFE20-.LFB20
 2381 089d 01       		.uleb128 0x1
 2382 089e 9C       		.byte	0x9c
 2383 089f 20       		.uleb128 0x20
 2384 08a0 F4010000 		.4byte	.LASF80
 2385 08a4 01       		.byte	0x1
 2386 08a5 D109     		.2byte	0x9d1
 2387 08a7 00000000 		.4byte	.LFB21
 2388 08ab 10000000 		.4byte	.LFE21-.LFB21
 2389 08af 01       		.uleb128 0x1
 2390 08b0 9C       		.byte	0x9c
 2391 08b1 21       		.uleb128 0x21
 2392 08b2 26040000 		.4byte	.LASF81
 2393 08b6 01       		.byte	0x1
 2394 08b7 28       		.byte	0x28
 2395 08b8 6B000000 		.4byte	0x6b
 2396 08bc 05       		.uleb128 0x5
 2397 08bd 03       		.byte	0x3
 2398 08be 00000000 		.4byte	USBUART_initVar
 2399 08c2 22       		.uleb128 0x22
 2400 08c3 62020000 		.4byte	.LASF82
 2401 08c7 03       		.byte	0x3
 2402 08c8 D602     		.2byte	0x2d6
 2403 08ca B0000000 		.4byte	0xb0
 2404 08ce 22       		.uleb128 0x22
 2405 08cf 9D010000 		.4byte	.LASF83
 2406 08d3 03       		.byte	0x3
 2407 08d4 D702     		.2byte	0x2d7
 2408 08d6 B0000000 		.4byte	0xb0
 2409 08da 22       		.uleb128 0x22
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 88


 2410 08db 44000000 		.4byte	.LASF84
 2411 08df 03       		.byte	0x3
 2412 08e0 D802     		.2byte	0x2d8
 2413 08e2 B0000000 		.4byte	0xb0
 2414 08e6 22       		.uleb128 0x22
 2415 08e7 18020000 		.4byte	.LASF85
 2416 08eb 03       		.byte	0x3
 2417 08ec D902     		.2byte	0x2d9
 2418 08ee B0000000 		.4byte	0xb0
 2419 08f2 22       		.uleb128 0x22
 2420 08f3 5A000000 		.4byte	.LASF86
 2421 08f7 03       		.byte	0x3
 2422 08f8 DA02     		.2byte	0x2da
 2423 08fa B0000000 		.4byte	0xb0
 2424 08fe 0A       		.uleb128 0xa
 2425 08ff B0000000 		.4byte	0xb0
 2426 0903 0E090000 		.4byte	0x90e
 2427 0907 0B       		.uleb128 0xb
 2428 0908 CD000000 		.4byte	0xcd
 2429 090c 01       		.byte	0x1
 2430 090d 00       		.byte	0
 2431 090e 22       		.uleb128 0x22
 2432 090f 60040000 		.4byte	.LASF87
 2433 0913 03       		.byte	0x3
 2434 0914 E302     		.2byte	0x2e3
 2435 0916 1A090000 		.4byte	0x91a
 2436 091a 05       		.uleb128 0x5
 2437 091b FE080000 		.4byte	0x8fe
 2438 091f 23       		.uleb128 0x23
 2439 0920 7A050000 		.4byte	.LASF88
 2440 0924 04       		.byte	0x4
 2441 0925 73       		.byte	0x73
 2442 0926 B0000000 		.4byte	0xb0
 2443 092a 23       		.uleb128 0x23
 2444 092b 34010000 		.4byte	.LASF89
 2445 092f 04       		.byte	0x4
 2446 0930 74       		.byte	0x74
 2447 0931 35090000 		.4byte	0x935
 2448 0935 05       		.uleb128 0x5
 2449 0936 FE080000 		.4byte	0x8fe
 2450 093a 23       		.uleb128 0x23
 2451 093b DD020000 		.4byte	.LASF90
 2452 093f 04       		.byte	0x4
 2453 0940 76       		.byte	0x76
 2454 0941 B0000000 		.4byte	0xb0
 2455 0945 0A       		.uleb128 0xa
 2456 0946 55090000 		.4byte	0x955
 2457 094a 55090000 		.4byte	0x955
 2458 094e 0B       		.uleb128 0xb
 2459 094f CD000000 		.4byte	0xcd
 2460 0953 08       		.byte	0x8
 2461 0954 00       		.byte	0
 2462 0955 05       		.uleb128 0x5
 2463 0956 49010000 		.4byte	0x149
 2464 095a 23       		.uleb128 0x23
 2465 095b 68060000 		.4byte	.LASF91
 2466 095f 04       		.byte	0x4
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 89


 2467 0960 7A       		.byte	0x7a
 2468 0961 65090000 		.4byte	0x965
 2469 0965 05       		.uleb128 0x5
 2470 0966 45090000 		.4byte	0x945
 2471 096a 23       		.uleb128 0x23
 2472 096b B2030000 		.4byte	.LASF92
 2473 096f 04       		.byte	0x4
 2474 0970 9C       		.byte	0x9c
 2475 0971 B0000000 		.4byte	0xb0
 2476 0975 24       		.uleb128 0x24
 2477 0976 63050000 		.4byte	.LASF93
 2478 097a 63050000 		.4byte	.LASF93
 2479 097e 05       		.byte	0x5
 2480 097f 7D       		.byte	0x7d
 2481 0980 24       		.uleb128 0x24
 2482 0981 FE020000 		.4byte	.LASF94
 2483 0985 FE020000 		.4byte	.LASF94
 2484 0989 05       		.byte	0x5
 2485 098a 77       		.byte	0x77
 2486 098b 24       		.uleb128 0x24
 2487 098c 6F000000 		.4byte	.LASF95
 2488 0990 6F000000 		.4byte	.LASF95
 2489 0994 05       		.byte	0x5
 2490 0995 7E       		.byte	0x7e
 2491 0996 24       		.uleb128 0x24
 2492 0997 86010000 		.4byte	.LASF96
 2493 099b 86010000 		.4byte	.LASF96
 2494 099f 05       		.byte	0x5
 2495 09a0 8B       		.byte	0x8b
 2496 09a1 24       		.uleb128 0x24
 2497 09a2 2B050000 		.4byte	.LASF97
 2498 09a6 2B050000 		.4byte	.LASF97
 2499 09aa 05       		.byte	0x5
 2500 09ab 88       		.byte	0x88
 2501 09ac 24       		.uleb128 0x24
 2502 09ad 9E030000 		.4byte	.LASF98
 2503 09b1 9E030000 		.4byte	.LASF98
 2504 09b5 05       		.byte	0x5
 2505 09b6 79       		.byte	0x79
 2506 09b7 24       		.uleb128 0x24
 2507 09b8 D9040000 		.4byte	.LASF99
 2508 09bc D9040000 		.4byte	.LASF99
 2509 09c0 06       		.byte	0x6
 2510 09c1 2B       		.byte	0x2b
 2511 09c2 00       		.byte	0
 2512              		.section	.debug_abbrev,"",%progbits
 2513              	.Ldebug_abbrev0:
 2514 0000 01       		.uleb128 0x1
 2515 0001 11       		.uleb128 0x11
 2516 0002 01       		.byte	0x1
 2517 0003 25       		.uleb128 0x25
 2518 0004 0E       		.uleb128 0xe
 2519 0005 13       		.uleb128 0x13
 2520 0006 0B       		.uleb128 0xb
 2521 0007 03       		.uleb128 0x3
 2522 0008 0E       		.uleb128 0xe
 2523 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 90


 2524 000a 0E       		.uleb128 0xe
 2525 000b 55       		.uleb128 0x55
 2526 000c 17       		.uleb128 0x17
 2527 000d 11       		.uleb128 0x11
 2528 000e 01       		.uleb128 0x1
 2529 000f 10       		.uleb128 0x10
 2530 0010 17       		.uleb128 0x17
 2531 0011 00       		.byte	0
 2532 0012 00       		.byte	0
 2533 0013 02       		.uleb128 0x2
 2534 0014 24       		.uleb128 0x24
 2535 0015 00       		.byte	0
 2536 0016 0B       		.uleb128 0xb
 2537 0017 0B       		.uleb128 0xb
 2538 0018 3E       		.uleb128 0x3e
 2539 0019 0B       		.uleb128 0xb
 2540 001a 03       		.uleb128 0x3
 2541 001b 0E       		.uleb128 0xe
 2542 001c 00       		.byte	0
 2543 001d 00       		.byte	0
 2544 001e 03       		.uleb128 0x3
 2545 001f 24       		.uleb128 0x24
 2546 0020 00       		.byte	0
 2547 0021 0B       		.uleb128 0xb
 2548 0022 0B       		.uleb128 0xb
 2549 0023 3E       		.uleb128 0x3e
 2550 0024 0B       		.uleb128 0xb
 2551 0025 03       		.uleb128 0x3
 2552 0026 08       		.uleb128 0x8
 2553 0027 00       		.byte	0
 2554 0028 00       		.byte	0
 2555 0029 04       		.uleb128 0x4
 2556 002a 16       		.uleb128 0x16
 2557 002b 00       		.byte	0
 2558 002c 03       		.uleb128 0x3
 2559 002d 0E       		.uleb128 0xe
 2560 002e 3A       		.uleb128 0x3a
 2561 002f 0B       		.uleb128 0xb
 2562 0030 3B       		.uleb128 0x3b
 2563 0031 05       		.uleb128 0x5
 2564 0032 49       		.uleb128 0x49
 2565 0033 13       		.uleb128 0x13
 2566 0034 00       		.byte	0
 2567 0035 00       		.byte	0
 2568 0036 05       		.uleb128 0x5
 2569 0037 35       		.uleb128 0x35
 2570 0038 00       		.byte	0
 2571 0039 49       		.uleb128 0x49
 2572 003a 13       		.uleb128 0x13
 2573 003b 00       		.byte	0
 2574 003c 00       		.byte	0
 2575 003d 06       		.uleb128 0x6
 2576 003e 13       		.uleb128 0x13
 2577 003f 01       		.byte	0x1
 2578 0040 0B       		.uleb128 0xb
 2579 0041 0B       		.uleb128 0xb
 2580 0042 3A       		.uleb128 0x3a
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 91


 2581 0043 0B       		.uleb128 0xb
 2582 0044 3B       		.uleb128 0x3b
 2583 0045 0B       		.uleb128 0xb
 2584 0046 01       		.uleb128 0x1
 2585 0047 13       		.uleb128 0x13
 2586 0048 00       		.byte	0
 2587 0049 00       		.byte	0
 2588 004a 07       		.uleb128 0x7
 2589 004b 0D       		.uleb128 0xd
 2590 004c 00       		.byte	0
 2591 004d 03       		.uleb128 0x3
 2592 004e 0E       		.uleb128 0xe
 2593 004f 3A       		.uleb128 0x3a
 2594 0050 0B       		.uleb128 0xb
 2595 0051 3B       		.uleb128 0x3b
 2596 0052 0B       		.uleb128 0xb
 2597 0053 49       		.uleb128 0x49
 2598 0054 13       		.uleb128 0x13
 2599 0055 38       		.uleb128 0x38
 2600 0056 0B       		.uleb128 0xb
 2601 0057 00       		.byte	0
 2602 0058 00       		.byte	0
 2603 0059 08       		.uleb128 0x8
 2604 005a 16       		.uleb128 0x16
 2605 005b 00       		.byte	0
 2606 005c 03       		.uleb128 0x3
 2607 005d 0E       		.uleb128 0xe
 2608 005e 3A       		.uleb128 0x3a
 2609 005f 0B       		.uleb128 0xb
 2610 0060 3B       		.uleb128 0x3b
 2611 0061 0B       		.uleb128 0xb
 2612 0062 49       		.uleb128 0x49
 2613 0063 13       		.uleb128 0x13
 2614 0064 00       		.byte	0
 2615 0065 00       		.byte	0
 2616 0066 09       		.uleb128 0x9
 2617 0067 0D       		.uleb128 0xd
 2618 0068 00       		.byte	0
 2619 0069 03       		.uleb128 0x3
 2620 006a 08       		.uleb128 0x8
 2621 006b 3A       		.uleb128 0x3a
 2622 006c 0B       		.uleb128 0xb
 2623 006d 3B       		.uleb128 0x3b
 2624 006e 0B       		.uleb128 0xb
 2625 006f 49       		.uleb128 0x49
 2626 0070 13       		.uleb128 0x13
 2627 0071 38       		.uleb128 0x38
 2628 0072 0B       		.uleb128 0xb
 2629 0073 00       		.byte	0
 2630 0074 00       		.byte	0
 2631 0075 0A       		.uleb128 0xa
 2632 0076 01       		.uleb128 0x1
 2633 0077 01       		.byte	0x1
 2634 0078 49       		.uleb128 0x49
 2635 0079 13       		.uleb128 0x13
 2636 007a 01       		.uleb128 0x1
 2637 007b 13       		.uleb128 0x13
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 92


 2638 007c 00       		.byte	0
 2639 007d 00       		.byte	0
 2640 007e 0B       		.uleb128 0xb
 2641 007f 21       		.uleb128 0x21
 2642 0080 00       		.byte	0
 2643 0081 49       		.uleb128 0x49
 2644 0082 13       		.uleb128 0x13
 2645 0083 2F       		.uleb128 0x2f
 2646 0084 0B       		.uleb128 0xb
 2647 0085 00       		.byte	0
 2648 0086 00       		.byte	0
 2649 0087 0C       		.uleb128 0xc
 2650 0088 13       		.uleb128 0x13
 2651 0089 01       		.byte	0x1
 2652 008a 0B       		.uleb128 0xb
 2653 008b 0B       		.uleb128 0xb
 2654 008c 3A       		.uleb128 0x3a
 2655 008d 0B       		.uleb128 0xb
 2656 008e 3B       		.uleb128 0x3b
 2657 008f 05       		.uleb128 0x5
 2658 0090 01       		.uleb128 0x1
 2659 0091 13       		.uleb128 0x13
 2660 0092 00       		.byte	0
 2661 0093 00       		.byte	0
 2662 0094 0D       		.uleb128 0xd
 2663 0095 0D       		.uleb128 0xd
 2664 0096 00       		.byte	0
 2665 0097 03       		.uleb128 0x3
 2666 0098 0E       		.uleb128 0xe
 2667 0099 3A       		.uleb128 0x3a
 2668 009a 0B       		.uleb128 0xb
 2669 009b 3B       		.uleb128 0x3b
 2670 009c 05       		.uleb128 0x5
 2671 009d 49       		.uleb128 0x49
 2672 009e 13       		.uleb128 0x13
 2673 009f 38       		.uleb128 0x38
 2674 00a0 0B       		.uleb128 0xb
 2675 00a1 00       		.byte	0
 2676 00a2 00       		.byte	0
 2677 00a3 0E       		.uleb128 0xe
 2678 00a4 2E       		.uleb128 0x2e
 2679 00a5 01       		.byte	0x1
 2680 00a6 3F       		.uleb128 0x3f
 2681 00a7 19       		.uleb128 0x19
 2682 00a8 03       		.uleb128 0x3
 2683 00a9 0E       		.uleb128 0xe
 2684 00aa 3A       		.uleb128 0x3a
 2685 00ab 0B       		.uleb128 0xb
 2686 00ac 3B       		.uleb128 0x3b
 2687 00ad 0B       		.uleb128 0xb
 2688 00ae 27       		.uleb128 0x27
 2689 00af 19       		.uleb128 0x19
 2690 00b0 11       		.uleb128 0x11
 2691 00b1 01       		.uleb128 0x1
 2692 00b2 12       		.uleb128 0x12
 2693 00b3 06       		.uleb128 0x6
 2694 00b4 40       		.uleb128 0x40
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 93


 2695 00b5 18       		.uleb128 0x18
 2696 00b6 9742     		.uleb128 0x2117
 2697 00b8 19       		.uleb128 0x19
 2698 00b9 01       		.uleb128 0x1
 2699 00ba 13       		.uleb128 0x13
 2700 00bb 00       		.byte	0
 2701 00bc 00       		.byte	0
 2702 00bd 0F       		.uleb128 0xf
 2703 00be 34       		.uleb128 0x34
 2704 00bf 00       		.byte	0
 2705 00c0 03       		.uleb128 0x3
 2706 00c1 0E       		.uleb128 0xe
 2707 00c2 3A       		.uleb128 0x3a
 2708 00c3 0B       		.uleb128 0xb
 2709 00c4 3B       		.uleb128 0x3b
 2710 00c5 0B       		.uleb128 0xb
 2711 00c6 49       		.uleb128 0x49
 2712 00c7 13       		.uleb128 0x13
 2713 00c8 02       		.uleb128 0x2
 2714 00c9 17       		.uleb128 0x17
 2715 00ca 00       		.byte	0
 2716 00cb 00       		.byte	0
 2717 00cc 10       		.uleb128 0x10
 2718 00cd 898201   		.uleb128 0x4109
 2719 00d0 00       		.byte	0
 2720 00d1 11       		.uleb128 0x11
 2721 00d2 01       		.uleb128 0x1
 2722 00d3 31       		.uleb128 0x31
 2723 00d4 13       		.uleb128 0x13
 2724 00d5 00       		.byte	0
 2725 00d6 00       		.byte	0
 2726 00d7 11       		.uleb128 0x11
 2727 00d8 898201   		.uleb128 0x4109
 2728 00db 01       		.byte	0x1
 2729 00dc 11       		.uleb128 0x11
 2730 00dd 01       		.uleb128 0x1
 2731 00de 31       		.uleb128 0x31
 2732 00df 13       		.uleb128 0x13
 2733 00e0 01       		.uleb128 0x1
 2734 00e1 13       		.uleb128 0x13
 2735 00e2 00       		.byte	0
 2736 00e3 00       		.byte	0
 2737 00e4 12       		.uleb128 0x12
 2738 00e5 8A8201   		.uleb128 0x410a
 2739 00e8 00       		.byte	0
 2740 00e9 02       		.uleb128 0x2
 2741 00ea 18       		.uleb128 0x18
 2742 00eb 9142     		.uleb128 0x2111
 2743 00ed 18       		.uleb128 0x18
 2744 00ee 00       		.byte	0
 2745 00ef 00       		.byte	0
 2746 00f0 13       		.uleb128 0x13
 2747 00f1 898201   		.uleb128 0x4109
 2748 00f4 01       		.byte	0x1
 2749 00f5 11       		.uleb128 0x11
 2750 00f6 01       		.uleb128 0x1
 2751 00f7 31       		.uleb128 0x31
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 94


 2752 00f8 13       		.uleb128 0x13
 2753 00f9 00       		.byte	0
 2754 00fa 00       		.byte	0
 2755 00fb 14       		.uleb128 0x14
 2756 00fc 2E       		.uleb128 0x2e
 2757 00fd 01       		.byte	0x1
 2758 00fe 3F       		.uleb128 0x3f
 2759 00ff 19       		.uleb128 0x19
 2760 0100 03       		.uleb128 0x3
 2761 0101 0E       		.uleb128 0xe
 2762 0102 3A       		.uleb128 0x3a
 2763 0103 0B       		.uleb128 0xb
 2764 0104 3B       		.uleb128 0x3b
 2765 0105 05       		.uleb128 0x5
 2766 0106 27       		.uleb128 0x27
 2767 0107 19       		.uleb128 0x19
 2768 0108 11       		.uleb128 0x11
 2769 0109 01       		.uleb128 0x1
 2770 010a 12       		.uleb128 0x12
 2771 010b 06       		.uleb128 0x6
 2772 010c 40       		.uleb128 0x40
 2773 010d 18       		.uleb128 0x18
 2774 010e 9742     		.uleb128 0x2117
 2775 0110 19       		.uleb128 0x19
 2776 0111 01       		.uleb128 0x1
 2777 0112 13       		.uleb128 0x13
 2778 0113 00       		.byte	0
 2779 0114 00       		.byte	0
 2780 0115 15       		.uleb128 0x15
 2781 0116 05       		.uleb128 0x5
 2782 0117 00       		.byte	0
 2783 0118 03       		.uleb128 0x3
 2784 0119 0E       		.uleb128 0xe
 2785 011a 3A       		.uleb128 0x3a
 2786 011b 0B       		.uleb128 0xb
 2787 011c 3B       		.uleb128 0x3b
 2788 011d 05       		.uleb128 0x5
 2789 011e 49       		.uleb128 0x49
 2790 011f 13       		.uleb128 0x13
 2791 0120 02       		.uleb128 0x2
 2792 0121 17       		.uleb128 0x17
 2793 0122 00       		.byte	0
 2794 0123 00       		.byte	0
 2795 0124 16       		.uleb128 0x16
 2796 0125 34       		.uleb128 0x34
 2797 0126 00       		.byte	0
 2798 0127 03       		.uleb128 0x3
 2799 0128 08       		.uleb128 0x8
 2800 0129 3A       		.uleb128 0x3a
 2801 012a 0B       		.uleb128 0xb
 2802 012b 3B       		.uleb128 0x3b
 2803 012c 05       		.uleb128 0x5
 2804 012d 49       		.uleb128 0x49
 2805 012e 13       		.uleb128 0x13
 2806 012f 02       		.uleb128 0x2
 2807 0130 17       		.uleb128 0x17
 2808 0131 00       		.byte	0
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 95


 2809 0132 00       		.byte	0
 2810 0133 17       		.uleb128 0x17
 2811 0134 05       		.uleb128 0x5
 2812 0135 00       		.byte	0
 2813 0136 03       		.uleb128 0x3
 2814 0137 0E       		.uleb128 0xe
 2815 0138 3A       		.uleb128 0x3a
 2816 0139 0B       		.uleb128 0xb
 2817 013a 3B       		.uleb128 0x3b
 2818 013b 0B       		.uleb128 0xb
 2819 013c 49       		.uleb128 0x49
 2820 013d 13       		.uleb128 0x13
 2821 013e 02       		.uleb128 0x2
 2822 013f 17       		.uleb128 0x17
 2823 0140 00       		.byte	0
 2824 0141 00       		.byte	0
 2825 0142 18       		.uleb128 0x18
 2826 0143 34       		.uleb128 0x34
 2827 0144 00       		.byte	0
 2828 0145 03       		.uleb128 0x3
 2829 0146 0E       		.uleb128 0xe
 2830 0147 3A       		.uleb128 0x3a
 2831 0148 0B       		.uleb128 0xb
 2832 0149 3B       		.uleb128 0x3b
 2833 014a 05       		.uleb128 0x5
 2834 014b 49       		.uleb128 0x49
 2835 014c 13       		.uleb128 0x13
 2836 014d 02       		.uleb128 0x2
 2837 014e 17       		.uleb128 0x17
 2838 014f 00       		.byte	0
 2839 0150 00       		.byte	0
 2840 0151 19       		.uleb128 0x19
 2841 0152 2E       		.uleb128 0x2e
 2842 0153 01       		.byte	0x1
 2843 0154 3F       		.uleb128 0x3f
 2844 0155 19       		.uleb128 0x19
 2845 0156 03       		.uleb128 0x3
 2846 0157 0E       		.uleb128 0xe
 2847 0158 3A       		.uleb128 0x3a
 2848 0159 0B       		.uleb128 0xb
 2849 015a 3B       		.uleb128 0x3b
 2850 015b 05       		.uleb128 0x5
 2851 015c 27       		.uleb128 0x27
 2852 015d 19       		.uleb128 0x19
 2853 015e 49       		.uleb128 0x49
 2854 015f 13       		.uleb128 0x13
 2855 0160 11       		.uleb128 0x11
 2856 0161 01       		.uleb128 0x1
 2857 0162 12       		.uleb128 0x12
 2858 0163 06       		.uleb128 0x6
 2859 0164 40       		.uleb128 0x40
 2860 0165 18       		.uleb128 0x18
 2861 0166 9742     		.uleb128 0x2117
 2862 0168 19       		.uleb128 0x19
 2863 0169 01       		.uleb128 0x1
 2864 016a 13       		.uleb128 0x13
 2865 016b 00       		.byte	0
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 96


 2866 016c 00       		.byte	0
 2867 016d 1A       		.uleb128 0x1a
 2868 016e 2E       		.uleb128 0x2e
 2869 016f 00       		.byte	0
 2870 0170 3F       		.uleb128 0x3f
 2871 0171 19       		.uleb128 0x19
 2872 0172 03       		.uleb128 0x3
 2873 0173 0E       		.uleb128 0xe
 2874 0174 3A       		.uleb128 0x3a
 2875 0175 0B       		.uleb128 0xb
 2876 0176 3B       		.uleb128 0x3b
 2877 0177 05       		.uleb128 0x5
 2878 0178 27       		.uleb128 0x27
 2879 0179 19       		.uleb128 0x19
 2880 017a 49       		.uleb128 0x49
 2881 017b 13       		.uleb128 0x13
 2882 017c 11       		.uleb128 0x11
 2883 017d 01       		.uleb128 0x1
 2884 017e 12       		.uleb128 0x12
 2885 017f 06       		.uleb128 0x6
 2886 0180 40       		.uleb128 0x40
 2887 0181 18       		.uleb128 0x18
 2888 0182 9742     		.uleb128 0x2117
 2889 0184 19       		.uleb128 0x19
 2890 0185 00       		.byte	0
 2891 0186 00       		.byte	0
 2892 0187 1B       		.uleb128 0x1b
 2893 0188 05       		.uleb128 0x5
 2894 0189 00       		.byte	0
 2895 018a 03       		.uleb128 0x3
 2896 018b 0E       		.uleb128 0xe
 2897 018c 3A       		.uleb128 0x3a
 2898 018d 0B       		.uleb128 0xb
 2899 018e 3B       		.uleb128 0x3b
 2900 018f 05       		.uleb128 0x5
 2901 0190 49       		.uleb128 0x49
 2902 0191 13       		.uleb128 0x13
 2903 0192 02       		.uleb128 0x2
 2904 0193 18       		.uleb128 0x18
 2905 0194 00       		.byte	0
 2906 0195 00       		.byte	0
 2907 0196 1C       		.uleb128 0x1c
 2908 0197 0B       		.uleb128 0xb
 2909 0198 01       		.byte	0x1
 2910 0199 55       		.uleb128 0x55
 2911 019a 17       		.uleb128 0x17
 2912 019b 00       		.byte	0
 2913 019c 00       		.byte	0
 2914 019d 1D       		.uleb128 0x1d
 2915 019e 0F       		.uleb128 0xf
 2916 019f 00       		.byte	0
 2917 01a0 0B       		.uleb128 0xb
 2918 01a1 0B       		.uleb128 0xb
 2919 01a2 49       		.uleb128 0x49
 2920 01a3 13       		.uleb128 0x13
 2921 01a4 00       		.byte	0
 2922 01a5 00       		.byte	0
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 97


 2923 01a6 1E       		.uleb128 0x1e
 2924 01a7 26       		.uleb128 0x26
 2925 01a8 00       		.byte	0
 2926 01a9 49       		.uleb128 0x49
 2927 01aa 13       		.uleb128 0x13
 2928 01ab 00       		.byte	0
 2929 01ac 00       		.byte	0
 2930 01ad 1F       		.uleb128 0x1f
 2931 01ae 0B       		.uleb128 0xb
 2932 01af 01       		.byte	0x1
 2933 01b0 11       		.uleb128 0x11
 2934 01b1 01       		.uleb128 0x1
 2935 01b2 12       		.uleb128 0x12
 2936 01b3 06       		.uleb128 0x6
 2937 01b4 01       		.uleb128 0x1
 2938 01b5 13       		.uleb128 0x13
 2939 01b6 00       		.byte	0
 2940 01b7 00       		.byte	0
 2941 01b8 20       		.uleb128 0x20
 2942 01b9 2E       		.uleb128 0x2e
 2943 01ba 00       		.byte	0
 2944 01bb 3F       		.uleb128 0x3f
 2945 01bc 19       		.uleb128 0x19
 2946 01bd 03       		.uleb128 0x3
 2947 01be 0E       		.uleb128 0xe
 2948 01bf 3A       		.uleb128 0x3a
 2949 01c0 0B       		.uleb128 0xb
 2950 01c1 3B       		.uleb128 0x3b
 2951 01c2 05       		.uleb128 0x5
 2952 01c3 27       		.uleb128 0x27
 2953 01c4 19       		.uleb128 0x19
 2954 01c5 11       		.uleb128 0x11
 2955 01c6 01       		.uleb128 0x1
 2956 01c7 12       		.uleb128 0x12
 2957 01c8 06       		.uleb128 0x6
 2958 01c9 40       		.uleb128 0x40
 2959 01ca 18       		.uleb128 0x18
 2960 01cb 9742     		.uleb128 0x2117
 2961 01cd 19       		.uleb128 0x19
 2962 01ce 00       		.byte	0
 2963 01cf 00       		.byte	0
 2964 01d0 21       		.uleb128 0x21
 2965 01d1 34       		.uleb128 0x34
 2966 01d2 00       		.byte	0
 2967 01d3 03       		.uleb128 0x3
 2968 01d4 0E       		.uleb128 0xe
 2969 01d5 3A       		.uleb128 0x3a
 2970 01d6 0B       		.uleb128 0xb
 2971 01d7 3B       		.uleb128 0x3b
 2972 01d8 0B       		.uleb128 0xb
 2973 01d9 49       		.uleb128 0x49
 2974 01da 13       		.uleb128 0x13
 2975 01db 3F       		.uleb128 0x3f
 2976 01dc 19       		.uleb128 0x19
 2977 01dd 02       		.uleb128 0x2
 2978 01de 18       		.uleb128 0x18
 2979 01df 00       		.byte	0
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 98


 2980 01e0 00       		.byte	0
 2981 01e1 22       		.uleb128 0x22
 2982 01e2 34       		.uleb128 0x34
 2983 01e3 00       		.byte	0
 2984 01e4 03       		.uleb128 0x3
 2985 01e5 0E       		.uleb128 0xe
 2986 01e6 3A       		.uleb128 0x3a
 2987 01e7 0B       		.uleb128 0xb
 2988 01e8 3B       		.uleb128 0x3b
 2989 01e9 05       		.uleb128 0x5
 2990 01ea 49       		.uleb128 0x49
 2991 01eb 13       		.uleb128 0x13
 2992 01ec 3F       		.uleb128 0x3f
 2993 01ed 19       		.uleb128 0x19
 2994 01ee 3C       		.uleb128 0x3c
 2995 01ef 19       		.uleb128 0x19
 2996 01f0 00       		.byte	0
 2997 01f1 00       		.byte	0
 2998 01f2 23       		.uleb128 0x23
 2999 01f3 34       		.uleb128 0x34
 3000 01f4 00       		.byte	0
 3001 01f5 03       		.uleb128 0x3
 3002 01f6 0E       		.uleb128 0xe
 3003 01f7 3A       		.uleb128 0x3a
 3004 01f8 0B       		.uleb128 0xb
 3005 01f9 3B       		.uleb128 0x3b
 3006 01fa 0B       		.uleb128 0xb
 3007 01fb 49       		.uleb128 0x49
 3008 01fc 13       		.uleb128 0x13
 3009 01fd 3F       		.uleb128 0x3f
 3010 01fe 19       		.uleb128 0x19
 3011 01ff 3C       		.uleb128 0x3c
 3012 0200 19       		.uleb128 0x19
 3013 0201 00       		.byte	0
 3014 0202 00       		.byte	0
 3015 0203 24       		.uleb128 0x24
 3016 0204 2E       		.uleb128 0x2e
 3017 0205 00       		.byte	0
 3018 0206 3F       		.uleb128 0x3f
 3019 0207 19       		.uleb128 0x19
 3020 0208 3C       		.uleb128 0x3c
 3021 0209 19       		.uleb128 0x19
 3022 020a 6E       		.uleb128 0x6e
 3023 020b 0E       		.uleb128 0xe
 3024 020c 03       		.uleb128 0x3
 3025 020d 0E       		.uleb128 0xe
 3026 020e 3A       		.uleb128 0x3a
 3027 020f 0B       		.uleb128 0xb
 3028 0210 3B       		.uleb128 0x3b
 3029 0211 0B       		.uleb128 0xb
 3030 0212 00       		.byte	0
 3031 0213 00       		.byte	0
 3032 0214 00       		.byte	0
 3033              		.section	.debug_loc,"",%progbits
 3034              	.Ldebug_loc0:
 3035              	.LLST0:
 3036 0000 08000000 		.4byte	.LVL1
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 99


 3037 0004 0A010000 		.4byte	.LVL21
 3038 0008 0100     		.2byte	0x1
 3039 000a 56       		.byte	0x56
 3040 000b 00000000 		.4byte	0
 3041 000f 00000000 		.4byte	0
 3042              	.LLST1:
 3043 0013 00000000 		.4byte	.LVL22
 3044 0017 8E000000 		.4byte	.LVL28
 3045 001b 0100     		.2byte	0x1
 3046 001d 50       		.byte	0x50
 3047 001e 8E000000 		.4byte	.LVL28
 3048 0022 D0000000 		.4byte	.LFE2
 3049 0026 0400     		.2byte	0x4
 3050 0028 F3       		.byte	0xf3
 3051 0029 01       		.uleb128 0x1
 3052 002a 50       		.byte	0x50
 3053 002b 9F       		.byte	0x9f
 3054 002c 00000000 		.4byte	0
 3055 0030 00000000 		.4byte	0
 3056              	.LLST2:
 3057 0034 00000000 		.4byte	.LVL22
 3058 0038 91000000 		.4byte	.LVL29-1
 3059 003c 0100     		.2byte	0x1
 3060 003e 51       		.byte	0x51
 3061 003f 91000000 		.4byte	.LVL29-1
 3062 0043 D0000000 		.4byte	.LFE2
 3063 0047 0400     		.2byte	0x4
 3064 0049 F3       		.byte	0xf3
 3065 004a 01       		.uleb128 0x1
 3066 004b 51       		.byte	0x51
 3067 004c 9F       		.byte	0x9f
 3068 004d 00000000 		.4byte	0
 3069 0051 00000000 		.4byte	0
 3070              	.LLST3:
 3071 0055 02000000 		.4byte	.LVL23
 3072 0059 06000000 		.4byte	.LVL24
 3073 005d 0200     		.2byte	0x2
 3074 005f 30       		.byte	0x30
 3075 0060 9F       		.byte	0x9f
 3076 0061 06000000 		.4byte	.LVL24
 3077 0065 0E000000 		.4byte	.LVL25
 3078 0069 0100     		.2byte	0x1
 3079 006b 53       		.byte	0x53
 3080 006c 10000000 		.4byte	.LVL26
 3081 0070 16000000 		.4byte	.LVL27
 3082 0074 0100     		.2byte	0x1
 3083 0076 53       		.byte	0x53
 3084 0077 00000000 		.4byte	0
 3085 007b 00000000 		.4byte	0
 3086              	.LLST4:
 3087 007f 00000000 		.4byte	.LVL30
 3088 0083 0F000000 		.4byte	.LVL31-1
 3089 0087 0100     		.2byte	0x1
 3090 0089 50       		.byte	0x50
 3091 008a 0F000000 		.4byte	.LVL31-1
 3092 008e 24000000 		.4byte	.LFE0
 3093 0092 0400     		.2byte	0x4
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 100


 3094 0094 F3       		.byte	0xf3
 3095 0095 01       		.uleb128 0x1
 3096 0096 50       		.byte	0x50
 3097 0097 9F       		.byte	0x9f
 3098 0098 00000000 		.4byte	0
 3099 009c 00000000 		.4byte	0
 3100              	.LLST5:
 3101 00a0 00000000 		.4byte	.LVL30
 3102 00a4 0F000000 		.4byte	.LVL31-1
 3103 00a8 0100     		.2byte	0x1
 3104 00aa 51       		.byte	0x51
 3105 00ab 0F000000 		.4byte	.LVL31-1
 3106 00af 24000000 		.4byte	.LFE0
 3107 00b3 0400     		.2byte	0x4
 3108 00b5 F3       		.byte	0xf3
 3109 00b6 01       		.uleb128 0x1
 3110 00b7 51       		.byte	0x51
 3111 00b8 9F       		.byte	0x9f
 3112 00b9 00000000 		.4byte	0
 3113 00bd 00000000 		.4byte	0
 3114              	.LLST6:
 3115 00c1 00000000 		.4byte	.LVL33
 3116 00c5 04000000 		.4byte	.LVL34
 3117 00c9 0200     		.2byte	0x2
 3118 00cb 30       		.byte	0x30
 3119 00cc 9F       		.byte	0x9f
 3120 00cd 04000000 		.4byte	.LVL34
 3121 00d1 0C000000 		.4byte	.LVL35
 3122 00d5 0100     		.2byte	0x1
 3123 00d7 53       		.byte	0x53
 3124 00d8 0E000000 		.4byte	.LVL36
 3125 00dc 14000000 		.4byte	.LVL37
 3126 00e0 0100     		.2byte	0x1
 3127 00e2 53       		.byte	0x53
 3128 00e3 00000000 		.4byte	0
 3129 00e7 00000000 		.4byte	0
 3130              	.LLST7:
 3131 00eb 06000000 		.4byte	.LVL38
 3132 00ef 47000000 		.4byte	.LVL39-1
 3133 00f3 0100     		.2byte	0x1
 3134 00f5 50       		.byte	0x50
 3135 00f6 00000000 		.4byte	0
 3136 00fa 00000000 		.4byte	0
 3137              	.LLST8:
 3138 00fe 06000000 		.4byte	.LVL41
 3139 0102 10000000 		.4byte	.LVL42
 3140 0106 0100     		.2byte	0x1
 3141 0108 53       		.byte	0x53
 3142 0109 00000000 		.4byte	0
 3143 010d 00000000 		.4byte	0
 3144              	.LLST9:
 3145 0111 00000000 		.4byte	.LVL43
 3146 0115 10000000 		.4byte	.LVL44
 3147 0119 0200     		.2byte	0x2
 3148 011b 30       		.byte	0x30
 3149 011c 9F       		.byte	0x9f
 3150 011d 10000000 		.4byte	.LVL44
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 101


 3151 0121 16000000 		.4byte	.LVL45
 3152 0125 0100     		.2byte	0x1
 3153 0127 50       		.byte	0x50
 3154 0128 16000000 		.4byte	.LVL45
 3155 012c 18000000 		.4byte	.LVL46
 3156 0130 0200     		.2byte	0x2
 3157 0132 30       		.byte	0x30
 3158 0133 9F       		.byte	0x9f
 3159 0134 18000000 		.4byte	.LVL46
 3160 0138 20000000 		.4byte	.LFE7
 3161 013c 0100     		.2byte	0x1
 3162 013e 50       		.byte	0x50
 3163 013f 00000000 		.4byte	0
 3164 0143 00000000 		.4byte	0
 3165              	.LLST10:
 3166 0147 00000000 		.4byte	.LVL47
 3167 014b 04000000 		.4byte	.LVL48
 3168 014f 0100     		.2byte	0x1
 3169 0151 50       		.byte	0x50
 3170 0152 04000000 		.4byte	.LVL48
 3171 0156 0C000000 		.4byte	.LFE8
 3172 015a 0400     		.2byte	0x4
 3173 015c F3       		.byte	0xf3
 3174 015d 01       		.uleb128 0x1
 3175 015e 50       		.byte	0x50
 3176 015f 9F       		.byte	0x9f
 3177 0160 00000000 		.4byte	0
 3178 0164 00000000 		.4byte	0
 3179              	.LLST11:
 3180 0168 00000000 		.4byte	.LVL49
 3181 016c 04000000 		.4byte	.LVL50
 3182 0170 0100     		.2byte	0x1
 3183 0172 50       		.byte	0x50
 3184 0173 04000000 		.4byte	.LVL50
 3185 0177 14000000 		.4byte	.LFE9
 3186 017b 0400     		.2byte	0x4
 3187 017d F3       		.byte	0xf3
 3188 017e 01       		.uleb128 0x1
 3189 017f 50       		.byte	0x50
 3190 0180 9F       		.byte	0x9f
 3191 0181 00000000 		.4byte	0
 3192 0185 00000000 		.4byte	0
 3193              	.LLST12:
 3194 0189 00000000 		.4byte	.LVL51
 3195 018d 0C000000 		.4byte	.LVL52
 3196 0191 0100     		.2byte	0x1
 3197 0193 50       		.byte	0x50
 3198 0194 0C000000 		.4byte	.LVL52
 3199 0198 20000000 		.4byte	.LVL57
 3200 019c 0400     		.2byte	0x4
 3201 019e F3       		.byte	0xf3
 3202 019f 01       		.uleb128 0x1
 3203 01a0 50       		.byte	0x50
 3204 01a1 9F       		.byte	0x9f
 3205 01a2 20000000 		.4byte	.LVL57
 3206 01a6 22000000 		.4byte	.LVL58
 3207 01aa 0100     		.2byte	0x1
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 102


 3208 01ac 50       		.byte	0x50
 3209 01ad 22000000 		.4byte	.LVL58
 3210 01b1 28000000 		.4byte	.LFE10
 3211 01b5 0400     		.2byte	0x4
 3212 01b7 F3       		.byte	0xf3
 3213 01b8 01       		.uleb128 0x1
 3214 01b9 50       		.byte	0x50
 3215 01ba 9F       		.byte	0x9f
 3216 01bb 00000000 		.4byte	0
 3217 01bf 00000000 		.4byte	0
 3218              	.LLST13:
 3219 01c3 00000000 		.4byte	.LVL51
 3220 01c7 14000000 		.4byte	.LVL53
 3221 01cb 0200     		.2byte	0x2
 3222 01cd 30       		.byte	0x30
 3223 01ce 9F       		.byte	0x9f
 3224 01cf 14000000 		.4byte	.LVL53
 3225 01d3 1C000000 		.4byte	.LVL55
 3226 01d7 0100     		.2byte	0x1
 3227 01d9 50       		.byte	0x50
 3228 01da 1C000000 		.4byte	.LVL55
 3229 01de 1E000000 		.4byte	.LVL56
 3230 01e2 0300     		.2byte	0x3
 3231 01e4 70       		.byte	0x70
 3232 01e5 02       		.sleb128 2
 3233 01e6 9F       		.byte	0x9f
 3234 01e7 1E000000 		.4byte	.LVL56
 3235 01eb 20000000 		.4byte	.LVL57
 3236 01ef 0100     		.2byte	0x1
 3237 01f1 50       		.byte	0x50
 3238 01f2 20000000 		.4byte	.LVL57
 3239 01f6 22000000 		.4byte	.LVL58
 3240 01fa 0200     		.2byte	0x2
 3241 01fc 30       		.byte	0x30
 3242 01fd 9F       		.byte	0x9f
 3243 01fe 22000000 		.4byte	.LVL58
 3244 0202 28000000 		.4byte	.LFE10
 3245 0206 0100     		.2byte	0x1
 3246 0208 50       		.byte	0x50
 3247 0209 00000000 		.4byte	0
 3248 020d 00000000 		.4byte	0
 3249              	.LLST14:
 3250 0211 00000000 		.4byte	.LVL59
 3251 0215 7C000000 		.4byte	.LVL69
 3252 0219 0100     		.2byte	0x1
 3253 021b 50       		.byte	0x50
 3254 021c 7C000000 		.4byte	.LVL69
 3255 0220 94000000 		.4byte	.LFE11
 3256 0224 0400     		.2byte	0x4
 3257 0226 F3       		.byte	0xf3
 3258 0227 01       		.uleb128 0x1
 3259 0228 50       		.byte	0x50
 3260 0229 9F       		.byte	0x9f
 3261 022a 00000000 		.4byte	0
 3262 022e 00000000 		.4byte	0
 3263              	.LLST15:
 3264 0232 00000000 		.4byte	.LVL59
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 103


 3265 0236 26000000 		.4byte	.LVL60
 3266 023a 0100     		.2byte	0x1
 3267 023c 52       		.byte	0x52
 3268 023d 26000000 		.4byte	.LVL60
 3269 0241 34000000 		.4byte	.LVL61
 3270 0245 0400     		.2byte	0x4
 3271 0247 F3       		.byte	0xf3
 3272 0248 01       		.uleb128 0x1
 3273 0249 52       		.byte	0x52
 3274 024a 9F       		.byte	0x9f
 3275 024b 34000000 		.4byte	.LVL61
 3276 024f 6A000000 		.4byte	.LVL68
 3277 0253 0100     		.2byte	0x1
 3278 0255 52       		.byte	0x52
 3279 0256 00000000 		.4byte	0
 3280 025a 00000000 		.4byte	0
 3281              	.LLST16:
 3282 025e 54000000 		.4byte	.LVL62
 3283 0262 5E000000 		.4byte	.LVL63
 3284 0266 0100     		.2byte	0x1
 3285 0268 53       		.byte	0x53
 3286 0269 60000000 		.4byte	.LVL64
 3287 026d 62000000 		.4byte	.LVL65
 3288 0271 0100     		.2byte	0x1
 3289 0273 53       		.byte	0x53
 3290 0274 64000000 		.4byte	.LVL66
 3291 0278 68000000 		.4byte	.LVL67
 3292 027c 0100     		.2byte	0x1
 3293 027e 53       		.byte	0x53
 3294 027f 00000000 		.4byte	0
 3295 0283 00000000 		.4byte	0
 3296              	.LLST17:
 3297 0287 00000000 		.4byte	.LVL70
 3298 028b 1C000000 		.4byte	.LVL71
 3299 028f 0100     		.2byte	0x1
 3300 0291 50       		.byte	0x50
 3301 0292 1C000000 		.4byte	.LVL71
 3302 0296 2C000000 		.4byte	.LFE13
 3303 029a 0400     		.2byte	0x4
 3304 029c F3       		.byte	0xf3
 3305 029d 01       		.uleb128 0x1
 3306 029e 50       		.byte	0x50
 3307 029f 9F       		.byte	0x9f
 3308 02a0 00000000 		.4byte	0
 3309 02a4 00000000 		.4byte	0
 3310              	.LLST18:
 3311 02a8 00000000 		.4byte	.LVL72
 3312 02ac 13000000 		.4byte	.LVL73-1
 3313 02b0 0100     		.2byte	0x1
 3314 02b2 50       		.byte	0x50
 3315 02b3 13000000 		.4byte	.LVL73-1
 3316 02b7 3C000000 		.4byte	.LVL80
 3317 02bb 0400     		.2byte	0x4
 3318 02bd F3       		.byte	0xf3
 3319 02be 01       		.uleb128 0x1
 3320 02bf 50       		.byte	0x50
 3321 02c0 9F       		.byte	0x9f
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 104


 3322 02c1 3C000000 		.4byte	.LVL80
 3323 02c5 46000000 		.4byte	.LVL81
 3324 02c9 0100     		.2byte	0x1
 3325 02cb 50       		.byte	0x50
 3326 02cc 46000000 		.4byte	.LVL81
 3327 02d0 50000000 		.4byte	.LFE12
 3328 02d4 0400     		.2byte	0x4
 3329 02d6 F3       		.byte	0xf3
 3330 02d7 01       		.uleb128 0x1
 3331 02d8 50       		.byte	0x50
 3332 02d9 9F       		.byte	0x9f
 3333 02da 00000000 		.4byte	0
 3334 02de 00000000 		.4byte	0
 3335              	.LLST19:
 3336 02e2 00000000 		.4byte	.LVL72
 3337 02e6 13000000 		.4byte	.LVL73-1
 3338 02ea 0100     		.2byte	0x1
 3339 02ec 51       		.byte	0x51
 3340 02ed 13000000 		.4byte	.LVL73-1
 3341 02f1 3C000000 		.4byte	.LVL80
 3342 02f5 0100     		.2byte	0x1
 3343 02f7 56       		.byte	0x56
 3344 02f8 3C000000 		.4byte	.LVL80
 3345 02fc 46000000 		.4byte	.LVL81
 3346 0300 0100     		.2byte	0x1
 3347 0302 51       		.byte	0x51
 3348 0303 46000000 		.4byte	.LVL81
 3349 0307 50000000 		.4byte	.LFE12
 3350 030b 0400     		.2byte	0x4
 3351 030d F3       		.byte	0xf3
 3352 030e 01       		.uleb128 0x1
 3353 030f 51       		.byte	0x51
 3354 0310 9F       		.byte	0x9f
 3355 0311 00000000 		.4byte	0
 3356 0315 00000000 		.4byte	0
 3357              	.LLST20:
 3358 0319 00000000 		.4byte	.LVL72
 3359 031d 13000000 		.4byte	.LVL73-1
 3360 0321 0100     		.2byte	0x1
 3361 0323 52       		.byte	0x52
 3362 0324 13000000 		.4byte	.LVL73-1
 3363 0328 20000000 		.4byte	.LVL75
 3364 032c 0400     		.2byte	0x4
 3365 032e F3       		.byte	0xf3
 3366 032f 01       		.uleb128 0x1
 3367 0330 52       		.byte	0x52
 3368 0331 9F       		.byte	0x9f
 3369 0332 20000000 		.4byte	.LVL75
 3370 0336 3C000000 		.4byte	.LVL80
 3371 033a 0100     		.2byte	0x1
 3372 033c 54       		.byte	0x54
 3373 033d 3C000000 		.4byte	.LVL80
 3374 0341 46000000 		.4byte	.LVL81
 3375 0345 0100     		.2byte	0x1
 3376 0347 52       		.byte	0x52
 3377 0348 46000000 		.4byte	.LVL81
 3378 034c 4A000000 		.4byte	.LVL82
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 105


 3379 0350 0100     		.2byte	0x1
 3380 0352 54       		.byte	0x54
 3381 0353 00000000 		.4byte	0
 3382 0357 00000000 		.4byte	0
 3383              	.LLST21:
 3384 035b 20000000 		.4byte	.LVL75
 3385 035f 24000000 		.4byte	.LVL76
 3386 0363 0200     		.2byte	0x2
 3387 0365 30       		.byte	0x30
 3388 0366 9F       		.byte	0x9f
 3389 0367 24000000 		.4byte	.LVL76
 3390 036b 2E000000 		.4byte	.LVL77
 3391 036f 0100     		.2byte	0x1
 3392 0371 53       		.byte	0x53
 3393 0372 30000000 		.4byte	.LVL78
 3394 0376 39000000 		.4byte	.LVL79-1
 3395 037a 0100     		.2byte	0x1
 3396 037c 53       		.byte	0x53
 3397 037d 00000000 		.4byte	0
 3398 0381 00000000 		.4byte	0
 3399              	.LLST22:
 3400 0385 00000000 		.4byte	.LVL83
 3401 0389 0A000000 		.4byte	.LVL84
 3402 038d 0100     		.2byte	0x1
 3403 038f 50       		.byte	0x50
 3404 0390 0A000000 		.4byte	.LVL84
 3405 0394 18000000 		.4byte	.LFE14
 3406 0398 0400     		.2byte	0x4
 3407 039a F3       		.byte	0xf3
 3408 039b 01       		.uleb128 0x1
 3409 039c 50       		.byte	0x50
 3410 039d 9F       		.byte	0x9f
 3411 039e 00000000 		.4byte	0
 3412 03a2 00000000 		.4byte	0
 3413              	.LLST23:
 3414 03a6 00000000 		.4byte	.LVL86
 3415 03aa 0A000000 		.4byte	.LVL87
 3416 03ae 0100     		.2byte	0x1
 3417 03b0 50       		.byte	0x50
 3418 03b1 0A000000 		.4byte	.LVL87
 3419 03b5 16000000 		.4byte	.LVL89
 3420 03b9 0400     		.2byte	0x4
 3421 03bb F3       		.byte	0xf3
 3422 03bc 01       		.uleb128 0x1
 3423 03bd 50       		.byte	0x50
 3424 03be 9F       		.byte	0x9f
 3425 03bf 16000000 		.4byte	.LVL89
 3426 03c3 18000000 		.4byte	.LVL90
 3427 03c7 0100     		.2byte	0x1
 3428 03c9 50       		.byte	0x50
 3429 03ca 18000000 		.4byte	.LVL90
 3430 03ce 20000000 		.4byte	.LFE16
 3431 03d2 0400     		.2byte	0x4
 3432 03d4 F3       		.byte	0xf3
 3433 03d5 01       		.uleb128 0x1
 3434 03d6 50       		.byte	0x50
 3435 03d7 9F       		.byte	0x9f
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 106


 3436 03d8 00000000 		.4byte	0
 3437 03dc 00000000 		.4byte	0
 3438              	.LLST24:
 3439 03e0 00000000 		.4byte	.LVL86
 3440 03e4 14000000 		.4byte	.LVL88
 3441 03e8 0200     		.2byte	0x2
 3442 03ea 30       		.byte	0x30
 3443 03eb 9F       		.byte	0x9f
 3444 03ec 14000000 		.4byte	.LVL88
 3445 03f0 16000000 		.4byte	.LVL89
 3446 03f4 0100     		.2byte	0x1
 3447 03f6 50       		.byte	0x50
 3448 03f7 16000000 		.4byte	.LVL89
 3449 03fb 18000000 		.4byte	.LVL90
 3450 03ff 0200     		.2byte	0x2
 3451 0401 30       		.byte	0x30
 3452 0402 9F       		.byte	0x9f
 3453 0403 18000000 		.4byte	.LVL90
 3454 0407 20000000 		.4byte	.LFE16
 3455 040b 0100     		.2byte	0x1
 3456 040d 50       		.byte	0x50
 3457 040e 00000000 		.4byte	0
 3458 0412 00000000 		.4byte	0
 3459              	.LLST25:
 3460 0416 00000000 		.4byte	.LVL92
 3461 041a 10000000 		.4byte	.LVL93
 3462 041e 0200     		.2byte	0x2
 3463 0420 30       		.byte	0x30
 3464 0421 9F       		.byte	0x9f
 3465 0422 10000000 		.4byte	.LVL93
 3466 0426 18000000 		.4byte	.LFE18
 3467 042a 0100     		.2byte	0x1
 3468 042c 50       		.byte	0x50
 3469 042d 00000000 		.4byte	0
 3470 0431 00000000 		.4byte	0
 3471              		.section	.debug_aranges,"",%progbits
 3472 0000 C4000000 		.4byte	0xc4
 3473 0004 0200     		.2byte	0x2
 3474 0006 00000000 		.4byte	.Ldebug_info0
 3475 000a 04       		.byte	0x4
 3476 000b 00       		.byte	0
 3477 000c 0000     		.2byte	0
 3478 000e 0000     		.2byte	0
 3479 0010 00000000 		.4byte	.LFB1
 3480 0014 40010000 		.4byte	.LFE1-.LFB1
 3481 0018 00000000 		.4byte	.LFB2
 3482 001c D0000000 		.4byte	.LFE2-.LFB2
 3483 0020 00000000 		.4byte	.LFB0
 3484 0024 24000000 		.4byte	.LFE0-.LFB0
 3485 0028 00000000 		.4byte	.LFB3
 3486 002c 64000000 		.4byte	.LFE3-.LFB3
 3487 0030 00000000 		.4byte	.LFB4
 3488 0034 B8000000 		.4byte	.LFE4-.LFB4
 3489 0038 00000000 		.4byte	.LFB5
 3490 003c 20000000 		.4byte	.LFE5-.LFB5
 3491 0040 00000000 		.4byte	.LFB6
 3492 0044 0C000000 		.4byte	.LFE6-.LFB6
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 107


 3493 0048 00000000 		.4byte	.LFB7
 3494 004c 20000000 		.4byte	.LFE7-.LFB7
 3495 0050 00000000 		.4byte	.LFB8
 3496 0054 0C000000 		.4byte	.LFE8-.LFB8
 3497 0058 00000000 		.4byte	.LFB9
 3498 005c 14000000 		.4byte	.LFE9-.LFB9
 3499 0060 00000000 		.4byte	.LFB10
 3500 0064 28000000 		.4byte	.LFE10-.LFB10
 3501 0068 00000000 		.4byte	.LFB11
 3502 006c 94000000 		.4byte	.LFE11-.LFB11
 3503 0070 00000000 		.4byte	.LFB13
 3504 0074 2C000000 		.4byte	.LFE13-.LFB13
 3505 0078 00000000 		.4byte	.LFB12
 3506 007c 50000000 		.4byte	.LFE12-.LFB12
 3507 0080 00000000 		.4byte	.LFB14
 3508 0084 18000000 		.4byte	.LFE14-.LFB14
 3509 0088 00000000 		.4byte	.LFB15
 3510 008c 0C000000 		.4byte	.LFE15-.LFB15
 3511 0090 00000000 		.4byte	.LFB16
 3512 0094 20000000 		.4byte	.LFE16-.LFB16
 3513 0098 00000000 		.4byte	.LFB17
 3514 009c 20000000 		.4byte	.LFE17-.LFB17
 3515 00a0 00000000 		.4byte	.LFB18
 3516 00a4 18000000 		.4byte	.LFE18-.LFB18
 3517 00a8 00000000 		.4byte	.LFB19
 3518 00ac 10000000 		.4byte	.LFE19-.LFB19
 3519 00b0 00000000 		.4byte	.LFB20
 3520 00b4 10000000 		.4byte	.LFE20-.LFB20
 3521 00b8 00000000 		.4byte	.LFB21
 3522 00bc 10000000 		.4byte	.LFE21-.LFB21
 3523 00c0 00000000 		.4byte	0
 3524 00c4 00000000 		.4byte	0
 3525              		.section	.debug_ranges,"",%progbits
 3526              	.Ldebug_ranges0:
 3527 0000 52000000 		.4byte	.LBB2
 3528 0004 62000000 		.4byte	.LBE2
 3529 0008 64000000 		.4byte	.LBB3
 3530 000c 68000000 		.4byte	.LBE3
 3531 0010 00000000 		.4byte	0
 3532 0014 00000000 		.4byte	0
 3533 0018 00000000 		.4byte	.LFB1
 3534 001c 40010000 		.4byte	.LFE1
 3535 0020 00000000 		.4byte	.LFB2
 3536 0024 D0000000 		.4byte	.LFE2
 3537 0028 00000000 		.4byte	.LFB0
 3538 002c 24000000 		.4byte	.LFE0
 3539 0030 00000000 		.4byte	.LFB3
 3540 0034 64000000 		.4byte	.LFE3
 3541 0038 00000000 		.4byte	.LFB4
 3542 003c B8000000 		.4byte	.LFE4
 3543 0040 00000000 		.4byte	.LFB5
 3544 0044 20000000 		.4byte	.LFE5
 3545 0048 00000000 		.4byte	.LFB6
 3546 004c 0C000000 		.4byte	.LFE6
 3547 0050 00000000 		.4byte	.LFB7
 3548 0054 20000000 		.4byte	.LFE7
 3549 0058 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 108


 3550 005c 0C000000 		.4byte	.LFE8
 3551 0060 00000000 		.4byte	.LFB9
 3552 0064 14000000 		.4byte	.LFE9
 3553 0068 00000000 		.4byte	.LFB10
 3554 006c 28000000 		.4byte	.LFE10
 3555 0070 00000000 		.4byte	.LFB11
 3556 0074 94000000 		.4byte	.LFE11
 3557 0078 00000000 		.4byte	.LFB13
 3558 007c 2C000000 		.4byte	.LFE13
 3559 0080 00000000 		.4byte	.LFB12
 3560 0084 50000000 		.4byte	.LFE12
 3561 0088 00000000 		.4byte	.LFB14
 3562 008c 18000000 		.4byte	.LFE14
 3563 0090 00000000 		.4byte	.LFB15
 3564 0094 0C000000 		.4byte	.LFE15
 3565 0098 00000000 		.4byte	.LFB16
 3566 009c 20000000 		.4byte	.LFE16
 3567 00a0 00000000 		.4byte	.LFB17
 3568 00a4 20000000 		.4byte	.LFE17
 3569 00a8 00000000 		.4byte	.LFB18
 3570 00ac 18000000 		.4byte	.LFE18
 3571 00b0 00000000 		.4byte	.LFB19
 3572 00b4 10000000 		.4byte	.LFE19
 3573 00b8 00000000 		.4byte	.LFB20
 3574 00bc 10000000 		.4byte	.LFE20
 3575 00c0 00000000 		.4byte	.LFB21
 3576 00c4 10000000 		.4byte	.LFE21
 3577 00c8 00000000 		.4byte	0
 3578 00cc 00000000 		.4byte	0
 3579              		.section	.debug_line,"",%progbits
 3580              	.Ldebug_line0:
 3581 0000 F8020000 		.section	.debug_str,"MS",%progbits,1
 3581      02007D00 
 3581      00000201 
 3581      FB0E0D00 
 3581      01010101 
 3582              	.LASF22:
 3583 0000 6570546F 		.ascii	"epToggle\000"
 3583      67676C65 
 3583      00
 3584              	.LASF59:
 3585 0009 696E7465 		.ascii	"interfaceNumber\000"
 3585      72666163 
 3585      654E756D 
 3585      62657200 
 3586              	.LASF76:
 3587 0019 72657375 		.ascii	"result\000"
 3587      6C7400
 3588              	.LASF63:
 3589 0020 636E7472 		.ascii	"cntr\000"
 3589      00
 3590              	.LASF57:
 3591 0025 55534255 		.ascii	"USBUART_IsConfigurationChanged\000"
 3591      4152545F 
 3591      4973436F 
 3591      6E666967 
 3591      75726174 
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 109


 3592              	.LASF84:
 3593 0044 55534255 		.ascii	"USBUART_configuration\000"
 3593      4152545F 
 3593      636F6E66 
 3593      69677572 
 3593      6174696F 
 3594              	.LASF86:
 3595 005a 55534255 		.ascii	"USBUART_deviceStatus\000"
 3595      4152545F 
 3595      64657669 
 3595      63655374 
 3595      61747573 
 3596              	.LASF95:
 3597 006f 43794578 		.ascii	"CyExitCriticalSection\000"
 3597      69744372 
 3597      69746963 
 3597      616C5365 
 3597      6374696F 
 3598              	.LASF65:
 3599 0085 70446174 		.ascii	"pData\000"
 3599      6100
 3600              	.LASF34:
 3601 008b 6570496E 		.ascii	"epIntEn\000"
 3601      74456E00 
 3602              	.LASF2:
 3603 0093 73686F72 		.ascii	"short int\000"
 3603      7420696E 
 3603      7400
 3604              	.LASF18:
 3605 009d 73697A65 		.ascii	"sizetype\000"
 3605      74797065 
 3605      00
 3606              	.LASF46:
 3607 00a6 55534255 		.ascii	"USBUART_arb_eps_struct\000"
 3607      4152545F 
 3607      6172625F 
 3607      6570735F 
 3607      73747275 
 3608              	.LASF24:
 3609 00bd 65704D6F 		.ascii	"epMode\000"
 3609      646500
 3610              	.LASF45:
 3611 00c4 61726245 		.ascii	"arbEp\000"
 3611      7000
 3612              	.LASF74:
 3613 00ca 706F7765 		.ascii	"powerStatus\000"
 3613      72537461 
 3613      74757300 
 3614              	.LASF17:
 3615 00d6 6C6F6E67 		.ascii	"long double\000"
 3615      20646F75 
 3615      626C6500 
 3616              	.LASF75:
 3617 00e2 55534255 		.ascii	"USBUART_RWUEnabled\000"
 3617      4152545F 
 3617      52575545 
 3617      6E61626C 
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 110


 3617      656400
 3618              	.LASF50:
 3619 00f5 6D6F6465 		.ascii	"mode\000"
 3619      00
 3620              	.LASF44:
 3621 00fa 55534255 		.ascii	"USBUART_sie_eps_struct\000"
 3621      4152545F 
 3621      7369655F 
 3621      6570735F 
 3621      73747275 
 3622              	.LASF79:
 3623 0111 55534255 		.ascii	"USBUART_EnableSofInt\000"
 3623      4152545F 
 3623      456E6162 
 3623      6C65536F 
 3623      66496E74 
 3624              	.LASF52:
 3625 0126 55534255 		.ascii	"USBUART_Start\000"
 3625      4152545F 
 3625      53746172 
 3625      7400
 3626              	.LASF89:
 3627 0134 55534255 		.ascii	"USBUART_interfaceSetting\000"
 3627      4152545F 
 3627      696E7465 
 3627      72666163 
 3627      65536574 
 3628              	.LASF10:
 3629 014d 75696E74 		.ascii	"uint16\000"
 3629      313600
 3630              	.LASF39:
 3631 0154 72775261 		.ascii	"rwRa\000"
 3631      00
 3632              	.LASF73:
 3633 0159 55534255 		.ascii	"USBUART_SetPowerStatus\000"
 3633      4152545F 
 3633      53657450 
 3633      6F776572 
 3633      53746174 
 3634              	.LASF32:
 3635 0170 55534255 		.ascii	"USBUART_sie_ep_struct\000"
 3635      4152545F 
 3635      7369655F 
 3635      65705F73 
 3635      74727563 
 3636              	.LASF96:
 3637 0186 4379496E 		.ascii	"CyIntSetPriority\000"
 3637      74536574 
 3637      5072696F 
 3637      72697479 
 3637      00
 3638              	.LASF43:
 3639 0197 73696545 		.ascii	"sieEp\000"
 3639      7000
 3640              	.LASF83:
 3641 019d 55534255 		.ascii	"USBUART_transferState\000"
 3641      4152545F 
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 111


 3641      7472616E 
 3641      73666572 
 3641      53746174 
 3642              	.LASF66:
 3643 01b3 6C656E67 		.ascii	"length\000"
 3643      746800
 3644              	.LASF49:
 3645 01ba 64657669 		.ascii	"device\000"
 3645      636500
 3646              	.LASF12:
 3647 01c1 666C6F61 		.ascii	"float\000"
 3647      7400
 3648              	.LASF77:
 3649 01c7 55534255 		.ascii	"USBUART_GetConfiguration\000"
 3649      4152545F 
 3649      47657443 
 3649      6F6E6669 
 3649      67757261 
 3650              	.LASF67:
 3651 01e0 55534255 		.ascii	"USBUART_EnableOutEP\000"
 3651      4152545F 
 3651      456E6162 
 3651      6C654F75 
 3651      74455000 
 3652              	.LASF80:
 3653 01f4 55534255 		.ascii	"USBUART_DisableSofInt\000"
 3653      4152545F 
 3653      44697361 
 3653      626C6553 
 3653      6F66496E 
 3654              	.LASF6:
 3655 020a 6C6F6E67 		.ascii	"long long int\000"
 3655      206C6F6E 
 3655      6720696E 
 3655      7400
 3656              	.LASF85:
 3657 0218 55534255 		.ascii	"USBUART_configurationChanged\000"
 3657      4152545F 
 3657      636F6E66 
 3657      69677572 
 3657      6174696F 
 3658              	.LASF31:
 3659 0235 65704372 		.ascii	"epCr0\000"
 3659      3000
 3660              	.LASF33:
 3661 023b 65704366 		.ascii	"epCfg\000"
 3661      6700
 3662              	.LASF101:
 3663 0241 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBUART.c\000"
 3663      72617465 
 3663      645F536F 
 3663      75726365 
 3663      5C50536F 
 3664              	.LASF82:
 3665 0262 55534255 		.ascii	"USBUART_device\000"
 3665      4152545F 
 3665      64657669 
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 112


 3665      636500
 3666              	.LASF102:
 3667 0271 433A5C55 		.ascii	"C:\\Users\\schledererj\\sdp\\github\\networking-pro"
 3667      73657273 
 3667      5C736368 
 3667      6C656465 
 3667      7265726A 
 3668 029f 6A656374 		.ascii	"ject\\networking.cydsn\000"
 3668      5C6E6574 
 3668      776F726B 
 3668      696E672E 
 3668      63796473 
 3669              	.LASF68:
 3670 02b5 55534255 		.ascii	"USBUART_ReadOutEP\000"
 3670      4152545F 
 3670      52656164 
 3670      4F757445 
 3670      5000
 3671              	.LASF72:
 3672 02c7 55534255 		.ascii	"USBUART_GetEPAckState\000"
 3672      4152545F 
 3672      47657445 
 3672      5041636B 
 3672      53746174 
 3673              	.LASF90:
 3674 02dd 55534255 		.ascii	"USBUART_deviceAddress\000"
 3674      4152545F 
 3674      64657669 
 3674      63654164 
 3674      64726573 
 3675              	.LASF25:
 3676 02f3 62756666 		.ascii	"buffOffset\000"
 3676      4F666673 
 3676      657400
 3677              	.LASF94:
 3678 02fe 43794465 		.ascii	"CyDelayUs\000"
 3678      6C617955 
 3678      7300
 3679              	.LASF1:
 3680 0308 756E7369 		.ascii	"unsigned char\000"
 3680      676E6564 
 3680      20636861 
 3680      7200
 3681              	.LASF35:
 3682 0316 65705372 		.ascii	"epSr\000"
 3682      00
 3683              	.LASF47:
 3684 031b 55534255 		.ascii	"USBUART_Init\000"
 3684      4152545F 
 3684      496E6974 
 3684      00
 3685              	.LASF0:
 3686 0328 7369676E 		.ascii	"signed char\000"
 3686      65642063 
 3686      68617200 
 3687              	.LASF53:
 3688 0334 55534255 		.ascii	"USBUART_ReInitComponent\000"
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 113


 3688      4152545F 
 3688      5265496E 
 3688      6974436F 
 3688      6D706F6E 
 3689              	.LASF7:
 3690 034c 6C6F6E67 		.ascii	"long long unsigned int\000"
 3690      206C6F6E 
 3690      6720756E 
 3690      7369676E 
 3690      65642069 
 3691              	.LASF70:
 3692 0363 55534255 		.ascii	"USBUART_Force\000"
 3692      4152545F 
 3692      466F7263 
 3692      6500
 3693              	.LASF42:
 3694 0371 55534255 		.ascii	"USBUART_arb_ep_struct\000"
 3694      4152545F 
 3694      6172625F 
 3694      65705F73 
 3694      74727563 
 3695              	.LASF8:
 3696 0387 756E7369 		.ascii	"unsigned int\000"
 3696      676E6564 
 3696      20696E74 
 3696      00
 3697              	.LASF41:
 3698 0394 72774472 		.ascii	"rwDr\000"
 3698      00
 3699              	.LASF37:
 3700 0399 72775761 		.ascii	"rwWa\000"
 3700      00
 3701              	.LASF98:
 3702 039e 43794465 		.ascii	"CyDelayCycles\000"
 3702      6C617943 
 3702      79636C65 
 3702      7300
 3703              	.LASF16:
 3704 03ac 72656733 		.ascii	"reg32\000"
 3704      3200
 3705              	.LASF92:
 3706 03b2 55534255 		.ascii	"USBUART_lastPacketSize\000"
 3706      4152545F 
 3706      6C617374 
 3706      5061636B 
 3706      65745369 
 3707              	.LASF3:
 3708 03c9 73686F72 		.ascii	"short unsigned int\000"
 3708      7420756E 
 3708      7369676E 
 3708      65642069 
 3708      6E7400
 3709              	.LASF40:
 3710 03dc 72775261 		.ascii	"rwRaMsb\000"
 3710      4D736200 
 3711              	.LASF19:
 3712 03e4 61747472 		.ascii	"attrib\000"
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 114


 3712      696200
 3713              	.LASF64:
 3714 03eb 55534255 		.ascii	"USBUART_LoadInEP\000"
 3714      4152545F 
 3714      4C6F6164 
 3714      496E4550 
 3714      00
 3715              	.LASF14:
 3716 03fc 63686172 		.ascii	"char\000"
 3716      00
 3717              	.LASF4:
 3718 0401 6C6F6E67 		.ascii	"long int\000"
 3718      20696E74 
 3718      00
 3719              	.LASF60:
 3720 040a 55534255 		.ascii	"USBUART_GetEPState\000"
 3720      4152545F 
 3720      47657445 
 3720      50537461 
 3720      746500
 3721              	.LASF61:
 3722 041d 65704E75 		.ascii	"epNumber\000"
 3722      6D626572 
 3722      00
 3723              	.LASF81:
 3724 0426 55534255 		.ascii	"USBUART_initVar\000"
 3724      4152545F 
 3724      696E6974 
 3724      56617200 
 3725              	.LASF23:
 3726 0436 61646472 		.ascii	"addr\000"
 3726      00
 3727              	.LASF29:
 3728 043b 6570436E 		.ascii	"epCnt0\000"
 3728      743000
 3729              	.LASF9:
 3730 0442 75696E74 		.ascii	"uint8\000"
 3730      3800
 3731              	.LASF55:
 3732 0448 63723152 		.ascii	"cr1Reg\000"
 3732      656700
 3733              	.LASF30:
 3734 044f 6570436E 		.ascii	"epCnt1\000"
 3734      743100
 3735              	.LASF21:
 3736 0456 68774570 		.ascii	"hwEpState\000"
 3736      53746174 
 3736      6500
 3737              	.LASF87:
 3738 0460 55534255 		.ascii	"USBUART_hidProtocol\000"
 3738      4152545F 
 3738      68696450 
 3738      726F746F 
 3738      636F6C00 
 3739              	.LASF11:
 3740 0474 75696E74 		.ascii	"uint32\000"
 3740      333200
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 115


 3741              	.LASF15:
 3742 047b 72656738 		.ascii	"reg8\000"
 3742      00
 3743              	.LASF5:
 3744 0480 6C6F6E67 		.ascii	"long unsigned int\000"
 3744      20756E73 
 3744      69676E65 
 3744      6420696E 
 3744      7400
 3745              	.LASF13:
 3746 0492 646F7562 		.ascii	"double\000"
 3746      6C6500
 3747              	.LASF78:
 3748 0499 55534255 		.ascii	"USBUART_GetDeviceAddress\000"
 3748      4152545F 
 3748      47657444 
 3748      65766963 
 3748      65416464 
 3749              	.LASF58:
 3750 04b2 55534255 		.ascii	"USBUART_GetInterfaceSetting\000"
 3750      4152545F 
 3750      47657449 
 3750      6E746572 
 3750      66616365 
 3751              	.LASF20:
 3752 04ce 61706945 		.ascii	"apiEpState\000"
 3752      70537461 
 3752      746500
 3753              	.LASF99:
 3754 04d9 55534255 		.ascii	"USBUART_Dp_ClearInterrupt\000"
 3754      4152545F 
 3754      44705F43 
 3754      6C656172 
 3754      496E7465 
 3755              	.LASF26:
 3756 04f3 62756666 		.ascii	"bufferSize\000"
 3756      65725369 
 3756      7A6500
 3757              	.LASF48:
 3758 04fe 55534255 		.ascii	"USBUART_InitComponent\000"
 3758      4152545F 
 3758      496E6974 
 3758      436F6D70 
 3758      6F6E656E 
 3759              	.LASF28:
 3760 0514 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 3760      42554152 
 3760      545F4550 
 3760      5F43544C 
 3760      5F424C4F 
 3761              	.LASF97:
 3762 052b 4379496E 		.ascii	"CyIntSetVector\000"
 3762      74536574 
 3762      56656374 
 3762      6F7200
 3763              	.LASF56:
 3764 053a 55534255 		.ascii	"USBUART_CheckActivity\000"
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 116


 3764      4152545F 
 3764      43686563 
 3764      6B416374 
 3764      69766974 
 3765              	.LASF62:
 3766 0550 55534255 		.ascii	"USBUART_GetEPCount\000"
 3766      4152545F 
 3766      47657445 
 3766      50436F75 
 3766      6E7400
 3767              	.LASF93:
 3768 0563 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3768      74657243 
 3768      72697469 
 3768      63616C53 
 3768      65637469 
 3769              	.LASF88:
 3770 057a 55534255 		.ascii	"USBUART_interfaceNumber\000"
 3770      4152545F 
 3770      696E7465 
 3770      72666163 
 3770      654E756D 
 3771              	.LASF38:
 3772 0592 72775761 		.ascii	"rwWaMsb\000"
 3772      4D736200 
 3773              	.LASF100:
 3774 059a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3774      43313120 
 3774      352E342E 
 3774      31203230 
 3774      31363036 
 3775 05cd 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3775      20726576 
 3775      6973696F 
 3775      6E203233 
 3775      37373135 
 3776 0600 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3776      66756E63 
 3776      74696F6E 
 3776      2D736563 
 3776      74696F6E 
 3777              	.LASF36:
 3778 0628 72657365 		.ascii	"reserved\000"
 3778      72766564 
 3778      00
 3779              	.LASF27:
 3780 0631 696E7465 		.ascii	"interface\000"
 3780      72666163 
 3780      6500
 3781              	.LASF71:
 3782 063b 62537461 		.ascii	"bState\000"
 3782      746500
 3783              	.LASF51:
 3784 0642 656E6162 		.ascii	"enableInterrupts\000"
 3784      6C65496E 
 3784      74657272 
 3784      75707473 
ARM GAS  C:\Users\SCHLED~1\AppData\Local\Temp\ccM6cnlz.s 			page 117


 3784      00
 3785              	.LASF69:
 3786 0653 55534255 		.ascii	"USBUART_DisableOutEP\000"
 3786      4152545F 
 3786      44697361 
 3786      626C654F 
 3786      75744550 
 3787              	.LASF91:
 3788 0668 55534255 		.ascii	"USBUART_EP\000"
 3788      4152545F 
 3788      455000
 3789              	.LASF54:
 3790 0673 55534255 		.ascii	"USBUART_Stop\000"
 3790      4152545F 
 3790      53746F70 
 3790      00
 3791              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
